{
	"id": "1f524f45071820bc48796398d21ab863",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"work/home/zombiecoin.sol": {
				"content": "// 10. “ZombieCoins” 🧟 — Зомби-инфекция на блокчейне\n// Описание: Игроки заражают друг друга, формируют орды, захватывают территории.\n// Функции:\n// infect: Заражает пользователя (хранить статус enum: живой, зомби).\n// formHorde: Формирует орду (структура с участниками, силой).\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Zombie is ERC20, Ownable{\n    enum Status {\n        Alive,\n        Zombie\n    }\n\n    struct User{\n        string name;\n        address wallet;\n        Status status;\n    }\n\n    struct Horde{\n        User[] amount;\n        uint power;\n    }\n\n    struct Territory{\n        string name;\n        uint hordePower;\n        uint reward;\n    }\n\n    mapping(address => User) private users;\n    mapping(string => Horde) public hordes;\n    mapping(string => Territory) public territories;\n    uint public price = 100000 gwei;\n    uint public fee = 10;\n    Territory public City;\n\n    constructor() ERC20(\"Zombie\", \"BRNS\") Ownable(msg.sender) {\n        _mint(msg.sender, 10000000 * 10 ** decimals());\n        City.name = \"Manhattan\";\n        City.hordePower = 100;\n        City.reward = 1000;\n    }\n\n    function register(string memory name) external {\n        users[msg.sender].name = name;\n        users[msg.sender].wallet = msg.sender;\n    }\n    \n    function infect(address target) external payable {\n        require(users[msg.sender].status == Status.Zombie);\n        require(users[target].status != Status.Zombie);\n        users[target].status = Status.Zombie;\n        _transfer(owner(), msg.sender, 100);\n    }\n\n    function formHorde(string memory name) external {\n        hordes[name].amount.push(users[msg.sender]);\n    }\n\n    function getPower(string memory name) external view returns(uint) {\n        return hordes[name].amount.length;\n    }\n\n    function capture(string memory hordeName, string memory name) external {\n        hordes[name].power = hordes[name].amount.length;\n        require(territories[name].reward != 0, \"No such territory\");\n        require(hordes[hordeName].power >= territories[name].hordePower, \"Horde doesn't have enough power\");\n        for (uint i = 0; i < hordes[hordeName].power; i++){\n            _transfer(owner(), hordes[hordeName].amount[i].wallet, territories[name].reward);\n        }\n        territories[name].reward = 0;\n    }\n\n    receive() external payable {\n        uint _fee = msg.value / 100 * fee;\n        (bool success, ) = owner().call{value: _fee}(\"\");\n        if (success){}\n        uint _count = msg.value - _fee;\n        uint count = _count/price;\n        _transfer(owner(), msg.sender, count);\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"work/home/zombiecoin.sol": {
				"Zombie": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "City",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "hordePower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "hordeName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "capture",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "formHorde",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "getPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "hordes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "infect",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "territories",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "hordePower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"work/home/zombiecoin.sol\":634:2893  contract Zombie is ERC20, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"work/home/zombiecoin.sol\":1145:1156  100000 gwei */\n  0x5af3107a4000\n    /* \"work/home/zombiecoin.sol\":1125:1156  uint public price = 100000 gwei */\n  0x09\n  sstore\n    /* \"work/home/zombiecoin.sol\":1180:1182  10 */\n  0x0a\n    /* \"work/home/zombiecoin.sol\":1162:1182  uint public fee = 10 */\n  dup1\n  sstore\n    /* \"work/home/zombiecoin.sol\":1216:1429  constructor() ERC20(\"Zombie\", \"BRNS\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"work/home/zombiecoin.sol\":1262:1272  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0x5a6f6d6269650000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x42524e5300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"work/home/zombiecoin.sol\":1284:1330  _mint(msg.sender, 10000000 * 10 ** decimals()) */\n  tag_16\n    /* \"work/home/zombiecoin.sol\":1290:1300  msg.sender */\n  caller\n    /* \"work/home/zombiecoin.sol\":1319:1329  decimals() */\n  tag_17\n    /* \"work/home/zombiecoin.sol\":1319:1327  decimals */\n  shl(0x20, tag_18)\n    /* \"work/home/zombiecoin.sol\":1319:1329  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"work/home/zombiecoin.sol\":1313:1315  10 */\n  0x0a\n    /* \"work/home/zombiecoin.sol\":1313:1329  10 ** decimals() */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"work/home/zombiecoin.sol\":1302:1310  10000000 */\n  0x989680\n    /* \"work/home/zombiecoin.sol\":1302:1329  10000000 * 10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"work/home/zombiecoin.sol\":1284:1289  _mint */\n  shl(0x20, tag_23)\n    /* \"work/home/zombiecoin.sol\":1284:1330  _mint(msg.sender, 10000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"work/home/zombiecoin.sol\":1340:1363  City.name = \"Manhattan\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x4d616e68617474616e0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"work/home/zombiecoin.sol\":1340:1344  City */\n  0x0b\n    /* \"work/home/zombiecoin.sol\":1340:1349  City.name */\n  0x00\n  add\n    /* \"work/home/zombiecoin.sol\":1340:1363  City.name = \"Manhattan\" */\n  swap1\n  dup2\n  tag_24\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_24:\n  pop\n    /* \"work/home/zombiecoin.sol\":1391:1394  100 */\n  0x64\n    /* \"work/home/zombiecoin.sol\":1373:1377  City */\n  0x0b\n    /* \"work/home/zombiecoin.sol\":1373:1388  City.hordePower */\n  0x01\n  add\n    /* \"work/home/zombiecoin.sol\":1373:1394  City.hordePower = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"work/home/zombiecoin.sol\":1418:1422  1000 */\n  0x03e8\n    /* \"work/home/zombiecoin.sol\":1404:1408  City */\n  0x0b\n    /* \"work/home/zombiecoin.sol\":1404:1415  City.reward */\n  0x02\n  add\n    /* \"work/home/zombiecoin.sol\":1404:1422  City.reward = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"work/home/zombiecoin.sol\":634:2893  contract Zombie is ERC20, Ownable{... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_31\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_37)\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_39\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_42)\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_45:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_46:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_47:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_48:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_79:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_81\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":714:798   */\ntag_80:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_49:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_50:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_51:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_52:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_86\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_51\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":1429:1468   */\n  tag_87\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_51\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_53:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_54:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_55:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_91\n    /* \"#utility.yul\":1818:1852   */\n  tag_92\n    /* \"#utility.yul\":1827:1851   */\n  tag_93\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1818:1852   */\n  tag_54\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1800:1853   */\n  tag_53\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_56:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_57:\n    /* \"#utility.yul\":2056:2095   */\n  tag_96\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_55\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2117:2208   */\n  tag_97\n    /* \"#utility.yul\":2166:2207   */\n  tag_98\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_58:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_59:\n    /* \"#utility.yul\":2377:2409   */\n  tag_101\n  tag_58\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2418:2483   */\n  tag_102\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_57\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_60:\n    /* \"#utility.yul\":2555:2675   */\ntag_104:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_107\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_59\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_61:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_110\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_49\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2906:2935   */\n  tag_111\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_50\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_112:\n    /* \"#utility.yul\":3133:3213   */\n  tag_113\n    /* \"#utility.yul\":3189:3211   */\n  tag_114\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_50\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_109:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_62:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_63:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_117\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_62\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_64:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_119\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_121\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_45\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_123\n  tag_46\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4038:4094   */\ntag_122:\n    /* \"#utility.yul\":4118:4156   */\n  tag_124\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_48\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4203:4270   */\n  tag_125\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_61\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_128:\n    /* \"#utility.yul\":5144:5211   */\n  tag_129\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_64\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_126)\n    /* \"#utility.yul\":4365:4983   */\ntag_127:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_130\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_131:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_135\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_63\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_134:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_126:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_65:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_66:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_138\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_65\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_67:\n    /* \"#utility.yul\":5555:5579   */\n  tag_140\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_66\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_142\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_67\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_68:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6108   */\ntag_69:\n    /* \"#utility.yul\":6048:6056   */\n  0x00\n    /* \"#utility.yul\":6095:6100   */\n  dup2\n    /* \"#utility.yul\":6092:6093   */\n  0x01\n    /* \"#utility.yul\":6088:6101   */\n  shr\n    /* \"#utility.yul\":6067:6101   */\n  swap1\n  pop\n    /* \"#utility.yul\":6006:6108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6114:6962   */\ntag_70:\n    /* \"#utility.yul\":6175:6180   */\n  0x00\n    /* \"#utility.yul\":6182:6186   */\n  dup1\n    /* \"#utility.yul\":6206:6212   */\n  dup3\n    /* \"#utility.yul\":6197:6212   */\n  swap2\n  pop\n    /* \"#utility.yul\":6230:6235   */\n  dup4\n    /* \"#utility.yul\":6221:6235   */\n  swap1\n  pop\n    /* \"#utility.yul\":6244:6956   */\ntag_146:\n    /* \"#utility.yul\":6265:6266   */\n  0x01\n    /* \"#utility.yul\":6255:6263   */\n  dup6\n    /* \"#utility.yul\":6252:6267   */\n  gt\n    /* \"#utility.yul\":6244:6956   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6360:6364   */\n  dup1\n    /* \"#utility.yul\":6355:6358   */\n  dup7\n    /* \"#utility.yul\":6351:6365   */\n  div\n    /* \"#utility.yul\":6345:6349   */\n  dup2\n    /* \"#utility.yul\":6342:6366   */\n  gt\n    /* \"#utility.yul\":6339:6389   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6369:6387   */\n  tag_150\n  tag_68\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6339:6389   */\ntag_149:\n    /* \"#utility.yul\":6419:6420   */\n  0x01\n    /* \"#utility.yul\":6409:6417   */\n  dup6\n    /* \"#utility.yul\":6405:6421   */\n  and\n    /* \"#utility.yul\":6402:6853   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6834:6838   */\n  dup1\n    /* \"#utility.yul\":6827:6832   */\n  dup3\n    /* \"#utility.yul\":6823:6839   */\n  mul\n    /* \"#utility.yul\":6814:6839   */\n  swap2\n  pop\n    /* \"#utility.yul\":6402:6853   */\ntag_151:\n    /* \"#utility.yul\":6884:6888   */\n  dup1\n    /* \"#utility.yul\":6878:6882   */\n  dup2\n    /* \"#utility.yul\":6874:6889   */\n  mul\n    /* \"#utility.yul\":6866:6889   */\n  swap1\n  pop\n    /* \"#utility.yul\":6914:6946   */\n  tag_152\n    /* \"#utility.yul\":6937:6945   */\n  dup6\n    /* \"#utility.yul\":6914:6946   */\n  tag_69\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6902:6946   */\n  swap5\n  pop\n    /* \"#utility.yul\":6244:6956   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6114:6962   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6968:8041   */\ntag_71:\n    /* \"#utility.yul\":7022:7027   */\n  0x00\n    /* \"#utility.yul\":7213:7221   */\n  dup3\n    /* \"#utility.yul\":7203:7243   */\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7234:7235   */\n  0x01\n    /* \"#utility.yul\":7225:7235   */\n  swap1\n  pop\n    /* \"#utility.yul\":7236:7241   */\n  jump(tag_153)\n    /* \"#utility.yul\":7203:7243   */\ntag_154:\n    /* \"#utility.yul\":7262:7266   */\n  dup2\n    /* \"#utility.yul\":7252:7288   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7279:7280   */\n  0x00\n    /* \"#utility.yul\":7270:7280   */\n  swap1\n  pop\n    /* \"#utility.yul\":7281:7286   */\n  jump(tag_153)\n    /* \"#utility.yul\":7252:7288   */\ntag_155:\n    /* \"#utility.yul\":7348:7352   */\n  dup2\n    /* \"#utility.yul\":7396:7397   */\n  0x01\n    /* \"#utility.yul\":7391:7418   */\n  dup2\n  eq\n  tag_157\n  jumpi\n    /* \"#utility.yul\":7432:7433   */\n  0x02\n    /* \"#utility.yul\":7427:7618   */\n  dup2\n  eq\n  tag_158\n  jumpi\n    /* \"#utility.yul\":7341:7618   */\n  jump(tag_156)\n    /* \"#utility.yul\":7391:7418   */\ntag_157:\n    /* \"#utility.yul\":7409:7410   */\n  0x01\n    /* \"#utility.yul\":7400:7410   */\n  swap2\n  pop\n    /* \"#utility.yul\":7411:7416   */\n  pop\n  jump(tag_153)\n    /* \"#utility.yul\":7427:7618   */\ntag_158:\n    /* \"#utility.yul\":7472:7475   */\n  0xff\n    /* \"#utility.yul\":7462:7470   */\n  dup5\n    /* \"#utility.yul\":7459:7476   */\n  gt\n    /* \"#utility.yul\":7456:7499   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7479:7497   */\n  tag_160\n  tag_68\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7456:7499   */\ntag_159:\n    /* \"#utility.yul\":7528:7536   */\n  dup4\n    /* \"#utility.yul\":7525:7526   */\n  0x02\n    /* \"#utility.yul\":7521:7537   */\n  exp\n    /* \"#utility.yul\":7512:7537   */\n  swap2\n  pop\n    /* \"#utility.yul\":7563:7566   */\n  dup5\n    /* \"#utility.yul\":7556:7561   */\n  dup3\n    /* \"#utility.yul\":7553:7567   */\n  gt\n    /* \"#utility.yul\":7550:7590   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7570:7588   */\n  tag_162\n  tag_68\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7550:7590   */\ntag_161:\n    /* \"#utility.yul\":7603:7608   */\n  pop\n  jump(tag_153)\n    /* \"#utility.yul\":7341:7618   */\ntag_156:\n  pop\n    /* \"#utility.yul\":7727:7729   */\n  0x20\n    /* \"#utility.yul\":7717:7725   */\n  dup4\n    /* \"#utility.yul\":7714:7730   */\n  lt\n    /* \"#utility.yul\":7708:7711   */\n  0x0133\n    /* \"#utility.yul\":7702:7706   */\n  dup4\n    /* \"#utility.yul\":7699:7712   */\n  lt\n    /* \"#utility.yul\":7695:7731   */\n  and\n    /* \"#utility.yul\":7677:7679   */\n  0x4e\n    /* \"#utility.yul\":7667:7675   */\n  dup5\n    /* \"#utility.yul\":7664:7680   */\n  lt\n    /* \"#utility.yul\":7659:7661   */\n  0x0b\n    /* \"#utility.yul\":7653:7657   */\n  dup5\n    /* \"#utility.yul\":7650:7662   */\n  lt\n    /* \"#utility.yul\":7646:7681   */\n  and\n    /* \"#utility.yul\":7630:7741   */\n  or\n    /* \"#utility.yul\":7627:7873   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":7783:7791   */\n  dup3\n    /* \"#utility.yul\":7777:7781   */\n  dup3\n    /* \"#utility.yul\":7773:7792   */\n  exp\n    /* \"#utility.yul\":7764:7792   */\n  swap1\n  pop\n    /* \"#utility.yul\":7818:7821   */\n  dup4\n    /* \"#utility.yul\":7811:7816   */\n  dup2\n    /* \"#utility.yul\":7808:7822   */\n  gt\n    /* \"#utility.yul\":7805:7845   */\n  iszero\n  tag_164\n  jumpi\n    /* \"#utility.yul\":7825:7843   */\n  tag_165\n  tag_68\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7805:7845   */\ntag_164:\n    /* \"#utility.yul\":7858:7863   */\n  jump(tag_153)\n    /* \"#utility.yul\":7627:7873   */\ntag_163:\n    /* \"#utility.yul\":7898:7940   */\n  tag_166\n    /* \"#utility.yul\":7936:7939   */\n  dup5\n    /* \"#utility.yul\":7926:7934   */\n  dup5\n    /* \"#utility.yul\":7920:7924   */\n  dup5\n    /* \"#utility.yul\":7917:7918   */\n  0x01\n    /* \"#utility.yul\":7898:7940   */\n  tag_70\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7883:7940   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7972:7976   */\n  dup2\n    /* \"#utility.yul\":7967:7970   */\n  dup5\n    /* \"#utility.yul\":7963:7977   */\n  div\n    /* \"#utility.yul\":7956:7961   */\n  dup2\n    /* \"#utility.yul\":7953:7978   */\n  gt\n    /* \"#utility.yul\":7950:8001   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7981:7999   */\n  tag_168\n  tag_68\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7950:8001   */\ntag_167:\n    /* \"#utility.yul\":8030:8034   */\n  dup2\n    /* \"#utility.yul\":8023:8028   */\n  dup2\n    /* \"#utility.yul\":8019:8035   */\n  mul\n    /* \"#utility.yul\":8010:8035   */\n  swap1\n  pop\n    /* \"#utility.yul\":6968:8041   */\ntag_153:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8047:8133   */\ntag_72:\n    /* \"#utility.yul\":8082:8089   */\n  0x00\n    /* \"#utility.yul\":8122:8126   */\n  0xff\n    /* \"#utility.yul\":8115:8120   */\n  dup3\n    /* \"#utility.yul\":8111:8127   */\n  and\n    /* \"#utility.yul\":8100:8127   */\n  swap1\n  pop\n    /* \"#utility.yul\":8047:8133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8139:8420   */\ntag_20:\n    /* \"#utility.yul\":8197:8202   */\n  0x00\n    /* \"#utility.yul\":8221:8244   */\n  tag_171\n    /* \"#utility.yul\":8239:8243   */\n  dup3\n    /* \"#utility.yul\":8221:8244   */\n  tag_53\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8213:8244   */\n  swap2\n  pop\n    /* \"#utility.yul\":8265:8290   */\n  tag_172\n    /* \"#utility.yul\":8281:8289   */\n  dup4\n    /* \"#utility.yul\":8265:8290   */\n  tag_72\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":8253:8290   */\n  swap3\n  pop\n    /* \"#utility.yul\":8309:8413   */\n  tag_173\n    /* \"#utility.yul\":8346:8412   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8336:8344   */\n  dup5\n    /* \"#utility.yul\":8330:8334   */\n  dup5\n    /* \"#utility.yul\":8309:8413   */\n  tag_71\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8300:8413   */\n  swap1\n  pop\n    /* \"#utility.yul\":8139:8420   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8426:8836   */\ntag_22:\n    /* \"#utility.yul\":8466:8473   */\n  0x00\n    /* \"#utility.yul\":8489:8509   */\n  tag_175\n    /* \"#utility.yul\":8507:8508   */\n  dup3\n    /* \"#utility.yul\":8489:8509   */\n  tag_53\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8484:8509   */\n  swap2\n  pop\n    /* \"#utility.yul\":8523:8543   */\n  tag_176\n    /* \"#utility.yul\":8541:8542   */\n  dup4\n    /* \"#utility.yul\":8523:8543   */\n  tag_53\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8518:8543   */\n  swap3\n  pop\n    /* \"#utility.yul\":8578:8579   */\n  dup3\n    /* \"#utility.yul\":8575:8576   */\n  dup3\n    /* \"#utility.yul\":8571:8580   */\n  mul\n    /* \"#utility.yul\":8600:8630   */\n  tag_177\n    /* \"#utility.yul\":8618:8629   */\n  dup2\n    /* \"#utility.yul\":8600:8630   */\n  tag_53\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8589:8630   */\n  swap2\n  pop\n    /* \"#utility.yul\":8779:8780   */\n  dup3\n    /* \"#utility.yul\":8770:8777   */\n  dup3\n    /* \"#utility.yul\":8766:8781   */\n  div\n    /* \"#utility.yul\":8763:8764   */\n  dup5\n    /* \"#utility.yul\":8760:8782   */\n  eq\n    /* \"#utility.yul\":8740:8741   */\n  dup4\n    /* \"#utility.yul\":8733:8742   */\n  iszero\n    /* \"#utility.yul\":8713:8796   */\n  or\n    /* \"#utility.yul\":8690:8829   */\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8809:8827   */\n  tag_179\n  tag_68\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8690:8829   */\ntag_178:\n    /* \"#utility.yul\":8474:8836   */\n  pop\n    /* \"#utility.yul\":8426:8836   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8842:9033   */\ntag_36:\n    /* \"#utility.yul\":8882:8885   */\n  0x00\n    /* \"#utility.yul\":8901:8921   */\n  tag_181\n    /* \"#utility.yul\":8919:8920   */\n  dup3\n    /* \"#utility.yul\":8901:8921   */\n  tag_53\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8896:8921   */\n  swap2\n  pop\n    /* \"#utility.yul\":8935:8955   */\n  tag_182\n    /* \"#utility.yul\":8953:8954   */\n  dup4\n    /* \"#utility.yul\":8935:8955   */\n  tag_53\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8930:8955   */\n  swap3\n  pop\n    /* \"#utility.yul\":8978:8979   */\n  dup3\n    /* \"#utility.yul\":8975:8976   */\n  dup3\n    /* \"#utility.yul\":8971:8980   */\n  add\n    /* \"#utility.yul\":8964:8980   */\n  swap1\n  pop\n    /* \"#utility.yul\":8999:9002   */\n  dup1\n    /* \"#utility.yul\":8996:8997   */\n  dup3\n    /* \"#utility.yul\":8993:9003   */\n  gt\n    /* \"#utility.yul\":8990:9026   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":9006:9024   */\n  tag_184\n  tag_68\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8990:9026   */\ntag_183:\n    /* \"#utility.yul\":8842:9033   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9039:9157   */\ntag_73:\n    /* \"#utility.yul\":9126:9150   */\n  tag_186\n    /* \"#utility.yul\":9144:9149   */\n  dup2\n    /* \"#utility.yul\":9126:9150   */\n  tag_53\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":9121:9124   */\n  dup3\n    /* \"#utility.yul\":9114:9151   */\n  mstore\n    /* \"#utility.yul\":9039:9157   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9163:9605   */\ntag_40:\n    /* \"#utility.yul\":9312:9316   */\n  0x00\n    /* \"#utility.yul\":9350:9352   */\n  0x60\n    /* \"#utility.yul\":9339:9348   */\n  dup3\n    /* \"#utility.yul\":9335:9353   */\n  add\n    /* \"#utility.yul\":9327:9353   */\n  swap1\n  pop\n    /* \"#utility.yul\":9363:9434   */\n  tag_188\n    /* \"#utility.yul\":9431:9432   */\n  0x00\n    /* \"#utility.yul\":9420:9429   */\n  dup4\n    /* \"#utility.yul\":9416:9433   */\n  add\n    /* \"#utility.yul\":9407:9413   */\n  dup7\n    /* \"#utility.yul\":9363:9434   */\n  tag_67\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":9444:9516   */\n  tag_189\n    /* \"#utility.yul\":9512:9514   */\n  0x20\n    /* \"#utility.yul\":9501:9510   */\n  dup4\n    /* \"#utility.yul\":9497:9515   */\n  add\n    /* \"#utility.yul\":9488:9494   */\n  dup6\n    /* \"#utility.yul\":9444:9516   */\n  tag_73\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9526:9598   */\n  tag_190\n    /* \"#utility.yul\":9594:9596   */\n  0x40\n    /* \"#utility.yul\":9583:9592   */\n  dup4\n    /* \"#utility.yul\":9579:9597   */\n  add\n    /* \"#utility.yul\":9570:9576   */\n  dup5\n    /* \"#utility.yul\":9526:9598   */\n  tag_73\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9163:9605   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9611:9833   */\ntag_44:\n    /* \"#utility.yul\":9704:9708   */\n  0x00\n    /* \"#utility.yul\":9742:9744   */\n  0x20\n    /* \"#utility.yul\":9731:9740   */\n  dup3\n    /* \"#utility.yul\":9727:9745   */\n  add\n    /* \"#utility.yul\":9719:9745   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9826   */\n  tag_192\n    /* \"#utility.yul\":9823:9824   */\n  0x00\n    /* \"#utility.yul\":9812:9821   */\n  dup4\n    /* \"#utility.yul\":9808:9825   */\n  add\n    /* \"#utility.yul\":9799:9805   */\n  dup5\n    /* \"#utility.yul\":9755:9826   */\n  tag_73\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9611:9833   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"work/home/zombiecoin.sol\":634:2893  contract Zombie is ERC20, Ownable{... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"work/home/zombiecoin.sol\":634:2893  contract Zombie is ERC20, Ownable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xbc3d6dc3\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbc3d6dc3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc1280ae7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2c298be\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x96eb64a9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa035b1fe\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa0d81ba6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x651dc0df\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x651dc0df\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x738f5b5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x86e6e222\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"work/home/zombiecoin.sol\":2648:2657  uint _fee */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2678:2681  fee */\n      sload(0x0a)\n        /* \"work/home/zombiecoin.sol\":2672:2675  100 */\n      0x64\n        /* \"work/home/zombiecoin.sol\":2660:2669  msg.value */\n      callvalue\n        /* \"work/home/zombiecoin.sol\":2660:2675  msg.value / 100 */\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"work/home/zombiecoin.sol\":2660:2681  msg.value / 100 * fee */\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"work/home/zombiecoin.sol\":2648:2681  uint _fee = msg.value / 100 * fee */\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2692:2704  bool success */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2710:2717  owner() */\n      tag_34\n        /* \"work/home/zombiecoin.sol\":2710:2715  owner */\n      tag_35\n        /* \"work/home/zombiecoin.sol\":2710:2717  owner() */\n      jump\t// in\n    tag_34:\n        /* \"work/home/zombiecoin.sol\":2710:2722  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"work/home/zombiecoin.sol\":2730:2734  _fee */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2710:2739  owner().call{value: _fee}(\"\") */\n      mload(0x40)\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_40\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_39)\n    tag_40:\n      0x60\n      swap2\n      pop\n    tag_39:\n      pop\n        /* \"work/home/zombiecoin.sol\":2691:2739  (bool success, ) = owner().call{value: _fee}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2772:2783  uint _count */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2798:2802  _fee */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2786:2795  msg.value */\n      callvalue\n        /* \"work/home/zombiecoin.sol\":2786:2802  msg.value - _fee */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"work/home/zombiecoin.sol\":2772:2802  uint _count = msg.value - _fee */\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2812:2822  uint count */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2832:2837  price */\n      sload(0x09)\n        /* \"work/home/zombiecoin.sol\":2825:2831  _count */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2825:2837  _count/price */\n      tag_44\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_44:\n        /* \"work/home/zombiecoin.sol\":2812:2837  uint count = _count/price */\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2847:2884  _transfer(owner(), msg.sender, count) */\n      tag_45\n        /* \"work/home/zombiecoin.sol\":2857:2864  owner() */\n      tag_46\n        /* \"work/home/zombiecoin.sol\":2857:2862  owner */\n      tag_35\n        /* \"work/home/zombiecoin.sol\":2857:2864  owner() */\n      jump\t// in\n    tag_46:\n        /* \"work/home/zombiecoin.sol\":2866:2876  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":2878:2883  count */\n      dup4\n        /* \"work/home/zombiecoin.sol\":2847:2856  _transfer */\n      tag_47\n        /* \"work/home/zombiecoin.sol\":2847:2884  _transfer(owner(), msg.sender, count) */\n      jump\t// in\n    tag_45:\n        /* \"work/home/zombiecoin.sol\":2638:2891  {... */\n      stop\n        /* \"work/home/zombiecoin.sol\":634:2893  contract Zombie is ERC20, Ownable{... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":2090:2605  function capture(string memory hordeName, string memory name) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"work/home/zombiecoin.sol\":1028:1066  mapping(string => Horde) public hordes */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1072:1119  mapping(string => Territory) public territories */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1585:1848  function infect(address target) external payable {... */\n    tag_15:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      stop\n        /* \"work/home/zombiecoin.sol\":1125:1156  uint public price = 100000 gwei */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1188:1209  Territory public City */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1854:1962  function formHorde(string memory name) external {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"work/home/zombiecoin.sol\":1968:2084  function getPower(string memory name) external view returns(uint) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1162:1182  uint public fee = 10 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"work/home/zombiecoin.sol\":1435:1575  function register(string memory name) external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_159\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_163\n      jump\t// in\n    tag_164:\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":2090:2605  function capture(string memory hordeName, string memory name) external {... */\n    tag_80:\n        /* \"work/home/zombiecoin.sol\":2192:2198  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2199:2203  name */\n      dup2\n        /* \"work/home/zombiecoin.sol\":2192:2204  hordes[name] */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2192:2211  hordes[name].amount */\n      0x00\n      add\n        /* \"work/home/zombiecoin.sol\":2192:2218  hordes[name].amount.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2171:2177  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2178:2182  name */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2171:2183  hordes[name] */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_183:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2171:2189  hordes[name].power */\n      0x01\n      add\n        /* \"work/home/zombiecoin.sol\":2171:2218  hordes[name].power = hordes[name].amount.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"work/home/zombiecoin.sol\":2264:2265  0 */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2236:2247  territories */\n      0x08\n        /* \"work/home/zombiecoin.sol\":2248:2252  name */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2236:2253  territories[name] */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_184:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2236:2260  territories[name].reward */\n      0x02\n      add\n      sload\n        /* \"work/home/zombiecoin.sol\":2236:2265  territories[name].reward != 0 */\n      sub\n        /* \"work/home/zombiecoin.sol\":2228:2287  require(territories[name].reward != 0, \"No such territory\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"work/home/zombiecoin.sol\":2332:2343  territories */\n      0x08\n        /* \"work/home/zombiecoin.sol\":2344:2348  name */\n      dup2\n        /* \"work/home/zombiecoin.sol\":2332:2349  territories[name] */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_188:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2332:2360  territories[name].hordePower */\n      0x01\n      add\n      sload\n        /* \"work/home/zombiecoin.sol\":2305:2311  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2312:2321  hordeName */\n      dup4\n        /* \"work/home/zombiecoin.sol\":2305:2322  hordes[hordeName] */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_189:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2305:2328  hordes[hordeName].power */\n      0x01\n      add\n      sload\n        /* \"work/home/zombiecoin.sol\":2305:2360  hordes[hordeName].power >= territories[name].hordePower */\n      lt\n      iszero\n        /* \"work/home/zombiecoin.sol\":2297:2396  require(hordes[hordeName].power >= territories[name].hordePower, \"Horde doesn't have enough power\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"work/home/zombiecoin.sol\":2411:2417  uint i */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2406:2561  for (uint i = 0; i < hordes[hordeName].power; i++){... */\n    tag_193:\n        /* \"work/home/zombiecoin.sol\":2427:2433  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2434:2443  hordeName */\n      dup4\n        /* \"work/home/zombiecoin.sol\":2427:2444  hordes[hordeName] */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_196:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2427:2450  hordes[hordeName].power */\n      0x01\n      add\n      sload\n        /* \"work/home/zombiecoin.sol\":2423:2424  i */\n      dup2\n        /* \"work/home/zombiecoin.sol\":2423:2450  i < hordes[hordeName].power */\n      lt\n        /* \"work/home/zombiecoin.sol\":2406:2561  for (uint i = 0; i < hordes[hordeName].power; i++){... */\n      iszero\n      tag_194\n      jumpi\n        /* \"work/home/zombiecoin.sol\":2470:2550  _transfer(owner(), hordes[hordeName].amount[i].wallet, territories[name].reward) */\n      tag_197\n        /* \"work/home/zombiecoin.sol\":2480:2487  owner() */\n      tag_198\n        /* \"work/home/zombiecoin.sol\":2480:2485  owner */\n      tag_35\n        /* \"work/home/zombiecoin.sol\":2480:2487  owner() */\n      jump\t// in\n    tag_198:\n        /* \"work/home/zombiecoin.sol\":2489:2495  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2496:2505  hordeName */\n      dup6\n        /* \"work/home/zombiecoin.sol\":2489:2506  hordes[hordeName] */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_199:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2489:2513  hordes[hordeName].amount */\n      0x00\n      add\n        /* \"work/home/zombiecoin.sol\":2514:2515  i */\n      dup4\n        /* \"work/home/zombiecoin.sol\":2489:2516  hordes[hordeName].amount[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n    tag_200:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"work/home/zombiecoin.sol\":2489:2523  hordes[hordeName].amount[i].wallet */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"work/home/zombiecoin.sol\":2525:2536  territories */\n      0x08\n        /* \"work/home/zombiecoin.sol\":2537:2541  name */\n      dup6\n        /* \"work/home/zombiecoin.sol\":2525:2542  territories[name] */\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_204:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2525:2549  territories[name].reward */\n      0x02\n      add\n      sload\n        /* \"work/home/zombiecoin.sol\":2470:2479  _transfer */\n      tag_47\n        /* \"work/home/zombiecoin.sol\":2470:2550  _transfer(owner(), hordes[hordeName].amount[i].wallet, territories[name].reward) */\n      jump\t// in\n    tag_197:\n        /* \"work/home/zombiecoin.sol\":2452:2455  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"work/home/zombiecoin.sol\":2406:2561  for (uint i = 0; i < hordes[hordeName].power; i++){... */\n      jump(tag_193)\n    tag_194:\n      pop\n        /* \"work/home/zombiecoin.sol\":2597:2598  0 */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2570:2581  territories */\n      0x08\n        /* \"work/home/zombiecoin.sol\":2582:2586  name */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2570:2587  territories[name] */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_205:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2570:2594  territories[name].reward */\n      0x02\n      add\n        /* \"work/home/zombiecoin.sol\":2570:2598  territories[name].reward = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"work/home/zombiecoin.sol\":2090:2605  function capture(string memory hordeName, string memory name) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1028:1066  mapping(string => Horde) public hordes */\n    tag_94:\n      0x07\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1072:1119  mapping(string => Territory) public territories */\n    tag_99:\n      0x08\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_213\n      swap1\n      tag_163\n      jump\t// in\n    tag_213:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_163\n      jump\t// in\n    tag_214:\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_216\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_215)\n    tag_216:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_217:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_217\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_163\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_220\n      swap1\n      tag_163\n      jump\t// in\n    tag_220:\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_222\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_221)\n    tag_222:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_223:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_223\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1585:1848  function infect(address target) external payable {... */\n    tag_112:\n        /* \"work/home/zombiecoin.sol\":1680:1693  Status.Zombie */\n      0x01\n        /* \"work/home/zombiecoin.sol\":1652:1693  users[msg.sender].status == Status.Zombie */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n    tag_225:\n        /* \"work/home/zombiecoin.sol\":1652:1657  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1652:1669  users[msg.sender] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1658:1668  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1652:1669  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1652:1676  users[msg.sender].status */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"work/home/zombiecoin.sol\":1652:1693  users[msg.sender].status == Status.Zombie */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_228\n      jumpi\n      tag_229\n      tag_227\n      jump\t// in\n    tag_229:\n    tag_228:\n      eq\n        /* \"work/home/zombiecoin.sol\":1644:1694  require(users[msg.sender].status == Status.Zombie) */\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n        /* \"work/home/zombiecoin.sol\":1736:1749  Status.Zombie */\n      0x01\n        /* \"work/home/zombiecoin.sol\":1712:1749  users[target].status != Status.Zombie */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_227\n      jump\t// in\n    tag_232:\n    tag_231:\n        /* \"work/home/zombiecoin.sol\":1712:1717  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1712:1725  users[target] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1718:1724  target */\n      dup4\n        /* \"work/home/zombiecoin.sol\":1712:1725  users[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1712:1732  users[target].status */\n      0x01\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"work/home/zombiecoin.sol\":1712:1749  users[target].status != Status.Zombie */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_227\n      jump\t// in\n    tag_234:\n    tag_233:\n      sub\n        /* \"work/home/zombiecoin.sol\":1704:1750  require(users[target].status != Status.Zombie) */\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n        /* \"work/home/zombiecoin.sol\":1783:1796  Status.Zombie */\n      0x01\n        /* \"work/home/zombiecoin.sol\":1760:1765  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1760:1773  users[target] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1766:1772  target */\n      dup4\n        /* \"work/home/zombiecoin.sol\":1760:1773  users[target] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1760:1780  users[target].status */\n      0x01\n      add\n      0x14\n        /* \"work/home/zombiecoin.sol\":1760:1796  users[target].status = Status.Zombie */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_227\n      jump\t// in\n    tag_237:\n    tag_236:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"work/home/zombiecoin.sol\":1806:1841  _transfer(owner(), msg.sender, 100) */\n      tag_238\n        /* \"work/home/zombiecoin.sol\":1816:1823  owner() */\n      tag_239\n        /* \"work/home/zombiecoin.sol\":1816:1821  owner */\n      tag_35\n        /* \"work/home/zombiecoin.sol\":1816:1823  owner() */\n      jump\t// in\n    tag_239:\n        /* \"work/home/zombiecoin.sol\":1825:1835  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1837:1840  100 */\n      0x64\n        /* \"work/home/zombiecoin.sol\":1806:1815  _transfer */\n      tag_47\n        /* \"work/home/zombiecoin.sol\":1806:1841  _transfer(owner(), msg.sender, 100) */\n      jump\t// in\n    tag_238:\n        /* \"work/home/zombiecoin.sol\":1585:1848  function infect(address target) external payable {... */\n      pop\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1125:1156  uint public price = 100000 gwei */\n    tag_115:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1188:1209  Territory public City */\n    tag_119:\n      0x0b\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_240\n      swap1\n      tag_163\n      jump\t// in\n    tag_240:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_241\n      swap1\n      tag_163\n      jump\t// in\n    tag_241:\n      dup1\n      iszero\n      tag_242\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_243\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_242)\n    tag_243:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_244:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_244\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1854:1962  function formHorde(string memory name) external {... */\n    tag_129:\n        /* \"work/home/zombiecoin.sol\":1912:1918  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":1919:1923  name */\n      dup2\n        /* \"work/home/zombiecoin.sol\":1912:1924  hordes[name] */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_249:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1912:1931  hordes[name].amount */\n      0x00\n      add\n        /* \"work/home/zombiecoin.sol\":1937:1942  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1937:1954  users[msg.sender] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1943:1953  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1937:1954  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1912:1955  hordes[name].amount.push(users[msg.sender]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      pop\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x01\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_253\n      jumpi\n      tag_254\n      tag_227\n      jump\t// in\n    tag_254:\n    tag_253:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"work/home/zombiecoin.sol\":1854:1962  function formHorde(string memory name) external {... */\n      pop\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1968:2084  function getPower(string memory name) external view returns(uint) {... */\n    tag_133:\n        /* \"work/home/zombiecoin.sol\":2028:2032  uint */\n      0x00\n        /* \"work/home/zombiecoin.sol\":2051:2057  hordes */\n      0x07\n        /* \"work/home/zombiecoin.sol\":2058:2062  name */\n      dup3\n        /* \"work/home/zombiecoin.sol\":2051:2063  hordes[name] */\n      mload(0x40)\n      tag_256\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_256:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"work/home/zombiecoin.sol\":2051:2070  hordes[name].amount */\n      0x00\n      add\n        /* \"work/home/zombiecoin.sol\":2051:2077  hordes[name].amount.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":2044:2077  return hordes[name].amount.length */\n      swap1\n      pop\n        /* \"work/home/zombiecoin.sol\":1968:2084  function getPower(string memory name) external view returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1162:1182  uint public fee = 10 */\n    tag_143:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"work/home/zombiecoin.sol\":1435:1575  function register(string memory name) external {... */\n    tag_148:\n        /* \"work/home/zombiecoin.sol\":1517:1521  name */\n      dup1\n        /* \"work/home/zombiecoin.sol\":1492:1497  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1492:1509  users[msg.sender] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1498:1508  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1492:1509  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1492:1514  users[msg.sender].name */\n      0x00\n      add\n        /* \"work/home/zombiecoin.sol\":1492:1521  users[msg.sender].name = name */\n      swap1\n      dup2\n      tag_259\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      pop\n        /* \"work/home/zombiecoin.sol\":1558:1568  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1531:1536  users */\n      0x06\n        /* \"work/home/zombiecoin.sol\":1531:1548  users[msg.sender] */\n      0x00\n        /* \"work/home/zombiecoin.sol\":1537:1547  msg.sender */\n      caller\n        /* \"work/home/zombiecoin.sol\":1531:1548  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"work/home/zombiecoin.sol\":1531:1555  users[msg.sender].wallet */\n      0x01\n      add\n      0x00\n        /* \"work/home/zombiecoin.sol\":1531:1568  users[msg.sender].wallet = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"work/home/zombiecoin.sol\":1435:1575  function register(string memory name) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_212\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_271)\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_276)\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_277\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_301\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_302:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_303:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x12\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:456   */\n    tag_304:\n        /* \"#utility.yul\":324:401   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:402   */\n      mstore\n        /* \"#utility.yul\":421:425   */\n      0x11\n        /* \"#utility.yul\":418:419   */\n      0x04\n        /* \"#utility.yul\":411:426   */\n      mstore\n        /* \"#utility.yul\":445:449   */\n      0x24\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":435:450   */\n      revert\n        /* \"#utility.yul\":462:647   */\n    tag_31:\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":519:539   */\n      tag_365\n        /* \"#utility.yul\":537:538   */\n      dup3\n        /* \"#utility.yul\":519:539   */\n      tag_302\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":514:539   */\n      swap2\n      pop\n        /* \"#utility.yul\":553:573   */\n      tag_366\n        /* \"#utility.yul\":571:572   */\n      dup4\n        /* \"#utility.yul\":553:573   */\n      tag_302\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":548:573   */\n      swap3\n      pop\n        /* \"#utility.yul\":592:593   */\n      dup3\n        /* \"#utility.yul\":582:617   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":597:615   */\n      tag_368\n      tag_303\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":582:617   */\n    tag_367:\n        /* \"#utility.yul\":639:640   */\n      dup3\n        /* \"#utility.yul\":636:637   */\n      dup3\n        /* \"#utility.yul\":632:641   */\n      div\n        /* \"#utility.yul\":627:641   */\n      swap1\n      pop\n        /* \"#utility.yul\":462:647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:1063   */\n    tag_33:\n        /* \"#utility.yul\":693:700   */\n      0x00\n        /* \"#utility.yul\":716:736   */\n      tag_370\n        /* \"#utility.yul\":734:735   */\n      dup3\n        /* \"#utility.yul\":716:736   */\n      tag_302\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":711:736   */\n      swap2\n      pop\n        /* \"#utility.yul\":750:770   */\n      tag_371\n        /* \"#utility.yul\":768:769   */\n      dup4\n        /* \"#utility.yul\":750:770   */\n      tag_302\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":745:770   */\n      swap3\n      pop\n        /* \"#utility.yul\":805:806   */\n      dup3\n        /* \"#utility.yul\":802:803   */\n      dup3\n        /* \"#utility.yul\":798:807   */\n      mul\n        /* \"#utility.yul\":827:857   */\n      tag_372\n        /* \"#utility.yul\":845:856   */\n      dup2\n        /* \"#utility.yul\":827:857   */\n      tag_302\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":816:857   */\n      swap2\n      pop\n        /* \"#utility.yul\":1006:1007   */\n      dup3\n        /* \"#utility.yul\":997:1004   */\n      dup3\n        /* \"#utility.yul\":993:1008   */\n      div\n        /* \"#utility.yul\":990:991   */\n      dup5\n        /* \"#utility.yul\":987:1009   */\n      eq\n        /* \"#utility.yul\":967:968   */\n      dup4\n        /* \"#utility.yul\":960:969   */\n      iszero\n        /* \"#utility.yul\":940:1023   */\n      or\n        /* \"#utility.yul\":917:1056   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1036:1054   */\n      tag_374\n      tag_304\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":917:1056   */\n    tag_373:\n        /* \"#utility.yul\":701:1063   */\n      pop\n        /* \"#utility.yul\":653:1063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1216   */\n    tag_305:\n        /* \"#utility.yul\":1170:1181   */\n      0x00\n        /* \"#utility.yul\":1207:1210   */\n      dup2\n        /* \"#utility.yul\":1192:1210   */\n      swap1\n      pop\n        /* \"#utility.yul\":1069:1216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1222:1336   */\n    tag_306:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1342:1740   */\n    tag_307:\n        /* \"#utility.yul\":1501:1504   */\n      0x00\n        /* \"#utility.yul\":1522:1605   */\n      tag_378\n        /* \"#utility.yul\":1603:1604   */\n      0x00\n        /* \"#utility.yul\":1598:1601   */\n      dup4\n        /* \"#utility.yul\":1522:1605   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1515:1605   */\n      swap2\n      pop\n        /* \"#utility.yul\":1614:1707   */\n      tag_379\n        /* \"#utility.yul\":1703:1706   */\n      dup3\n        /* \"#utility.yul\":1614:1707   */\n      tag_306\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1727:1730   */\n      dup3\n        /* \"#utility.yul\":1723:1734   */\n      add\n        /* \"#utility.yul\":1716:1734   */\n      swap1\n      pop\n        /* \"#utility.yul\":1342:1740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1746:2125   */\n    tag_37:\n        /* \"#utility.yul\":1930:1933   */\n      0x00\n        /* \"#utility.yul\":1952:2099   */\n      tag_381\n        /* \"#utility.yul\":2095:2098   */\n      dup3\n        /* \"#utility.yul\":1952:2099   */\n      tag_307\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":1945:2099   */\n      swap2\n      pop\n        /* \"#utility.yul\":2116:2119   */\n      dup2\n        /* \"#utility.yul\":2109:2119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1746:2125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2131:2325   */\n    tag_43:\n        /* \"#utility.yul\":2171:2175   */\n      0x00\n        /* \"#utility.yul\":2191:2211   */\n      tag_383\n        /* \"#utility.yul\":2209:2210   */\n      dup3\n        /* \"#utility.yul\":2191:2211   */\n      tag_302\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2186:2211   */\n      swap2\n      pop\n        /* \"#utility.yul\":2225:2245   */\n      tag_384\n        /* \"#utility.yul\":2243:2244   */\n      dup4\n        /* \"#utility.yul\":2225:2245   */\n      tag_302\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2220:2245   */\n      swap3\n      pop\n        /* \"#utility.yul\":2269:2270   */\n      dup3\n        /* \"#utility.yul\":2266:2267   */\n      dup3\n        /* \"#utility.yul\":2262:2271   */\n      sub\n        /* \"#utility.yul\":2254:2271   */\n      swap1\n      pop\n        /* \"#utility.yul\":2293:2294   */\n      dup2\n        /* \"#utility.yul\":2287:2291   */\n      dup2\n        /* \"#utility.yul\":2284:2295   */\n      gt\n        /* \"#utility.yul\":2281:2318   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2298:2316   */\n      tag_386\n      tag_304\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2281:2318   */\n    tag_385:\n        /* \"#utility.yul\":2131:2325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2331:2430   */\n    tag_308:\n        /* \"#utility.yul\":2383:2389   */\n      0x00\n        /* \"#utility.yul\":2417:2422   */\n      dup2\n        /* \"#utility.yul\":2411:2423   */\n      mload\n        /* \"#utility.yul\":2401:2423   */\n      swap1\n      pop\n        /* \"#utility.yul\":2331:2430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2436:2605   */\n    tag_309:\n        /* \"#utility.yul\":2520:2531   */\n      0x00\n        /* \"#utility.yul\":2554:2560   */\n      dup3\n        /* \"#utility.yul\":2549:2552   */\n      dup3\n        /* \"#utility.yul\":2542:2561   */\n      mstore\n        /* \"#utility.yul\":2594:2598   */\n      0x20\n        /* \"#utility.yul\":2589:2592   */\n      dup3\n        /* \"#utility.yul\":2585:2599   */\n      add\n        /* \"#utility.yul\":2570:2599   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2611:2750   */\n    tag_310:\n        /* \"#utility.yul\":2700:2706   */\n      dup3\n        /* \"#utility.yul\":2695:2698   */\n      dup2\n        /* \"#utility.yul\":2690:2693   */\n      dup4\n        /* \"#utility.yul\":2684:2707   */\n      mcopy\n        /* \"#utility.yul\":2741:2742   */\n      0x00\n        /* \"#utility.yul\":2732:2738   */\n      dup4\n        /* \"#utility.yul\":2727:2730   */\n      dup4\n        /* \"#utility.yul\":2723:2739   */\n      add\n        /* \"#utility.yul\":2716:2743   */\n      mstore\n        /* \"#utility.yul\":2611:2750   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2756:2858   */\n    tag_311:\n        /* \"#utility.yul\":2797:2803   */\n      0x00\n        /* \"#utility.yul\":2848:2850   */\n      0x1f\n        /* \"#utility.yul\":2844:2851   */\n      not\n        /* \"#utility.yul\":2839:2841   */\n      0x1f\n        /* \"#utility.yul\":2832:2837   */\n      dup4\n        /* \"#utility.yul\":2828:2842   */\n      add\n        /* \"#utility.yul\":2824:2852   */\n      and\n        /* \"#utility.yul\":2814:2852   */\n      swap1\n      pop\n        /* \"#utility.yul\":2756:2858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3241   */\n    tag_312:\n        /* \"#utility.yul\":2952:2955   */\n      0x00\n        /* \"#utility.yul\":2980:3019   */\n      tag_392\n        /* \"#utility.yul\":3013:3018   */\n      dup3\n        /* \"#utility.yul\":2980:3019   */\n      tag_308\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3035:3106   */\n      tag_393\n        /* \"#utility.yul\":3099:3105   */\n      dup2\n        /* \"#utility.yul\":3094:3097   */\n      dup6\n        /* \"#utility.yul\":3035:3106   */\n      tag_309\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3028:3106   */\n      swap4\n      pop\n        /* \"#utility.yul\":3115:3180   */\n      tag_394\n        /* \"#utility.yul\":3173:3179   */\n      dup2\n        /* \"#utility.yul\":3168:3171   */\n      dup6\n        /* \"#utility.yul\":3161:3165   */\n      0x20\n        /* \"#utility.yul\":3154:3159   */\n      dup7\n        /* \"#utility.yul\":3150:3166   */\n      add\n        /* \"#utility.yul\":3115:3180   */\n      tag_310\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3205:3234   */\n      tag_395\n        /* \"#utility.yul\":3227:3233   */\n      dup2\n        /* \"#utility.yul\":3205:3234   */\n      tag_311\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3200:3203   */\n      dup5\n        /* \"#utility.yul\":3196:3235   */\n      add\n        /* \"#utility.yul\":3189:3235   */\n      swap2\n      pop\n        /* \"#utility.yul\":2956:3241   */\n      pop\n        /* \"#utility.yul\":2864:3241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3560   */\n    tag_52:\n        /* \"#utility.yul\":3360:3364   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3387:3396   */\n      dup3\n        /* \"#utility.yul\":3383:3401   */\n      add\n        /* \"#utility.yul\":3375:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3447:3456   */\n      dup2\n        /* \"#utility.yul\":3441:3445   */\n      dup2\n        /* \"#utility.yul\":3437:3457   */\n      sub\n        /* \"#utility.yul\":3433:3434   */\n      0x00\n        /* \"#utility.yul\":3422:3431   */\n      dup4\n        /* \"#utility.yul\":3418:3435   */\n      add\n        /* \"#utility.yul\":3411:3458   */\n      mstore\n        /* \"#utility.yul\":3475:3553   */\n      tag_397\n        /* \"#utility.yul\":3548:3552   */\n      dup2\n        /* \"#utility.yul\":3539:3545   */\n      dup5\n        /* \"#utility.yul\":3475:3553   */\n      tag_312\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3467:3553   */\n      swap1\n      pop\n        /* \"#utility.yul\":3247:3560   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3566:3641   */\n    tag_313:\n        /* \"#utility.yul\":3599:3605   */\n      0x00\n        /* \"#utility.yul\":3632:3634   */\n      0x40\n        /* \"#utility.yul\":3626:3635   */\n      mload\n        /* \"#utility.yul\":3616:3635   */\n      swap1\n      pop\n        /* \"#utility.yul\":3566:3641   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":3647:3764   */\n    tag_314:\n        /* \"#utility.yul\":3756:3757   */\n      0x00\n        /* \"#utility.yul\":3753:3754   */\n      dup1\n        /* \"#utility.yul\":3746:3758   */\n      revert\n        /* \"#utility.yul\":3770:3887   */\n    tag_315:\n        /* \"#utility.yul\":3879:3880   */\n      0x00\n        /* \"#utility.yul\":3876:3877   */\n      dup1\n        /* \"#utility.yul\":3869:3881   */\n      revert\n        /* \"#utility.yul\":3893:4019   */\n    tag_316:\n        /* \"#utility.yul\":3930:3937   */\n      0x00\n        /* \"#utility.yul\":3970:4012   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3963:3968   */\n      dup3\n        /* \"#utility.yul\":3959:4013   */\n      and\n        /* \"#utility.yul\":3948:4013   */\n      swap1\n      pop\n        /* \"#utility.yul\":3893:4019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4025:4121   */\n    tag_317:\n        /* \"#utility.yul\":4062:4069   */\n      0x00\n        /* \"#utility.yul\":4091:4115   */\n      tag_403\n        /* \"#utility.yul\":4109:4114   */\n      dup3\n        /* \"#utility.yul\":4091:4115   */\n      tag_316\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4080:4115   */\n      swap1\n      pop\n        /* \"#utility.yul\":4025:4121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4127:4249   */\n    tag_318:\n        /* \"#utility.yul\":4200:4224   */\n      tag_405\n        /* \"#utility.yul\":4218:4223   */\n      dup2\n        /* \"#utility.yul\":4200:4224   */\n      tag_317\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4193:4198   */\n      dup2\n        /* \"#utility.yul\":4190:4225   */\n      eq\n        /* \"#utility.yul\":4180:4243   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":4239:4240   */\n      0x00\n        /* \"#utility.yul\":4236:4237   */\n      dup1\n        /* \"#utility.yul\":4229:4241   */\n      revert\n        /* \"#utility.yul\":4180:4243   */\n    tag_406:\n        /* \"#utility.yul\":4127:4249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4255:4394   */\n    tag_319:\n        /* \"#utility.yul\":4301:4306   */\n      0x00\n        /* \"#utility.yul\":4339:4345   */\n      dup2\n        /* \"#utility.yul\":4326:4346   */\n      calldataload\n        /* \"#utility.yul\":4317:4346   */\n      swap1\n      pop\n        /* \"#utility.yul\":4355:4388   */\n      tag_408\n        /* \"#utility.yul\":4382:4387   */\n      dup2\n        /* \"#utility.yul\":4355:4388   */\n      tag_318\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4255:4394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4400:4522   */\n    tag_320:\n        /* \"#utility.yul\":4473:4497   */\n      tag_410\n        /* \"#utility.yul\":4491:4496   */\n      dup2\n        /* \"#utility.yul\":4473:4497   */\n      tag_302\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4466:4471   */\n      dup2\n        /* \"#utility.yul\":4463:4498   */\n      eq\n        /* \"#utility.yul\":4453:4516   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4509:4510   */\n      dup1\n        /* \"#utility.yul\":4502:4514   */\n      revert\n        /* \"#utility.yul\":4453:4516   */\n    tag_411:\n        /* \"#utility.yul\":4400:4522   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:4667   */\n    tag_321:\n        /* \"#utility.yul\":4574:4579   */\n      0x00\n        /* \"#utility.yul\":4612:4618   */\n      dup2\n        /* \"#utility.yul\":4599:4619   */\n      calldataload\n        /* \"#utility.yul\":4590:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4628:4661   */\n      tag_413\n        /* \"#utility.yul\":4655:4660   */\n      dup2\n        /* \"#utility.yul\":4628:4661   */\n      tag_320\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4528:4667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4673:5147   */\n    tag_56:\n        /* \"#utility.yul\":4741:4747   */\n      0x00\n        /* \"#utility.yul\":4749:4755   */\n      dup1\n        /* \"#utility.yul\":4798:4800   */\n      0x40\n        /* \"#utility.yul\":4786:4795   */\n      dup4\n        /* \"#utility.yul\":4777:4784   */\n      dup6\n        /* \"#utility.yul\":4773:4796   */\n      sub\n        /* \"#utility.yul\":4769:4801   */\n      slt\n        /* \"#utility.yul\":4766:4885   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4804:4883   */\n      tag_416\n      tag_314\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4766:4885   */\n    tag_415:\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4949:5002   */\n      tag_417\n        /* \"#utility.yul\":4994:5001   */\n      dup6\n        /* \"#utility.yul\":4985:4991   */\n      dup3\n        /* \"#utility.yul\":4974:4983   */\n      dup7\n        /* \"#utility.yul\":4970:4992   */\n      add\n        /* \"#utility.yul\":4949:5002   */\n      tag_319\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4939:5002   */\n      swap3\n      pop\n        /* \"#utility.yul\":4895:5012   */\n      pop\n        /* \"#utility.yul\":5051:5053   */\n      0x20\n        /* \"#utility.yul\":5077:5130   */\n      tag_418\n        /* \"#utility.yul\":5122:5129   */\n      dup6\n        /* \"#utility.yul\":5113:5119   */\n      dup3\n        /* \"#utility.yul\":5102:5111   */\n      dup7\n        /* \"#utility.yul\":5098:5120   */\n      add\n        /* \"#utility.yul\":5077:5130   */\n      tag_321\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5067:5130   */\n      swap2\n      pop\n        /* \"#utility.yul\":5022:5140   */\n      pop\n        /* \"#utility.yul\":4673:5147   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5243   */\n    tag_322:\n        /* \"#utility.yul\":5187:5194   */\n      0x00\n        /* \"#utility.yul\":5230:5235   */\n      dup2\n        /* \"#utility.yul\":5223:5236   */\n      iszero\n        /* \"#utility.yul\":5216:5237   */\n      iszero\n        /* \"#utility.yul\":5205:5237   */\n      swap1\n      pop\n        /* \"#utility.yul\":5153:5243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5249:5358   */\n    tag_323:\n        /* \"#utility.yul\":5330:5351   */\n      tag_421\n        /* \"#utility.yul\":5345:5350   */\n      dup2\n        /* \"#utility.yul\":5330:5351   */\n      tag_322\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5325:5328   */\n      dup3\n        /* \"#utility.yul\":5318:5352   */\n      mstore\n        /* \"#utility.yul\":5249:5358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5574   */\n    tag_59:\n        /* \"#utility.yul\":5451:5455   */\n      0x00\n        /* \"#utility.yul\":5489:5491   */\n      0x20\n        /* \"#utility.yul\":5478:5487   */\n      dup3\n        /* \"#utility.yul\":5474:5492   */\n      add\n        /* \"#utility.yul\":5466:5492   */\n      swap1\n      pop\n        /* \"#utility.yul\":5502:5567   */\n      tag_423\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5553:5562   */\n      dup4\n        /* \"#utility.yul\":5549:5566   */\n      add\n        /* \"#utility.yul\":5540:5546   */\n      dup5\n        /* \"#utility.yul\":5502:5567   */\n      tag_323\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5364:5574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5580:5698   */\n    tag_324:\n        /* \"#utility.yul\":5667:5691   */\n      tag_425\n        /* \"#utility.yul\":5685:5690   */\n      dup2\n        /* \"#utility.yul\":5667:5691   */\n      tag_302\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5662:5665   */\n      dup3\n        /* \"#utility.yul\":5655:5692   */\n      mstore\n        /* \"#utility.yul\":5580:5698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5704:5926   */\n    tag_64:\n        /* \"#utility.yul\":5797:5801   */\n      0x00\n        /* \"#utility.yul\":5835:5837   */\n      0x20\n        /* \"#utility.yul\":5824:5833   */\n      dup3\n        /* \"#utility.yul\":5820:5838   */\n      add\n        /* \"#utility.yul\":5812:5838   */\n      swap1\n      pop\n        /* \"#utility.yul\":5848:5919   */\n      tag_427\n        /* \"#utility.yul\":5916:5917   */\n      0x00\n        /* \"#utility.yul\":5905:5914   */\n      dup4\n        /* \"#utility.yul\":5901:5918   */\n      add\n        /* \"#utility.yul\":5892:5898   */\n      dup5\n        /* \"#utility.yul\":5848:5919   */\n      tag_324\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5704:5926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5932:6551   */\n    tag_68:\n        /* \"#utility.yul\":6009:6015   */\n      0x00\n        /* \"#utility.yul\":6017:6023   */\n      dup1\n        /* \"#utility.yul\":6025:6031   */\n      0x00\n        /* \"#utility.yul\":6074:6076   */\n      0x60\n        /* \"#utility.yul\":6062:6071   */\n      dup5\n        /* \"#utility.yul\":6053:6060   */\n      dup7\n        /* \"#utility.yul\":6049:6072   */\n      sub\n        /* \"#utility.yul\":6045:6077   */\n      slt\n        /* \"#utility.yul\":6042:6161   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":6080:6159   */\n      tag_430\n      tag_314\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6042:6161   */\n    tag_429:\n        /* \"#utility.yul\":6200:6201   */\n      0x00\n        /* \"#utility.yul\":6225:6278   */\n      tag_431\n        /* \"#utility.yul\":6270:6277   */\n      dup7\n        /* \"#utility.yul\":6261:6267   */\n      dup3\n        /* \"#utility.yul\":6250:6259   */\n      dup8\n        /* \"#utility.yul\":6246:6268   */\n      add\n        /* \"#utility.yul\":6225:6278   */\n      tag_319\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6215:6278   */\n      swap4\n      pop\n        /* \"#utility.yul\":6171:6288   */\n      pop\n        /* \"#utility.yul\":6327:6329   */\n      0x20\n        /* \"#utility.yul\":6353:6406   */\n      tag_432\n        /* \"#utility.yul\":6398:6405   */\n      dup7\n        /* \"#utility.yul\":6389:6395   */\n      dup3\n        /* \"#utility.yul\":6378:6387   */\n      dup8\n        /* \"#utility.yul\":6374:6396   */\n      add\n        /* \"#utility.yul\":6353:6406   */\n      tag_319\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":6343:6406   */\n      swap3\n      pop\n        /* \"#utility.yul\":6298:6416   */\n      pop\n        /* \"#utility.yul\":6455:6457   */\n      0x40\n        /* \"#utility.yul\":6481:6534   */\n      tag_433\n        /* \"#utility.yul\":6526:6533   */\n      dup7\n        /* \"#utility.yul\":6517:6523   */\n      dup3\n        /* \"#utility.yul\":6506:6515   */\n      dup8\n        /* \"#utility.yul\":6502:6524   */\n      add\n        /* \"#utility.yul\":6481:6534   */\n      tag_321\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":6471:6534   */\n      swap2\n      pop\n        /* \"#utility.yul\":6426:6544   */\n      pop\n        /* \"#utility.yul\":5932:6551   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6557:6643   */\n    tag_325:\n        /* \"#utility.yul\":6592:6599   */\n      0x00\n        /* \"#utility.yul\":6632:6636   */\n      0xff\n        /* \"#utility.yul\":6625:6630   */\n      dup3\n        /* \"#utility.yul\":6621:6637   */\n      and\n        /* \"#utility.yul\":6610:6637   */\n      swap1\n      pop\n        /* \"#utility.yul\":6557:6643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6649:6761   */\n    tag_326:\n        /* \"#utility.yul\":6732:6754   */\n      tag_436\n        /* \"#utility.yul\":6748:6753   */\n      dup2\n        /* \"#utility.yul\":6732:6754   */\n      tag_325\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6727:6730   */\n      dup3\n        /* \"#utility.yul\":6720:6755   */\n      mstore\n        /* \"#utility.yul\":6649:6761   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6981   */\n    tag_75:\n        /* \"#utility.yul\":6856:6860   */\n      0x00\n        /* \"#utility.yul\":6894:6896   */\n      0x20\n        /* \"#utility.yul\":6883:6892   */\n      dup3\n        /* \"#utility.yul\":6879:6897   */\n      add\n        /* \"#utility.yul\":6871:6897   */\n      swap1\n      pop\n        /* \"#utility.yul\":6907:6974   */\n      tag_438\n        /* \"#utility.yul\":6971:6972   */\n      0x00\n        /* \"#utility.yul\":6960:6969   */\n      dup4\n        /* \"#utility.yul\":6956:6973   */\n      add\n        /* \"#utility.yul\":6947:6953   */\n      dup5\n        /* \"#utility.yul\":6907:6974   */\n      tag_326\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6767:6981   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6987:7104   */\n    tag_327:\n        /* \"#utility.yul\":7096:7097   */\n      0x00\n        /* \"#utility.yul\":7093:7094   */\n      dup1\n        /* \"#utility.yul\":7086:7098   */\n      revert\n        /* \"#utility.yul\":7110:7227   */\n    tag_328:\n        /* \"#utility.yul\":7219:7220   */\n      0x00\n        /* \"#utility.yul\":7216:7217   */\n      dup1\n        /* \"#utility.yul\":7209:7221   */\n      revert\n        /* \"#utility.yul\":7233:7413   */\n    tag_329:\n        /* \"#utility.yul\":7281:7358   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7271:7359   */\n      mstore\n        /* \"#utility.yul\":7378:7382   */\n      0x41\n        /* \"#utility.yul\":7375:7376   */\n      0x04\n        /* \"#utility.yul\":7368:7383   */\n      mstore\n        /* \"#utility.yul\":7402:7406   */\n      0x24\n        /* \"#utility.yul\":7399:7400   */\n      0x00\n        /* \"#utility.yul\":7392:7407   */\n      revert\n        /* \"#utility.yul\":7419:7700   */\n    tag_330:\n        /* \"#utility.yul\":7502:7529   */\n      tag_443\n        /* \"#utility.yul\":7524:7528   */\n      dup3\n        /* \"#utility.yul\":7502:7529   */\n      tag_311\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7494:7500   */\n      dup2\n        /* \"#utility.yul\":7490:7530   */\n      add\n        /* \"#utility.yul\":7632:7638   */\n      dup2\n        /* \"#utility.yul\":7620:7630   */\n      dup2\n        /* \"#utility.yul\":7617:7639   */\n      lt\n        /* \"#utility.yul\":7596:7614   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7584:7594   */\n      dup3\n        /* \"#utility.yul\":7581:7615   */\n      gt\n        /* \"#utility.yul\":7578:7640   */\n      or\n        /* \"#utility.yul\":7575:7663   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":7643:7661   */\n      tag_445\n      tag_329\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7575:7663   */\n    tag_444:\n        /* \"#utility.yul\":7683:7693   */\n      dup1\n        /* \"#utility.yul\":7679:7681   */\n      0x40\n        /* \"#utility.yul\":7672:7694   */\n      mstore\n        /* \"#utility.yul\":7462:7700   */\n      pop\n        /* \"#utility.yul\":7419:7700   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:7835   */\n    tag_331:\n        /* \"#utility.yul\":7740:7746   */\n      0x00\n        /* \"#utility.yul\":7767:7787   */\n      tag_447\n      tag_313\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7757:7787   */\n      swap1\n      pop\n        /* \"#utility.yul\":7796:7829   */\n      tag_448\n        /* \"#utility.yul\":7824:7828   */\n      dup3\n        /* \"#utility.yul\":7816:7822   */\n      dup3\n        /* \"#utility.yul\":7796:7829   */\n      tag_330\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7706:7835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8149   */\n    tag_332:\n        /* \"#utility.yul\":7903:7907   */\n      0x00\n        /* \"#utility.yul\":7993:8011   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7985:7991   */\n      dup3\n        /* \"#utility.yul\":7982:8012   */\n      gt\n        /* \"#utility.yul\":7979:8035   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8015:8033   */\n      tag_451\n      tag_329\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":7979:8035   */\n    tag_450:\n        /* \"#utility.yul\":8053:8082   */\n      tag_452\n        /* \"#utility.yul\":8075:8081   */\n      dup3\n        /* \"#utility.yul\":8053:8082   */\n      tag_311\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8045:8082   */\n      swap1\n      pop\n        /* \"#utility.yul\":8137:8141   */\n      0x20\n        /* \"#utility.yul\":8131:8135   */\n      dup2\n        /* \"#utility.yul\":8127:8142   */\n      add\n        /* \"#utility.yul\":8119:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7841:8149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8303   */\n    tag_333:\n        /* \"#utility.yul\":8253:8259   */\n      dup3\n        /* \"#utility.yul\":8248:8251   */\n      dup2\n        /* \"#utility.yul\":8243:8246   */\n      dup4\n        /* \"#utility.yul\":8230:8260   */\n      calldatacopy\n        /* \"#utility.yul\":8294:8295   */\n      0x00\n        /* \"#utility.yul\":8285:8291   */\n      dup4\n        /* \"#utility.yul\":8280:8283   */\n      dup4\n        /* \"#utility.yul\":8276:8292   */\n      add\n        /* \"#utility.yul\":8269:8296   */\n      mstore\n        /* \"#utility.yul\":8155:8303   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8309:8734   */\n    tag_334:\n        /* \"#utility.yul\":8387:8392   */\n      0x00\n        /* \"#utility.yul\":8412:8478   */\n      tag_455\n        /* \"#utility.yul\":8428:8477   */\n      tag_456\n        /* \"#utility.yul\":8470:8476   */\n      dup5\n        /* \"#utility.yul\":8428:8477   */\n      tag_332\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8412:8478   */\n      tag_331\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8403:8478   */\n      swap1\n      pop\n        /* \"#utility.yul\":8501:8507   */\n      dup3\n        /* \"#utility.yul\":8494:8499   */\n      dup2\n        /* \"#utility.yul\":8487:8508   */\n      mstore\n        /* \"#utility.yul\":8539:8543   */\n      0x20\n        /* \"#utility.yul\":8532:8537   */\n      dup2\n        /* \"#utility.yul\":8528:8544   */\n      add\n        /* \"#utility.yul\":8577:8580   */\n      dup5\n        /* \"#utility.yul\":8568:8574   */\n      dup5\n        /* \"#utility.yul\":8563:8566   */\n      dup5\n        /* \"#utility.yul\":8559:8575   */\n      add\n        /* \"#utility.yul\":8556:8581   */\n      gt\n        /* \"#utility.yul\":8553:8665   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":8584:8663   */\n      tag_458\n      tag_328\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8553:8665   */\n    tag_457:\n        /* \"#utility.yul\":8674:8728   */\n      tag_459\n        /* \"#utility.yul\":8721:8727   */\n      dup5\n        /* \"#utility.yul\":8716:8719   */\n      dup3\n        /* \"#utility.yul\":8711:8714   */\n      dup6\n        /* \"#utility.yul\":8674:8728   */\n      tag_333\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8393:8734   */\n      pop\n        /* \"#utility.yul\":8309:8734   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8754:9094   */\n    tag_335:\n        /* \"#utility.yul\":8810:8815   */\n      0x00\n        /* \"#utility.yul\":8859:8862   */\n      dup3\n        /* \"#utility.yul\":8852:8856   */\n      0x1f\n        /* \"#utility.yul\":8844:8850   */\n      dup4\n        /* \"#utility.yul\":8840:8857   */\n      add\n        /* \"#utility.yul\":8836:8863   */\n      slt\n        /* \"#utility.yul\":8826:8948   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":8867:8946   */\n      tag_462\n      tag_327\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":8826:8948   */\n    tag_461:\n        /* \"#utility.yul\":8984:8990   */\n      dup2\n        /* \"#utility.yul\":8971:8991   */\n      calldataload\n        /* \"#utility.yul\":9009:9088   */\n      tag_463\n        /* \"#utility.yul\":9084:9087   */\n      dup5\n        /* \"#utility.yul\":9076:9082   */\n      dup3\n        /* \"#utility.yul\":9069:9073   */\n      0x20\n        /* \"#utility.yul\":9061:9067   */\n      dup7\n        /* \"#utility.yul\":9057:9074   */\n      add\n        /* \"#utility.yul\":9009:9088   */\n      tag_334\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9000:9088   */\n      swap2\n      pop\n        /* \"#utility.yul\":8816:9094   */\n      pop\n        /* \"#utility.yul\":8754:9094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9100:9934   */\n    tag_79:\n        /* \"#utility.yul\":9188:9194   */\n      0x00\n        /* \"#utility.yul\":9196:9202   */\n      dup1\n        /* \"#utility.yul\":9245:9247   */\n      0x40\n        /* \"#utility.yul\":9233:9242   */\n      dup4\n        /* \"#utility.yul\":9224:9231   */\n      dup6\n        /* \"#utility.yul\":9220:9243   */\n      sub\n        /* \"#utility.yul\":9216:9248   */\n      slt\n        /* \"#utility.yul\":9213:9332   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":9251:9330   */\n      tag_466\n      tag_314\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9213:9332   */\n    tag_465:\n        /* \"#utility.yul\":9399:9400   */\n      0x00\n        /* \"#utility.yul\":9388:9397   */\n      dup4\n        /* \"#utility.yul\":9384:9401   */\n      add\n        /* \"#utility.yul\":9371:9402   */\n      calldataload\n        /* \"#utility.yul\":9429:9447   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9421:9427   */\n      dup2\n        /* \"#utility.yul\":9418:9448   */\n      gt\n        /* \"#utility.yul\":9415:9532   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":9451:9530   */\n      tag_468\n      tag_315\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9415:9532   */\n    tag_467:\n        /* \"#utility.yul\":9556:9619   */\n      tag_469\n        /* \"#utility.yul\":9611:9618   */\n      dup6\n        /* \"#utility.yul\":9602:9608   */\n      dup3\n        /* \"#utility.yul\":9591:9600   */\n      dup7\n        /* \"#utility.yul\":9587:9609   */\n      add\n        /* \"#utility.yul\":9556:9619   */\n      tag_335\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9546:9619   */\n      swap3\n      pop\n        /* \"#utility.yul\":9342:9629   */\n      pop\n        /* \"#utility.yul\":9696:9698   */\n      0x20\n        /* \"#utility.yul\":9685:9694   */\n      dup4\n        /* \"#utility.yul\":9681:9699   */\n      add\n        /* \"#utility.yul\":9668:9700   */\n      calldataload\n        /* \"#utility.yul\":9727:9745   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9719:9725   */\n      dup2\n        /* \"#utility.yul\":9716:9746   */\n      gt\n        /* \"#utility.yul\":9713:9830   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":9749:9828   */\n      tag_471\n      tag_315\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9713:9830   */\n    tag_470:\n        /* \"#utility.yul\":9854:9917   */\n      tag_472\n        /* \"#utility.yul\":9909:9916   */\n      dup6\n        /* \"#utility.yul\":9900:9906   */\n      dup3\n        /* \"#utility.yul\":9889:9898   */\n      dup7\n        /* \"#utility.yul\":9885:9907   */\n      add\n        /* \"#utility.yul\":9854:9917   */\n      tag_335\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9844:9917   */\n      swap2\n      pop\n        /* \"#utility.yul\":9639:9927   */\n      pop\n        /* \"#utility.yul\":9100:9934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9940:10269   */\n    tag_84:\n        /* \"#utility.yul\":9999:10005   */\n      0x00\n        /* \"#utility.yul\":10048:10050   */\n      0x20\n        /* \"#utility.yul\":10036:10045   */\n      dup3\n        /* \"#utility.yul\":10027:10034   */\n      dup5\n        /* \"#utility.yul\":10023:10046   */\n      sub\n        /* \"#utility.yul\":10019:10051   */\n      slt\n        /* \"#utility.yul\":10016:10135   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":10054:10133   */\n      tag_475\n      tag_314\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10016:10135   */\n    tag_474:\n        /* \"#utility.yul\":10174:10175   */\n      0x00\n        /* \"#utility.yul\":10199:10252   */\n      tag_476\n        /* \"#utility.yul\":10244:10251   */\n      dup5\n        /* \"#utility.yul\":10235:10241   */\n      dup3\n        /* \"#utility.yul\":10224:10233   */\n      dup6\n        /* \"#utility.yul\":10220:10242   */\n      add\n        /* \"#utility.yul\":10199:10252   */\n      tag_319\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10189:10252   */\n      swap2\n      pop\n        /* \"#utility.yul\":10145:10262   */\n      pop\n        /* \"#utility.yul\":9940:10269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10275:10784   */\n    tag_93:\n        /* \"#utility.yul\":10344:10350   */\n      0x00\n        /* \"#utility.yul\":10393:10395   */\n      0x20\n        /* \"#utility.yul\":10381:10390   */\n      dup3\n        /* \"#utility.yul\":10372:10379   */\n      dup5\n        /* \"#utility.yul\":10368:10391   */\n      sub\n        /* \"#utility.yul\":10364:10396   */\n      slt\n        /* \"#utility.yul\":10361:10480   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":10399:10478   */\n      tag_479\n      tag_314\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10361:10480   */\n    tag_478:\n        /* \"#utility.yul\":10547:10548   */\n      0x00\n        /* \"#utility.yul\":10536:10545   */\n      dup3\n        /* \"#utility.yul\":10532:10549   */\n      add\n        /* \"#utility.yul\":10519:10550   */\n      calldataload\n        /* \"#utility.yul\":10577:10595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10569:10575   */\n      dup2\n        /* \"#utility.yul\":10566:10596   */\n      gt\n        /* \"#utility.yul\":10563:10680   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":10599:10678   */\n      tag_481\n      tag_315\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":10563:10680   */\n    tag_480:\n        /* \"#utility.yul\":10704:10767   */\n      tag_482\n        /* \"#utility.yul\":10759:10766   */\n      dup5\n        /* \"#utility.yul\":10750:10756   */\n      dup3\n        /* \"#utility.yul\":10739:10748   */\n      dup6\n        /* \"#utility.yul\":10735:10757   */\n      add\n        /* \"#utility.yul\":10704:10767   */\n      tag_335\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":10694:10767   */\n      swap2\n      pop\n        /* \"#utility.yul\":10490:10777   */\n      pop\n        /* \"#utility.yul\":10275:10784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10790:11323   */\n    tag_101:\n        /* \"#utility.yul\":10959:10963   */\n      0x00\n        /* \"#utility.yul\":10997:10999   */\n      0x60\n        /* \"#utility.yul\":10986:10995   */\n      dup3\n        /* \"#utility.yul\":10982:11000   */\n      add\n        /* \"#utility.yul\":10974:11000   */\n      swap1\n      pop\n        /* \"#utility.yul\":11046:11055   */\n      dup2\n        /* \"#utility.yul\":11040:11044   */\n      dup2\n        /* \"#utility.yul\":11036:11056   */\n      sub\n        /* \"#utility.yul\":11032:11033   */\n      0x00\n        /* \"#utility.yul\":11021:11030   */\n      dup4\n        /* \"#utility.yul\":11017:11034   */\n      add\n        /* \"#utility.yul\":11010:11057   */\n      mstore\n        /* \"#utility.yul\":11074:11152   */\n      tag_484\n        /* \"#utility.yul\":11147:11151   */\n      dup2\n        /* \"#utility.yul\":11138:11144   */\n      dup7\n        /* \"#utility.yul\":11074:11152   */\n      tag_312\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11066:11152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11162:11234   */\n      tag_485\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"#utility.yul\":11219:11228   */\n      dup4\n        /* \"#utility.yul\":11215:11233   */\n      add\n        /* \"#utility.yul\":11206:11212   */\n      dup6\n        /* \"#utility.yul\":11162:11234   */\n      tag_324\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11244:11316   */\n      tag_486\n        /* \"#utility.yul\":11312:11314   */\n      0x40\n        /* \"#utility.yul\":11301:11310   */\n      dup4\n        /* \"#utility.yul\":11297:11315   */\n      add\n        /* \"#utility.yul\":11288:11294   */\n      dup5\n        /* \"#utility.yul\":11244:11316   */\n      tag_324\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10790:11323   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11329:11447   */\n    tag_336:\n        /* \"#utility.yul\":11416:11440   */\n      tag_488\n        /* \"#utility.yul\":11434:11439   */\n      dup2\n        /* \"#utility.yul\":11416:11440   */\n      tag_317\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11411:11414   */\n      dup3\n        /* \"#utility.yul\":11404:11441   */\n      mstore\n        /* \"#utility.yul\":11329:11447   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11675   */\n    tag_105:\n        /* \"#utility.yul\":11546:11550   */\n      0x00\n        /* \"#utility.yul\":11584:11586   */\n      0x20\n        /* \"#utility.yul\":11573:11582   */\n      dup3\n        /* \"#utility.yul\":11569:11587   */\n      add\n        /* \"#utility.yul\":11561:11587   */\n      swap1\n      pop\n        /* \"#utility.yul\":11597:11668   */\n      tag_490\n        /* \"#utility.yul\":11665:11666   */\n      0x00\n        /* \"#utility.yul\":11654:11663   */\n      dup4\n        /* \"#utility.yul\":11650:11667   */\n      add\n        /* \"#utility.yul\":11641:11647   */\n      dup5\n        /* \"#utility.yul\":11597:11668   */\n      tag_336\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11453:11675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11681:12155   */\n    tag_138:\n        /* \"#utility.yul\":11749:11755   */\n      0x00\n        /* \"#utility.yul\":11757:11763   */\n      dup1\n        /* \"#utility.yul\":11806:11808   */\n      0x40\n        /* \"#utility.yul\":11794:11803   */\n      dup4\n        /* \"#utility.yul\":11785:11792   */\n      dup6\n        /* \"#utility.yul\":11781:11804   */\n      sub\n        /* \"#utility.yul\":11777:11809   */\n      slt\n        /* \"#utility.yul\":11774:11893   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":11812:11891   */\n      tag_493\n      tag_314\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11774:11893   */\n    tag_492:\n        /* \"#utility.yul\":11932:11933   */\n      0x00\n        /* \"#utility.yul\":11957:12010   */\n      tag_494\n        /* \"#utility.yul\":12002:12009   */\n      dup6\n        /* \"#utility.yul\":11993:11999   */\n      dup3\n        /* \"#utility.yul\":11982:11991   */\n      dup7\n        /* \"#utility.yul\":11978:12000   */\n      add\n        /* \"#utility.yul\":11957:12010   */\n      tag_319\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":11947:12010   */\n      swap3\n      pop\n        /* \"#utility.yul\":11903:12020   */\n      pop\n        /* \"#utility.yul\":12059:12061   */\n      0x20\n        /* \"#utility.yul\":12085:12138   */\n      tag_495\n        /* \"#utility.yul\":12130:12137   */\n      dup6\n        /* \"#utility.yul\":12121:12127   */\n      dup3\n        /* \"#utility.yul\":12110:12119   */\n      dup7\n        /* \"#utility.yul\":12106:12128   */\n      add\n        /* \"#utility.yul\":12085:12138   */\n      tag_319\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12075:12138   */\n      swap2\n      pop\n        /* \"#utility.yul\":12030:12148   */\n      pop\n        /* \"#utility.yul\":11681:12155   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12161:12341   */\n    tag_337:\n        /* \"#utility.yul\":12209:12286   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12206:12207   */\n      0x00\n        /* \"#utility.yul\":12199:12287   */\n      mstore\n        /* \"#utility.yul\":12306:12310   */\n      0x22\n        /* \"#utility.yul\":12303:12304   */\n      0x04\n        /* \"#utility.yul\":12296:12311   */\n      mstore\n        /* \"#utility.yul\":12330:12334   */\n      0x24\n        /* \"#utility.yul\":12327:12328   */\n      0x00\n        /* \"#utility.yul\":12320:12335   */\n      revert\n        /* \"#utility.yul\":12347:12667   */\n    tag_163:\n        /* \"#utility.yul\":12391:12397   */\n      0x00\n        /* \"#utility.yul\":12428:12429   */\n      0x02\n        /* \"#utility.yul\":12422:12426   */\n      dup3\n        /* \"#utility.yul\":12418:12430   */\n      div\n        /* \"#utility.yul\":12408:12430   */\n      swap1\n      pop\n        /* \"#utility.yul\":12475:12476   */\n      0x01\n        /* \"#utility.yul\":12469:12473   */\n      dup3\n        /* \"#utility.yul\":12465:12477   */\n      and\n        /* \"#utility.yul\":12496:12514   */\n      dup1\n        /* \"#utility.yul\":12486:12567   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12552:12556   */\n      0x7f\n        /* \"#utility.yul\":12544:12550   */\n      dup3\n        /* \"#utility.yul\":12540:12557   */\n      and\n        /* \"#utility.yul\":12530:12557   */\n      swap2\n      pop\n        /* \"#utility.yul\":12486:12567   */\n    tag_498:\n        /* \"#utility.yul\":12614:12616   */\n      0x20\n        /* \"#utility.yul\":12606:12612   */\n      dup3\n        /* \"#utility.yul\":12603:12617   */\n      lt\n        /* \"#utility.yul\":12583:12601   */\n      dup2\n        /* \"#utility.yul\":12580:12618   */\n      sub\n        /* \"#utility.yul\":12577:12661   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":12633:12651   */\n      tag_500\n      tag_337\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12577:12661   */\n    tag_499:\n        /* \"#utility.yul\":12398:12667   */\n      pop\n        /* \"#utility.yul\":12347:12667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12673:12821   */\n    tag_338:\n        /* \"#utility.yul\":12775:12786   */\n      0x00\n        /* \"#utility.yul\":12812:12815   */\n      dup2\n        /* \"#utility.yul\":12797:12815   */\n      swap1\n      pop\n        /* \"#utility.yul\":12673:12821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:13217   */\n    tag_339:\n        /* \"#utility.yul\":12933:12936   */\n      0x00\n        /* \"#utility.yul\":12961:13000   */\n      tag_503\n        /* \"#utility.yul\":12994:12999   */\n      dup3\n        /* \"#utility.yul\":12961:13000   */\n      tag_308\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":13016:13105   */\n      tag_504\n        /* \"#utility.yul\":13098:13104   */\n      dup2\n        /* \"#utility.yul\":13093:13096   */\n      dup6\n        /* \"#utility.yul\":13016:13105   */\n      tag_338\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13009:13105   */\n      swap4\n      pop\n        /* \"#utility.yul\":13114:13179   */\n      tag_505\n        /* \"#utility.yul\":13172:13178   */\n      dup2\n        /* \"#utility.yul\":13167:13170   */\n      dup6\n        /* \"#utility.yul\":13160:13164   */\n      0x20\n        /* \"#utility.yul\":13153:13158   */\n      dup7\n        /* \"#utility.yul\":13149:13165   */\n      add\n        /* \"#utility.yul\":13114:13179   */\n      tag_310\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13204:13210   */\n      dup1\n        /* \"#utility.yul\":13199:13202   */\n      dup5\n        /* \"#utility.yul\":13195:13211   */\n      add\n        /* \"#utility.yul\":13188:13211   */\n      swap2\n      pop\n        /* \"#utility.yul\":12937:13217   */\n      pop\n        /* \"#utility.yul\":12827:13217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13223:13498   */\n    tag_182:\n        /* \"#utility.yul\":13355:13358   */\n      0x00\n        /* \"#utility.yul\":13377:13472   */\n      tag_507\n        /* \"#utility.yul\":13468:13471   */\n      dup3\n        /* \"#utility.yul\":13459:13465   */\n      dup5\n        /* \"#utility.yul\":13377:13472   */\n      tag_339\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13370:13472   */\n      swap2\n      pop\n        /* \"#utility.yul\":13489:13492   */\n      dup2\n        /* \"#utility.yul\":13482:13492   */\n      swap1\n      pop\n        /* \"#utility.yul\":13223:13498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13504:13671   */\n    tag_340:\n        /* \"#utility.yul\":13644:13663   */\n      0x4e6f2073756368207465727269746f7279000000000000000000000000000000\n        /* \"#utility.yul\":13640:13641   */\n      0x00\n        /* \"#utility.yul\":13632:13638   */\n      dup3\n        /* \"#utility.yul\":13628:13642   */\n      add\n        /* \"#utility.yul\":13621:13664   */\n      mstore\n        /* \"#utility.yul\":13504:13671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13677:14043   */\n    tag_341:\n        /* \"#utility.yul\":13819:13822   */\n      0x00\n        /* \"#utility.yul\":13840:13907   */\n      tag_510\n        /* \"#utility.yul\":13904:13906   */\n      0x11\n        /* \"#utility.yul\":13899:13902   */\n      dup4\n        /* \"#utility.yul\":13840:13907   */\n      tag_309\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13833:13907   */\n      swap2\n      pop\n        /* \"#utility.yul\":13916:14009   */\n      tag_511\n        /* \"#utility.yul\":14005:14008   */\n      dup3\n        /* \"#utility.yul\":13916:14009   */\n      tag_340\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14034:14036   */\n      0x20\n        /* \"#utility.yul\":14029:14032   */\n      dup3\n        /* \"#utility.yul\":14025:14037   */\n      add\n        /* \"#utility.yul\":14018:14037   */\n      swap1\n      pop\n        /* \"#utility.yul\":13677:14043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14049:14468   */\n    tag_187:\n        /* \"#utility.yul\":14215:14219   */\n      0x00\n        /* \"#utility.yul\":14253:14255   */\n      0x20\n        /* \"#utility.yul\":14242:14251   */\n      dup3\n        /* \"#utility.yul\":14238:14256   */\n      add\n        /* \"#utility.yul\":14230:14256   */\n      swap1\n      pop\n        /* \"#utility.yul\":14302:14311   */\n      dup2\n        /* \"#utility.yul\":14296:14300   */\n      dup2\n        /* \"#utility.yul\":14292:14312   */\n      sub\n        /* \"#utility.yul\":14288:14289   */\n      0x00\n        /* \"#utility.yul\":14277:14286   */\n      dup4\n        /* \"#utility.yul\":14273:14290   */\n      add\n        /* \"#utility.yul\":14266:14313   */\n      mstore\n        /* \"#utility.yul\":14330:14461   */\n      tag_513\n        /* \"#utility.yul\":14456:14460   */\n      dup2\n        /* \"#utility.yul\":14330:14461   */\n      tag_341\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14322:14461   */\n      swap1\n      pop\n        /* \"#utility.yul\":14049:14468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14474:14655   */\n    tag_342:\n        /* \"#utility.yul\":14614:14647   */\n      0x486f72646520646f65736e2774206861766520656e6f75676820706f77657200\n        /* \"#utility.yul\":14610:14611   */\n      0x00\n        /* \"#utility.yul\":14602:14608   */\n      dup3\n        /* \"#utility.yul\":14598:14612   */\n      add\n        /* \"#utility.yul\":14591:14648   */\n      mstore\n        /* \"#utility.yul\":14474:14655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14661:15027   */\n    tag_343:\n        /* \"#utility.yul\":14803:14806   */\n      0x00\n        /* \"#utility.yul\":14824:14891   */\n      tag_516\n        /* \"#utility.yul\":14888:14890   */\n      0x1f\n        /* \"#utility.yul\":14883:14886   */\n      dup4\n        /* \"#utility.yul\":14824:14891   */\n      tag_309\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14817:14891   */\n      swap2\n      pop\n        /* \"#utility.yul\":14900:14993   */\n      tag_517\n        /* \"#utility.yul\":14989:14992   */\n      dup3\n        /* \"#utility.yul\":14900:14993   */\n      tag_342\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":15018:15020   */\n      0x20\n        /* \"#utility.yul\":15013:15016   */\n      dup3\n        /* \"#utility.yul\":15009:15021   */\n      add\n        /* \"#utility.yul\":15002:15021   */\n      swap1\n      pop\n        /* \"#utility.yul\":14661:15027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15033:15452   */\n    tag_192:\n        /* \"#utility.yul\":15199:15203   */\n      0x00\n        /* \"#utility.yul\":15237:15239   */\n      0x20\n        /* \"#utility.yul\":15226:15235   */\n      dup3\n        /* \"#utility.yul\":15222:15240   */\n      add\n        /* \"#utility.yul\":15214:15240   */\n      swap1\n      pop\n        /* \"#utility.yul\":15286:15295   */\n      dup2\n        /* \"#utility.yul\":15280:15284   */\n      dup2\n        /* \"#utility.yul\":15276:15296   */\n      sub\n        /* \"#utility.yul\":15272:15273   */\n      0x00\n        /* \"#utility.yul\":15261:15270   */\n      dup4\n        /* \"#utility.yul\":15257:15274   */\n      add\n        /* \"#utility.yul\":15250:15297   */\n      mstore\n        /* \"#utility.yul\":15314:15445   */\n      tag_519\n        /* \"#utility.yul\":15440:15444   */\n      dup2\n        /* \"#utility.yul\":15314:15445   */\n      tag_343\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":15306:15445   */\n      swap1\n      pop\n        /* \"#utility.yul\":15033:15452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15458:15638   */\n    tag_202:\n        /* \"#utility.yul\":15506:15583   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15503:15504   */\n      0x00\n        /* \"#utility.yul\":15496:15584   */\n      mstore\n        /* \"#utility.yul\":15603:15607   */\n      0x32\n        /* \"#utility.yul\":15600:15601   */\n      0x04\n        /* \"#utility.yul\":15593:15608   */\n      mstore\n        /* \"#utility.yul\":15627:15631   */\n      0x24\n        /* \"#utility.yul\":15624:15625   */\n      0x00\n        /* \"#utility.yul\":15617:15632   */\n      revert\n        /* \"#utility.yul\":15644:15824   */\n    tag_227:\n        /* \"#utility.yul\":15692:15769   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15689:15690   */\n      0x00\n        /* \"#utility.yul\":15682:15770   */\n      mstore\n        /* \"#utility.yul\":15789:15793   */\n      0x21\n        /* \"#utility.yul\":15786:15787   */\n      0x04\n        /* \"#utility.yul\":15779:15794   */\n      mstore\n        /* \"#utility.yul\":15813:15817   */\n      0x24\n        /* \"#utility.yul\":15810:15811   */\n      0x00\n        /* \"#utility.yul\":15803:15818   */\n      revert\n        /* \"#utility.yul\":15830:15979   */\n    tag_344:\n        /* \"#utility.yul\":15879:15885   */\n      0x00\n        /* \"#utility.yul\":15913:15918   */\n      dup2\n        /* \"#utility.yul\":15907:15919   */\n      sload\n        /* \"#utility.yul\":15897:15919   */\n      swap1\n      pop\n        /* \"#utility.yul\":15939:15972   */\n      tag_523\n        /* \"#utility.yul\":15965:15971   */\n      dup2\n        /* \"#utility.yul\":15939:15972   */\n      tag_163\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":15929:15972   */\n      swap1\n      pop\n        /* \"#utility.yul\":15830:15979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15985:16126   */\n    tag_345:\n        /* \"#utility.yul\":16034:16038   */\n      0x00\n        /* \"#utility.yul\":16057:16060   */\n      dup2\n        /* \"#utility.yul\":16049:16060   */\n      swap1\n      pop\n        /* \"#utility.yul\":16080:16083   */\n      dup2\n        /* \"#utility.yul\":16077:16078   */\n      0x00\n        /* \"#utility.yul\":16070:16084   */\n      mstore\n        /* \"#utility.yul\":16114:16118   */\n      0x20\n        /* \"#utility.yul\":16111:16112   */\n      0x00\n        /* \"#utility.yul\":16101:16119   */\n      keccak256\n        /* \"#utility.yul\":16093:16119   */\n      swap1\n      pop\n        /* \"#utility.yul\":15985:16126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16132:16225   */\n    tag_346:\n        /* \"#utility.yul\":16169:16175   */\n      0x00\n        /* \"#utility.yul\":16216:16218   */\n      0x20\n        /* \"#utility.yul\":16211:16213   */\n      0x1f\n        /* \"#utility.yul\":16204:16209   */\n      dup4\n        /* \"#utility.yul\":16200:16214   */\n      add\n        /* \"#utility.yul\":16196:16219   */\n      div\n        /* \"#utility.yul\":16186:16219   */\n      swap1\n      pop\n        /* \"#utility.yul\":16132:16225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16231:16338   */\n    tag_347:\n        /* \"#utility.yul\":16275:16283   */\n      0x00\n        /* \"#utility.yul\":16325:16330   */\n      dup3\n        /* \"#utility.yul\":16319:16323   */\n      dup3\n        /* \"#utility.yul\":16315:16331   */\n      shl\n        /* \"#utility.yul\":16294:16331   */\n      swap1\n      pop\n        /* \"#utility.yul\":16231:16338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16344:16737   */\n    tag_348:\n        /* \"#utility.yul\":16413:16419   */\n      0x00\n        /* \"#utility.yul\":16463:16464   */\n      0x08\n        /* \"#utility.yul\":16451:16461   */\n      dup4\n        /* \"#utility.yul\":16447:16465   */\n      mul\n        /* \"#utility.yul\":16486:16583   */\n      tag_528\n        /* \"#utility.yul\":16516:16582   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16505:16514   */\n      dup3\n        /* \"#utility.yul\":16486:16583   */\n      tag_347\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":16604:16643   */\n      tag_529\n        /* \"#utility.yul\":16634:16642   */\n      dup7\n        /* \"#utility.yul\":16623:16632   */\n      dup4\n        /* \"#utility.yul\":16604:16643   */\n      tag_347\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16592:16643   */\n      swap6\n      pop\n        /* \"#utility.yul\":16676:16680   */\n      dup1\n        /* \"#utility.yul\":16672:16681   */\n      not\n        /* \"#utility.yul\":16665:16670   */\n      dup5\n        /* \"#utility.yul\":16661:16682   */\n      and\n        /* \"#utility.yul\":16652:16682   */\n      swap4\n      pop\n        /* \"#utility.yul\":16725:16729   */\n      dup1\n        /* \"#utility.yul\":16715:16723   */\n      dup7\n        /* \"#utility.yul\":16711:16730   */\n      and\n        /* \"#utility.yul\":16704:16709   */\n      dup5\n        /* \"#utility.yul\":16701:16731   */\n      or\n        /* \"#utility.yul\":16691:16731   */\n      swap3\n      pop\n        /* \"#utility.yul\":16420:16737   */\n      pop\n      pop\n        /* \"#utility.yul\":16344:16737   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16743:16803   */\n    tag_349:\n        /* \"#utility.yul\":16771:16774   */\n      0x00\n        /* \"#utility.yul\":16792:16797   */\n      dup2\n        /* \"#utility.yul\":16785:16797   */\n      swap1\n      pop\n        /* \"#utility.yul\":16743:16803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16809:16951   */\n    tag_350:\n        /* \"#utility.yul\":16859:16868   */\n      0x00\n        /* \"#utility.yul\":16892:16945   */\n      tag_532\n        /* \"#utility.yul\":16910:16944   */\n      tag_533\n        /* \"#utility.yul\":16919:16943   */\n      tag_534\n        /* \"#utility.yul\":16937:16942   */\n      dup5\n        /* \"#utility.yul\":16919:16943   */\n      tag_302\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16910:16944   */\n      tag_349\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16892:16945   */\n      tag_302\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16879:16945   */\n      swap1\n      pop\n        /* \"#utility.yul\":16809:16951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16957:17032   */\n    tag_351:\n        /* \"#utility.yul\":17000:17003   */\n      0x00\n        /* \"#utility.yul\":17021:17026   */\n      dup2\n        /* \"#utility.yul\":17014:17026   */\n      swap1\n      pop\n        /* \"#utility.yul\":16957:17032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17038:17307   */\n    tag_352:\n        /* \"#utility.yul\":17148:17187   */\n      tag_537\n        /* \"#utility.yul\":17179:17186   */\n      dup4\n        /* \"#utility.yul\":17148:17187   */\n      tag_350\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17209:17300   */\n      tag_538\n        /* \"#utility.yul\":17258:17299   */\n      tag_539\n        /* \"#utility.yul\":17282:17298   */\n      dup3\n        /* \"#utility.yul\":17258:17299   */\n      tag_351\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":17250:17256   */\n      dup5\n        /* \"#utility.yul\":17243:17247   */\n      dup5\n        /* \"#utility.yul\":17237:17248   */\n      sload\n        /* \"#utility.yul\":17209:17300   */\n      tag_348\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":17203:17207   */\n      dup3\n        /* \"#utility.yul\":17196:17301   */\n      sstore\n        /* \"#utility.yul\":17114:17307   */\n      pop\n        /* \"#utility.yul\":17038:17307   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17313:17386   */\n    tag_353:\n        /* \"#utility.yul\":17358:17361   */\n      0x00\n        /* \"#utility.yul\":17313:17386   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17392:17581   */\n    tag_354:\n        /* \"#utility.yul\":17469:17501   */\n      tag_542\n      tag_353\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17510:17575   */\n      tag_543\n        /* \"#utility.yul\":17568:17574   */\n      dup2\n        /* \"#utility.yul\":17560:17566   */\n      dup5\n        /* \"#utility.yul\":17554:17558   */\n      dup5\n        /* \"#utility.yul\":17510:17575   */\n      tag_352\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17445:17581   */\n      pop\n        /* \"#utility.yul\":17392:17581   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17587:17773   */\n    tag_355:\n        /* \"#utility.yul\":17647:17767   */\n    tag_545:\n        /* \"#utility.yul\":17664:17667   */\n      dup2\n        /* \"#utility.yul\":17657:17662   */\n      dup2\n        /* \"#utility.yul\":17654:17668   */\n      lt\n        /* \"#utility.yul\":17647:17767   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":17718:17757   */\n      tag_548\n        /* \"#utility.yul\":17755:17756   */\n      0x00\n        /* \"#utility.yul\":17748:17753   */\n      dup3\n        /* \"#utility.yul\":17718:17757   */\n      tag_354\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17691:17692   */\n      0x01\n        /* \"#utility.yul\":17684:17689   */\n      dup2\n        /* \"#utility.yul\":17680:17693   */\n      add\n        /* \"#utility.yul\":17671:17693   */\n      swap1\n      pop\n        /* \"#utility.yul\":17647:17767   */\n      jump(tag_545)\n    tag_547:\n        /* \"#utility.yul\":17587:17773   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17779:18322   */\n    tag_356:\n        /* \"#utility.yul\":17880:17882   */\n      0x1f\n        /* \"#utility.yul\":17875:17878   */\n      dup3\n        /* \"#utility.yul\":17872:17883   */\n      gt\n        /* \"#utility.yul\":17869:18315   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":17914:17952   */\n      tag_551\n        /* \"#utility.yul\":17946:17951   */\n      dup2\n        /* \"#utility.yul\":17914:17952   */\n      tag_345\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17998:18027   */\n      tag_552\n        /* \"#utility.yul\":18016:18026   */\n      dup5\n        /* \"#utility.yul\":17998:18027   */\n      tag_346\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17988:17996   */\n      dup2\n        /* \"#utility.yul\":17984:18028   */\n      add\n        /* \"#utility.yul\":18181:18183   */\n      0x20\n        /* \"#utility.yul\":18169:18179   */\n      dup6\n        /* \"#utility.yul\":18166:18184   */\n      lt\n        /* \"#utility.yul\":18163:18212   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":18202:18210   */\n      dup2\n        /* \"#utility.yul\":18187:18210   */\n      swap1\n      pop\n        /* \"#utility.yul\":18163:18212   */\n    tag_553:\n        /* \"#utility.yul\":18225:18305   */\n      tag_554\n        /* \"#utility.yul\":18281:18303   */\n      tag_555\n        /* \"#utility.yul\":18299:18302   */\n      dup6\n        /* \"#utility.yul\":18281:18303   */\n      tag_346\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18271:18279   */\n      dup4\n        /* \"#utility.yul\":18267:18304   */\n      add\n        /* \"#utility.yul\":18254:18265   */\n      dup3\n        /* \"#utility.yul\":18225:18305   */\n      tag_355\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17884:18315   */\n      pop\n      pop\n        /* \"#utility.yul\":17869:18315   */\n    tag_550:\n        /* \"#utility.yul\":17779:18322   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18328:18445   */\n    tag_357:\n        /* \"#utility.yul\":18382:18390   */\n      0x00\n        /* \"#utility.yul\":18432:18437   */\n      dup3\n        /* \"#utility.yul\":18426:18430   */\n      dup3\n        /* \"#utility.yul\":18422:18438   */\n      shr\n        /* \"#utility.yul\":18401:18438   */\n      swap1\n      pop\n        /* \"#utility.yul\":18328:18445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18451:18620   */\n    tag_358:\n        /* \"#utility.yul\":18495:18501   */\n      0x00\n        /* \"#utility.yul\":18528:18579   */\n      tag_558\n        /* \"#utility.yul\":18576:18577   */\n      0x00\n        /* \"#utility.yul\":18572:18578   */\n      not\n        /* \"#utility.yul\":18564:18569   */\n      dup5\n        /* \"#utility.yul\":18561:18562   */\n      0x08\n        /* \"#utility.yul\":18557:18570   */\n      mul\n        /* \"#utility.yul\":18528:18579   */\n      tag_357\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18524:18580   */\n      not\n        /* \"#utility.yul\":18609:18613   */\n      dup1\n        /* \"#utility.yul\":18603:18607   */\n      dup4\n        /* \"#utility.yul\":18599:18614   */\n      and\n        /* \"#utility.yul\":18589:18614   */\n      swap2\n      pop\n        /* \"#utility.yul\":18502:18620   */\n      pop\n        /* \"#utility.yul\":18451:18620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18625:18920   */\n    tag_359:\n        /* \"#utility.yul\":18701:18705   */\n      0x00\n        /* \"#utility.yul\":18847:18876   */\n      tag_560\n        /* \"#utility.yul\":18872:18875   */\n      dup4\n        /* \"#utility.yul\":18866:18870   */\n      dup4\n        /* \"#utility.yul\":18847:18876   */\n      tag_358\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18839:18876   */\n      swap2\n      pop\n        /* \"#utility.yul\":18909:18912   */\n      dup3\n        /* \"#utility.yul\":18906:18907   */\n      0x02\n        /* \"#utility.yul\":18902:18913   */\n      mul\n        /* \"#utility.yul\":18896:18900   */\n      dup3\n        /* \"#utility.yul\":18893:18914   */\n      or\n        /* \"#utility.yul\":18885:18914   */\n      swap1\n      pop\n        /* \"#utility.yul\":18625:18920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18925:20376   */\n    tag_252:\n        /* \"#utility.yul\":19036:19039   */\n      dup2\n        /* \"#utility.yul\":19030:19034   */\n      dup2\n        /* \"#utility.yul\":19027:19040   */\n      sub\n        /* \"#utility.yul\":19024:19050   */\n      tag_562\n      jumpi\n        /* \"#utility.yul\":19043:19048   */\n      pop\n      pop\n      jump(tag_561)\n        /* \"#utility.yul\":19024:19050   */\n    tag_562:\n        /* \"#utility.yul\":19074:19108   */\n      tag_563\n        /* \"#utility.yul\":19104:19107   */\n      dup3\n        /* \"#utility.yul\":19074:19108   */\n      tag_344\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19173:19191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19165:19171   */\n      dup2\n        /* \"#utility.yul\":19162:19192   */\n      gt\n        /* \"#utility.yul\":19159:19215   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":19195:19213   */\n      tag_565\n      tag_329\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":19159:19215   */\n    tag_564:\n        /* \"#utility.yul\":19239:19277   */\n      tag_566\n        /* \"#utility.yul\":19271:19275   */\n      dup3\n        /* \"#utility.yul\":19265:19276   */\n      sload\n        /* \"#utility.yul\":19239:19277   */\n      tag_163\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19324:19391   */\n      tag_567\n        /* \"#utility.yul\":19384:19390   */\n      dup3\n        /* \"#utility.yul\":19376:19382   */\n      dup3\n        /* \"#utility.yul\":19370:19374   */\n      dup6\n        /* \"#utility.yul\":19324:19391   */\n      tag_356\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19418:19419   */\n      0x00\n        /* \"#utility.yul\":19447:19449   */\n      0x1f\n        /* \"#utility.yul\":19439:19445   */\n      dup4\n        /* \"#utility.yul\":19436:19450   */\n      gt\n        /* \"#utility.yul\":19464:19465   */\n      0x01\n        /* \"#utility.yul\":19459:20131   */\n      dup2\n      eq\n      tag_569\n      jumpi\n        /* \"#utility.yul\":20175:20176   */\n      0x00\n        /* \"#utility.yul\":20192:20198   */\n      dup5\n        /* \"#utility.yul\":20189:20266   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":20241:20250   */\n      dup3\n        /* \"#utility.yul\":20236:20239   */\n      dup8\n        /* \"#utility.yul\":20232:20251   */\n      add\n        /* \"#utility.yul\":20226:20252   */\n      sload\n        /* \"#utility.yul\":20217:20252   */\n      swap1\n      pop\n        /* \"#utility.yul\":20189:20266   */\n    tag_570:\n        /* \"#utility.yul\":20292:20359   */\n      tag_571\n        /* \"#utility.yul\":20352:20358   */\n      dup6\n        /* \"#utility.yul\":20345:20350   */\n      dup3\n        /* \"#utility.yul\":20292:20359   */\n      tag_359\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":20286:20290   */\n      dup7\n        /* \"#utility.yul\":20279:20360   */\n      sstore\n        /* \"#utility.yul\":20148:20370   */\n      pop\n        /* \"#utility.yul\":19429:20370   */\n      jump(tag_568)\n        /* \"#utility.yul\":19459:20131   */\n    tag_569:\n        /* \"#utility.yul\":19511:19515   */\n      0x1f\n        /* \"#utility.yul\":19507:19516   */\n      not\n        /* \"#utility.yul\":19499:19505   */\n      dup5\n        /* \"#utility.yul\":19495:19517   */\n      and\n        /* \"#utility.yul\":19537:19573   */\n      tag_572\n        /* \"#utility.yul\":19569:19572   */\n      dup8\n        /* \"#utility.yul\":19537:19573   */\n      tag_345\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":19530:19573   */\n      swap7\n      pop\n        /* \"#utility.yul\":19600:19637   */\n      tag_573\n        /* \"#utility.yul\":19632:19636   */\n      dup7\n        /* \"#utility.yul\":19600:19637   */\n      tag_345\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19659:19660   */\n      0x00\n        /* \"#utility.yul\":19673:19880   */\n    tag_574:\n        /* \"#utility.yul\":19687:19694   */\n      dup3\n        /* \"#utility.yul\":19684:19685   */\n      dup2\n        /* \"#utility.yul\":19681:19695   */\n      lt\n        /* \"#utility.yul\":19673:19880   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":19766:19775   */\n      dup5\n        /* \"#utility.yul\":19761:19764   */\n      dup10\n        /* \"#utility.yul\":19757:19776   */\n      add\n        /* \"#utility.yul\":19751:19777   */\n      sload\n        /* \"#utility.yul\":19743:19749   */\n      dup3\n        /* \"#utility.yul\":19736:19778   */\n      sstore\n        /* \"#utility.yul\":19817:19818   */\n      0x01\n        /* \"#utility.yul\":19809:19815   */\n      dup3\n        /* \"#utility.yul\":19805:19819   */\n      add\n        /* \"#utility.yul\":19795:19819   */\n      swap2\n      pop\n        /* \"#utility.yul\":19864:19865   */\n      0x01\n        /* \"#utility.yul\":19853:19862   */\n      dup6\n        /* \"#utility.yul\":19849:19866   */\n      add\n        /* \"#utility.yul\":19836:19866   */\n      swap5\n      pop\n        /* \"#utility.yul\":19710:19714   */\n      0x20\n        /* \"#utility.yul\":19707:19708   */\n      dup2\n        /* \"#utility.yul\":19703:19715   */\n      add\n        /* \"#utility.yul\":19698:19715   */\n      swap1\n      pop\n        /* \"#utility.yul\":19673:19880   */\n      jump(tag_574)\n    tag_576:\n        /* \"#utility.yul\":19908:19914   */\n      dup7\n        /* \"#utility.yul\":19899:19906   */\n      dup4\n        /* \"#utility.yul\":19896:19915   */\n      lt\n        /* \"#utility.yul\":19893:20072   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":19966:19975   */\n      dup5\n        /* \"#utility.yul\":19961:19964   */\n      dup10\n        /* \"#utility.yul\":19957:19976   */\n      add\n        /* \"#utility.yul\":19951:19977   */\n      sload\n        /* \"#utility.yul\":20009:20057   */\n      tag_578\n        /* \"#utility.yul\":20051:20055   */\n      0x1f\n        /* \"#utility.yul\":20043:20049   */\n      dup10\n        /* \"#utility.yul\":20039:20056   */\n      and\n        /* \"#utility.yul\":20028:20037   */\n      dup3\n        /* \"#utility.yul\":20009:20057   */\n      tag_358\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":20001:20007   */\n      dup4\n        /* \"#utility.yul\":19994:20058   */\n      sstore\n        /* \"#utility.yul\":19916:20072   */\n      pop\n        /* \"#utility.yul\":19893:20072   */\n    tag_577:\n        /* \"#utility.yul\":20118:20119   */\n      0x01\n        /* \"#utility.yul\":20114:20115   */\n      0x02\n        /* \"#utility.yul\":20106:20112   */\n      dup9\n        /* \"#utility.yul\":20102:20116   */\n      mul\n        /* \"#utility.yul\":20098:20120   */\n      add\n        /* \"#utility.yul\":20092:20096   */\n      dup9\n        /* \"#utility.yul\":20085:20121   */\n      sstore\n        /* \"#utility.yul\":19466:20131   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19429:20370   */\n    tag_568:\n      pop\n        /* \"#utility.yul\":19014:20376   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18925:20376   */\n      pop\n      pop\n    tag_561:\n      jump\t// out\n        /* \"#utility.yul\":20382:21777   */\n    tag_260:\n        /* \"#utility.yul\":20499:20536   */\n      tag_580\n        /* \"#utility.yul\":20532:20535   */\n      dup3\n        /* \"#utility.yul\":20499:20536   */\n      tag_308\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":20601:20619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20593:20599   */\n      dup2\n        /* \"#utility.yul\":20590:20620   */\n      gt\n        /* \"#utility.yul\":20587:20643   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":20623:20641   */\n      tag_582\n      tag_329\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20587:20643   */\n    tag_581:\n        /* \"#utility.yul\":20667:20705   */\n      tag_583\n        /* \"#utility.yul\":20699:20703   */\n      dup3\n        /* \"#utility.yul\":20693:20704   */\n      sload\n        /* \"#utility.yul\":20667:20705   */\n      tag_163\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20752:20819   */\n      tag_584\n        /* \"#utility.yul\":20812:20818   */\n      dup3\n        /* \"#utility.yul\":20804:20810   */\n      dup3\n        /* \"#utility.yul\":20798:20802   */\n      dup6\n        /* \"#utility.yul\":20752:20819   */\n      tag_356\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":20846:20847   */\n      0x00\n        /* \"#utility.yul\":20870:20874   */\n      0x20\n        /* \"#utility.yul\":20857:20874   */\n      swap1\n      pop\n        /* \"#utility.yul\":20902:20904   */\n      0x1f\n        /* \"#utility.yul\":20894:20900   */\n      dup4\n        /* \"#utility.yul\":20891:20905   */\n      gt\n        /* \"#utility.yul\":20919:20920   */\n      0x01\n        /* \"#utility.yul\":20914:21532   */\n      dup2\n      eq\n      tag_586\n      jumpi\n        /* \"#utility.yul\":21576:21577   */\n      0x00\n        /* \"#utility.yul\":21593:21599   */\n      dup5\n        /* \"#utility.yul\":21590:21667   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":21642:21651   */\n      dup3\n        /* \"#utility.yul\":21637:21640   */\n      dup8\n        /* \"#utility.yul\":21633:21652   */\n      add\n        /* \"#utility.yul\":21627:21653   */\n      mload\n        /* \"#utility.yul\":21618:21653   */\n      swap1\n      pop\n        /* \"#utility.yul\":21590:21667   */\n    tag_587:\n        /* \"#utility.yul\":21693:21760   */\n      tag_588\n        /* \"#utility.yul\":21753:21759   */\n      dup6\n        /* \"#utility.yul\":21746:21751   */\n      dup3\n        /* \"#utility.yul\":21693:21760   */\n      tag_359\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21687:21691   */\n      dup7\n        /* \"#utility.yul\":21680:21761   */\n      sstore\n        /* \"#utility.yul\":21549:21771   */\n      pop\n        /* \"#utility.yul\":20884:21771   */\n      jump(tag_585)\n        /* \"#utility.yul\":20914:21532   */\n    tag_586:\n        /* \"#utility.yul\":20966:20970   */\n      0x1f\n        /* \"#utility.yul\":20962:20971   */\n      not\n        /* \"#utility.yul\":20954:20960   */\n      dup5\n        /* \"#utility.yul\":20950:20972   */\n      and\n        /* \"#utility.yul\":21000:21037   */\n      tag_589\n        /* \"#utility.yul\":21032:21036   */\n      dup7\n        /* \"#utility.yul\":21000:21037   */\n      tag_345\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":21059:21060   */\n      0x00\n        /* \"#utility.yul\":21073:21281   */\n    tag_590:\n        /* \"#utility.yul\":21087:21094   */\n      dup3\n        /* \"#utility.yul\":21084:21085   */\n      dup2\n        /* \"#utility.yul\":21081:21095   */\n      lt\n        /* \"#utility.yul\":21073:21281   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":21166:21175   */\n      dup5\n        /* \"#utility.yul\":21161:21164   */\n      dup10\n        /* \"#utility.yul\":21157:21176   */\n      add\n        /* \"#utility.yul\":21151:21177   */\n      mload\n        /* \"#utility.yul\":21143:21149   */\n      dup3\n        /* \"#utility.yul\":21136:21178   */\n      sstore\n        /* \"#utility.yul\":21217:21218   */\n      0x01\n        /* \"#utility.yul\":21209:21215   */\n      dup3\n        /* \"#utility.yul\":21205:21219   */\n      add\n        /* \"#utility.yul\":21195:21219   */\n      swap2\n      pop\n        /* \"#utility.yul\":21264:21266   */\n      0x20\n        /* \"#utility.yul\":21253:21262   */\n      dup6\n        /* \"#utility.yul\":21249:21267   */\n      add\n        /* \"#utility.yul\":21236:21267   */\n      swap5\n      pop\n        /* \"#utility.yul\":21110:21114   */\n      0x20\n        /* \"#utility.yul\":21107:21108   */\n      dup2\n        /* \"#utility.yul\":21103:21115   */\n      add\n        /* \"#utility.yul\":21098:21115   */\n      swap1\n      pop\n        /* \"#utility.yul\":21073:21281   */\n      jump(tag_590)\n    tag_592:\n        /* \"#utility.yul\":21309:21315   */\n      dup7\n        /* \"#utility.yul\":21300:21307   */\n      dup4\n        /* \"#utility.yul\":21297:21316   */\n      lt\n        /* \"#utility.yul\":21294:21473   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":21367:21376   */\n      dup5\n        /* \"#utility.yul\":21362:21365   */\n      dup10\n        /* \"#utility.yul\":21358:21377   */\n      add\n        /* \"#utility.yul\":21352:21378   */\n      mload\n        /* \"#utility.yul\":21410:21458   */\n      tag_594\n        /* \"#utility.yul\":21452:21456   */\n      0x1f\n        /* \"#utility.yul\":21444:21450   */\n      dup10\n        /* \"#utility.yul\":21440:21457   */\n      and\n        /* \"#utility.yul\":21429:21438   */\n      dup3\n        /* \"#utility.yul\":21410:21458   */\n      tag_358\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":21402:21408   */\n      dup4\n        /* \"#utility.yul\":21395:21459   */\n      sstore\n        /* \"#utility.yul\":21317:21473   */\n      pop\n        /* \"#utility.yul\":21294:21473   */\n    tag_593:\n        /* \"#utility.yul\":21519:21520   */\n      0x01\n        /* \"#utility.yul\":21515:21516   */\n      0x02\n        /* \"#utility.yul\":21507:21513   */\n      dup9\n        /* \"#utility.yul\":21503:21517   */\n      mul\n        /* \"#utility.yul\":21499:21521   */\n      add\n        /* \"#utility.yul\":21493:21497   */\n      dup9\n        /* \"#utility.yul\":21486:21522   */\n      sstore\n        /* \"#utility.yul\":20921:21532   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20884:21771   */\n    tag_585:\n      pop\n        /* \"#utility.yul\":20474:21777   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20382:21777   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21783:21974   */\n    tag_270:\n        /* \"#utility.yul\":21823:21826   */\n      0x00\n        /* \"#utility.yul\":21842:21862   */\n      tag_596\n        /* \"#utility.yul\":21860:21861   */\n      dup3\n        /* \"#utility.yul\":21842:21862   */\n      tag_302\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":21837:21862   */\n      swap2\n      pop\n        /* \"#utility.yul\":21876:21896   */\n      tag_597\n        /* \"#utility.yul\":21894:21895   */\n      dup4\n        /* \"#utility.yul\":21876:21896   */\n      tag_302\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":21871:21896   */\n      swap3\n      pop\n        /* \"#utility.yul\":21919:21920   */\n      dup3\n        /* \"#utility.yul\":21916:21917   */\n      dup3\n        /* \"#utility.yul\":21912:21921   */\n      add\n        /* \"#utility.yul\":21905:21921   */\n      swap1\n      pop\n        /* \"#utility.yul\":21940:21943   */\n      dup1\n        /* \"#utility.yul\":21937:21938   */\n      dup3\n        /* \"#utility.yul\":21934:21944   */\n      gt\n        /* \"#utility.yul\":21931:21967   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":21947:21965   */\n      tag_599\n      tag_304\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":21931:21967   */\n    tag_598:\n        /* \"#utility.yul\":21783:21974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21980:22422   */\n    tag_274:\n        /* \"#utility.yul\":22129:22133   */\n      0x00\n        /* \"#utility.yul\":22167:22169   */\n      0x60\n        /* \"#utility.yul\":22156:22165   */\n      dup3\n        /* \"#utility.yul\":22152:22170   */\n      add\n        /* \"#utility.yul\":22144:22170   */\n      swap1\n      pop\n        /* \"#utility.yul\":22180:22251   */\n      tag_601\n        /* \"#utility.yul\":22248:22249   */\n      0x00\n        /* \"#utility.yul\":22237:22246   */\n      dup4\n        /* \"#utility.yul\":22233:22250   */\n      add\n        /* \"#utility.yul\":22224:22230   */\n      dup7\n        /* \"#utility.yul\":22180:22251   */\n      tag_336\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":22261:22333   */\n      tag_602\n        /* \"#utility.yul\":22329:22331   */\n      0x20\n        /* \"#utility.yul\":22318:22327   */\n      dup4\n        /* \"#utility.yul\":22314:22332   */\n      add\n        /* \"#utility.yul\":22305:22311   */\n      dup6\n        /* \"#utility.yul\":22261:22333   */\n      tag_324\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":22343:22415   */\n      tag_603\n        /* \"#utility.yul\":22411:22413   */\n      0x40\n        /* \"#utility.yul\":22400:22409   */\n      dup4\n        /* \"#utility.yul\":22396:22414   */\n      add\n        /* \"#utility.yul\":22387:22393   */\n      dup5\n        /* \"#utility.yul\":22343:22415   */\n      tag_324\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":21980:22422   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122051c1f0ad3d570470af07a16992dbb386b0df97685a6104fc32e390373d6006e864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1031": {
									"entryPoint": null,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 658,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 455,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 791,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 650,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2250,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9836:7",
										"nodeType": "YulBlock",
										"src": "0:9836:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											},
											{
												"body": {
													"nativeSrc": "5279:81:7",
													"nodeType": "YulBlock",
													"src": "5279:81:7",
													"statements": [
														{
															"nativeSrc": "5289:65:7",
															"nodeType": "YulAssignment",
															"src": "5289:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:7",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:7"
																},
																"nativeSrc": "5300:54:7",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:7",
														"nodeType": "YulTypedName",
														"src": "5261:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:7",
														"nodeType": "YulTypedName",
														"src": "5271:7:7",
														"type": ""
													}
												],
												"src": "5234:126:7"
											},
											{
												"body": {
													"nativeSrc": "5411:51:7",
													"nodeType": "YulBlock",
													"src": "5411:51:7",
													"statements": [
														{
															"nativeSrc": "5421:35:7",
															"nodeType": "YulAssignment",
															"src": "5421:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:7"
																},
																"nativeSrc": "5432:24:7",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:7",
														"nodeType": "YulTypedName",
														"src": "5393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:7",
														"nodeType": "YulTypedName",
														"src": "5403:7:7",
														"type": ""
													}
												],
												"src": "5366:96:7"
											},
											{
												"body": {
													"nativeSrc": "5533:53:7",
													"nodeType": "YulBlock",
													"src": "5533:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:7"
																		},
																		"nativeSrc": "5555:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:7"
																},
																"nativeSrc": "5543:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:7"
															},
															"nativeSrc": "5543:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:7",
														"nodeType": "YulTypedName",
														"src": "5521:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:7",
														"nodeType": "YulTypedName",
														"src": "5528:3:7",
														"type": ""
													}
												],
												"src": "5468:118:7"
											},
											{
												"body": {
													"nativeSrc": "5690:124:7",
													"nodeType": "YulBlock",
													"src": "5690:124:7",
													"statements": [
														{
															"nativeSrc": "5700:26:7",
															"nodeType": "YulAssignment",
															"src": "5700:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:7"
																},
																"nativeSrc": "5708:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:7"
																		},
																		"nativeSrc": "5789:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:7"
																},
																"nativeSrc": "5736:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:7"
															},
															"nativeSrc": "5736:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:7",
														"nodeType": "YulTypedName",
														"src": "5662:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:7",
														"nodeType": "YulTypedName",
														"src": "5674:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:7",
														"nodeType": "YulTypedName",
														"src": "5685:4:7",
														"type": ""
													}
												],
												"src": "5592:222:7"
											},
											{
												"body": {
													"nativeSrc": "5848:152:7",
													"nodeType": "YulBlock",
													"src": "5848:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:7"
																},
																"nativeSrc": "5858:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:7"
															},
															"nativeSrc": "5858:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:7"
																},
																"nativeSrc": "5955:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:7"
															},
															"nativeSrc": "5955:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:7"
																},
																"nativeSrc": "5979:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:7"
															},
															"nativeSrc": "5979:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:7"
											},
											{
												"body": {
													"nativeSrc": "6057:51:7",
													"nodeType": "YulBlock",
													"src": "6057:51:7",
													"statements": [
														{
															"nativeSrc": "6067:34:7",
															"nodeType": "YulAssignment",
															"src": "6067:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6092:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6092:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6095:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:7"
																},
																"nativeSrc": "6088:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6088:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6067:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6067:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6006:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6038:5:7",
														"nodeType": "YulTypedName",
														"src": "6038:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6048:8:7",
														"nodeType": "YulTypedName",
														"src": "6048:8:7",
														"type": ""
													}
												],
												"src": "6006:102:7"
											},
											{
												"body": {
													"nativeSrc": "6187:775:7",
													"nodeType": "YulBlock",
													"src": "6187:775:7",
													"statements": [
														{
															"nativeSrc": "6197:15:7",
															"nodeType": "YulAssignment",
															"src": "6197:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "6206:6:7",
																"nodeType": "YulIdentifier",
																"src": "6206:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6197:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6197:5:7"
																}
															]
														},
														{
															"nativeSrc": "6221:14:7",
															"nodeType": "YulAssignment",
															"src": "6221:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "6230:5:7",
																"nodeType": "YulIdentifier",
																"src": "6230:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "6221:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6221:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6279:677:7",
																"nodeType": "YulBlock",
																"src": "6279:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "6367:22:7",
																			"nodeType": "YulBlock",
																			"src": "6367:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "6369:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "6369:16:7"
																						},
																						"nativeSrc": "6369:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6369:18:7"
																					},
																					"nativeSrc": "6369:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "6369:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6345:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6345:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "6355:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6355:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "6360:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6360:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "6351:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6351:3:7"
																					},
																					"nativeSrc": "6351:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6351:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "6342:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6342:2:7"
																			},
																			"nativeSrc": "6342:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6342:24:7"
																		},
																		"nativeSrc": "6339:50:7",
																		"nodeType": "YulIf",
																		"src": "6339:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "6434:419:7",
																			"nodeType": "YulBlock",
																			"src": "6434:419:7",
																			"statements": [
																				{
																					"nativeSrc": "6814:25:7",
																					"nodeType": "YulAssignment",
																					"src": "6814:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6827:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "6827:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6834:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6834:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6823:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6823:3:7"
																						},
																						"nativeSrc": "6823:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6823:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6814:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "6814:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6409:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6409:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6419:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6419:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6405:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6405:3:7"
																			},
																			"nativeSrc": "6405:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6405:16:7"
																		},
																		"nativeSrc": "6402:451:7",
																		"nodeType": "YulIf",
																		"src": "6402:451:7"
																	},
																	{
																		"nativeSrc": "6866:23:7",
																		"nodeType": "YulAssignment",
																		"src": "6866:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6878:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6878:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6884:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6884:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6874:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6874:3:7"
																			},
																			"nativeSrc": "6874:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6874:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6866:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6866:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6902:44:7",
																		"nodeType": "YulAssignment",
																		"src": "6902:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6937:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6937:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6914:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "6914:22:7"
																			},
																			"nativeSrc": "6914:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6914:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6902:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6902:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6255:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6255:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6265:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6252:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6252:2:7"
																},
																"nativeSrc": "6252:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6252:15:7"
															},
															"nativeSrc": "6244:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6268:2:7",
																"nodeType": "YulBlock",
																"src": "6268:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6248:3:7",
																"nodeType": "YulBlock",
																"src": "6248:3:7",
																"statements": []
															},
															"src": "6244:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "6114:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "6142:6:7",
														"nodeType": "YulTypedName",
														"src": "6142:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "6150:5:7",
														"nodeType": "YulTypedName",
														"src": "6150:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6157:8:7",
														"nodeType": "YulTypedName",
														"src": "6157:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6167:3:7",
														"nodeType": "YulTypedName",
														"src": "6167:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6175:5:7",
														"nodeType": "YulTypedName",
														"src": "6175:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "6182:4:7",
														"nodeType": "YulTypedName",
														"src": "6182:4:7",
														"type": ""
													}
												],
												"src": "6114:848:7"
											},
											{
												"body": {
													"nativeSrc": "7028:1013:7",
													"nodeType": "YulBlock",
													"src": "7028:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7223:20:7",
																"nodeType": "YulBlock",
																"src": "7223:20:7",
																"statements": [
																	{
																		"nativeSrc": "7225:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7225:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7234:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7234:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7225:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7236:5:7",
																		"nodeType": "YulLeave",
																		"src": "7236:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7213:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7213:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7206:6:7"
																},
																"nativeSrc": "7206:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7206:16:7"
															},
															"nativeSrc": "7203:40:7",
															"nodeType": "YulIf",
															"src": "7203:40:7"
														},
														{
															"body": {
																"nativeSrc": "7268:20:7",
																"nodeType": "YulBlock",
																"src": "7268:20:7",
																"statements": [
																	{
																		"nativeSrc": "7270:10:7",
																		"nodeType": "YulAssignment",
																		"src": "7270:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7279:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7279:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7270:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7270:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7281:5:7",
																		"nodeType": "YulLeave",
																		"src": "7281:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7262:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7262:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7255:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:7"
																},
																"nativeSrc": "7255:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7255:12:7"
															},
															"nativeSrc": "7252:36:7",
															"nodeType": "YulIf",
															"src": "7252:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7398:20:7",
																		"nodeType": "YulBlock",
																		"src": "7398:20:7",
																		"statements": [
																			{
																				"nativeSrc": "7400:10:7",
																				"nodeType": "YulAssignment",
																				"src": "7400:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7409:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7409:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7400:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7400:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "7411:5:7",
																				"nodeType": "YulLeave",
																				"src": "7411:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7391:27:7",
																	"nodeType": "YulCase",
																	"src": "7391:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7396:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7396:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7442:176:7",
																		"nodeType": "YulBlock",
																		"src": "7442:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "7477:22:7",
																					"nodeType": "YulBlock",
																					"src": "7477:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7479:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7479:16:7"
																								},
																								"nativeSrc": "7479:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7479:18:7"
																							},
																							"nativeSrc": "7479:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7479:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "7462:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7462:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7472:3:7",
																							"nodeType": "YulLiteral",
																							"src": "7472:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7459:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7459:2:7"
																					},
																					"nativeSrc": "7459:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7459:17:7"
																				},
																				"nativeSrc": "7456:43:7",
																				"nodeType": "YulIf",
																				"src": "7456:43:7"
																			},
																			{
																				"nativeSrc": "7512:25:7",
																				"nodeType": "YulAssignment",
																				"src": "7512:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7525:1:7",
																							"nodeType": "YulLiteral",
																							"src": "7525:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "7528:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7528:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "7521:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7521:3:7"
																					},
																					"nativeSrc": "7521:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7521:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "7512:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7512:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7568:22:7",
																					"nodeType": "YulBlock",
																					"src": "7568:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "7570:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "7570:16:7"
																								},
																								"nativeSrc": "7570:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7570:18:7"
																							},
																							"nativeSrc": "7570:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7570:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "7556:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7556:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "7563:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7563:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "7553:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7553:2:7"
																					},
																					"nativeSrc": "7553:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7553:14:7"
																				},
																				"nativeSrc": "7550:40:7",
																				"nodeType": "YulIf",
																				"src": "7550:40:7"
																			},
																			{
																				"nativeSrc": "7603:5:7",
																				"nodeType": "YulLeave",
																				"src": "7603:5:7"
																			}
																		]
																	},
																	"nativeSrc": "7427:191:7",
																	"nodeType": "YulCase",
																	"src": "7427:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7432:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "7348:4:7",
																"nodeType": "YulIdentifier",
																"src": "7348:4:7"
															},
															"nativeSrc": "7341:277:7",
															"nodeType": "YulSwitch",
															"src": "7341:277:7"
														},
														{
															"body": {
																"nativeSrc": "7750:123:7",
																"nodeType": "YulBlock",
																"src": "7750:123:7",
																"statements": [
																	{
																		"nativeSrc": "7764:28:7",
																		"nodeType": "YulAssignment",
																		"src": "7764:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7777:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7777:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7783:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7783:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7773:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7773:3:7"
																			},
																			"nativeSrc": "7773:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7773:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7764:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7823:22:7",
																			"nodeType": "YulBlock",
																			"src": "7823:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7825:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7825:16:7"
																						},
																						"nativeSrc": "7825:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7825:18:7"
																					},
																					"nativeSrc": "7825:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7825:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7811:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "7811:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7818:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7818:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7808:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7808:2:7"
																			},
																			"nativeSrc": "7808:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7808:14:7"
																		},
																		"nativeSrc": "7805:40:7",
																		"nodeType": "YulIf",
																		"src": "7805:40:7"
																	},
																	{
																		"nativeSrc": "7858:5:7",
																		"nodeType": "YulLeave",
																		"src": "7858:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7653:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7653:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7659:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7659:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7650:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7650:2:7"
																				},
																				"nativeSrc": "7650:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7650:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7667:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7667:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7677:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7677:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7664:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7664:2:7"
																				},
																				"nativeSrc": "7664:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7664:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7646:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7646:3:7"
																		},
																		"nativeSrc": "7646:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7646:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7702:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "7702:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7708:3:7",
																						"nodeType": "YulLiteral",
																						"src": "7708:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7699:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7699:2:7"
																				},
																				"nativeSrc": "7699:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7699:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7717:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7717:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7727:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7727:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7714:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "7714:2:7"
																				},
																				"nativeSrc": "7714:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7714:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7695:3:7"
																		},
																		"nativeSrc": "7695:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7695:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7630:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7630:2:7"
																},
																"nativeSrc": "7630:111:7",
																"nodeType": "YulFunctionCall",
																"src": "7630:111:7"
															},
															"nativeSrc": "7627:246:7",
															"nodeType": "YulIf",
															"src": "7627:246:7"
														},
														{
															"nativeSrc": "7883:57:7",
															"nodeType": "YulAssignment",
															"src": "7883:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7917:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7920:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7920:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7926:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7926:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7936:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7936:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7898:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7898:18:7"
																},
																"nativeSrc": "7898:42:7",
																"nodeType": "YulFunctionCall",
																"src": "7898:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7883:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7883:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "7890:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7979:22:7",
																"nodeType": "YulBlock",
																"src": "7979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7981:16:7"
																			},
																			"nativeSrc": "7981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7981:18:7"
																		},
																		"nativeSrc": "7981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7956:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7956:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7967:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7967:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7972:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7972:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7963:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:7"
																		},
																		"nativeSrc": "7963:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7953:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7953:2:7"
																},
																"nativeSrc": "7953:25:7",
																"nodeType": "YulFunctionCall",
																"src": "7953:25:7"
															},
															"nativeSrc": "7950:51:7",
															"nodeType": "YulIf",
															"src": "7950:51:7"
														},
														{
															"nativeSrc": "8010:25:7",
															"nodeType": "YulAssignment",
															"src": "8010:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8023:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8023:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8030:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8030:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:7"
																},
																"nativeSrc": "8019:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8019:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8010:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8010:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6968:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6998:4:7",
														"nodeType": "YulTypedName",
														"src": "6998:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7004:8:7",
														"nodeType": "YulTypedName",
														"src": "7004:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7014:3:7",
														"nodeType": "YulTypedName",
														"src": "7014:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7022:5:7",
														"nodeType": "YulTypedName",
														"src": "7022:5:7",
														"type": ""
													}
												],
												"src": "6968:1073:7"
											},
											{
												"body": {
													"nativeSrc": "8090:43:7",
													"nodeType": "YulBlock",
													"src": "8090:43:7",
													"statements": [
														{
															"nativeSrc": "8100:27:7",
															"nodeType": "YulAssignment",
															"src": "8100:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8115:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8115:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8122:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8122:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8111:3:7"
																},
																"nativeSrc": "8111:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8111:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8100:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8100:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8047:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8072:5:7",
														"nodeType": "YulTypedName",
														"src": "8072:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8082:7:7",
														"nodeType": "YulTypedName",
														"src": "8082:7:7",
														"type": ""
													}
												],
												"src": "8047:86:7"
											},
											{
												"body": {
													"nativeSrc": "8203:217:7",
													"nodeType": "YulBlock",
													"src": "8203:217:7",
													"statements": [
														{
															"nativeSrc": "8213:31:7",
															"nodeType": "YulAssignment",
															"src": "8213:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8239:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8239:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8221:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8221:17:7"
																},
																"nativeSrc": "8221:23:7",
																"nodeType": "YulFunctionCall",
																"src": "8221:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8213:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8213:4:7"
																}
															]
														},
														{
															"nativeSrc": "8253:37:7",
															"nodeType": "YulAssignment",
															"src": "8253:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8281:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8281:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "8265:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8265:15:7"
																},
																"nativeSrc": "8265:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8265:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "8253:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8253:8:7"
																}
															]
														},
														{
															"nativeSrc": "8300:113:7",
															"nodeType": "YulAssignment",
															"src": "8300:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8330:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8330:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8336:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8336:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8346:66:7",
																		"nodeType": "YulLiteral",
																		"src": "8346:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "8309:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "8309:20:7"
																},
																"nativeSrc": "8309:104:7",
																"nodeType": "YulFunctionCall",
																"src": "8309:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8300:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8300:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "8139:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8178:4:7",
														"nodeType": "YulTypedName",
														"src": "8178:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8184:8:7",
														"nodeType": "YulTypedName",
														"src": "8184:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8197:5:7",
														"nodeType": "YulTypedName",
														"src": "8197:5:7",
														"type": ""
													}
												],
												"src": "8139:281:7"
											},
											{
												"body": {
													"nativeSrc": "8474:362:7",
													"nodeType": "YulBlock",
													"src": "8474:362:7",
													"statements": [
														{
															"nativeSrc": "8484:25:7",
															"nodeType": "YulAssignment",
															"src": "8484:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8507:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8507:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8489:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8489:17:7"
																},
																"nativeSrc": "8489:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8489:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8484:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8484:1:7"
																}
															]
														},
														{
															"nativeSrc": "8518:25:7",
															"nodeType": "YulAssignment",
															"src": "8518:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8541:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8541:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8523:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8523:17:7"
																},
																"nativeSrc": "8523:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8523:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8518:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8518:1:7"
																}
															]
														},
														{
															"nativeSrc": "8552:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8552:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8575:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8575:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8578:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8578:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8571:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8571:3:7"
																},
																"nativeSrc": "8571:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8571:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8556:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8556:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8589:41:7",
															"nodeType": "YulAssignment",
															"src": "8589:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8618:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8618:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8600:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8600:17:7"
																},
																"nativeSrc": "8600:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8600:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8589:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8589:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8807:22:7",
																"nodeType": "YulBlock",
																"src": "8807:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8809:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8809:16:7"
																			},
																			"nativeSrc": "8809:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8809:18:7"
																		},
																		"nativeSrc": "8809:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8809:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8740:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8740:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8733:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8733:6:7"
																				},
																				"nativeSrc": "8733:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8733:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8763:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8763:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8770:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8770:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8779:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8779:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8766:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8766:3:7"
																						},
																						"nativeSrc": "8766:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8766:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8760:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8760:2:7"
																				},
																				"nativeSrc": "8760:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8760:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8713:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8713:2:7"
																		},
																		"nativeSrc": "8713:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8713:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8693:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8693:6:7"
																},
																"nativeSrc": "8693:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8693:113:7"
															},
															"nativeSrc": "8690:139:7",
															"nodeType": "YulIf",
															"src": "8690:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8426:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8457:1:7",
														"nodeType": "YulTypedName",
														"src": "8457:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8460:1:7",
														"nodeType": "YulTypedName",
														"src": "8460:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8466:7:7",
														"nodeType": "YulTypedName",
														"src": "8466:7:7",
														"type": ""
													}
												],
												"src": "8426:410:7"
											},
											{
												"body": {
													"nativeSrc": "8886:147:7",
													"nodeType": "YulBlock",
													"src": "8886:147:7",
													"statements": [
														{
															"nativeSrc": "8896:25:7",
															"nodeType": "YulAssignment",
															"src": "8896:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8919:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8919:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8901:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8901:17:7"
																},
																"nativeSrc": "8901:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8901:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8896:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8896:1:7"
																}
															]
														},
														{
															"nativeSrc": "8930:25:7",
															"nodeType": "YulAssignment",
															"src": "8930:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8953:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8953:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8935:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8935:17:7"
																},
																"nativeSrc": "8935:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8935:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8930:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8930:1:7"
																}
															]
														},
														{
															"nativeSrc": "8964:16:7",
															"nodeType": "YulAssignment",
															"src": "8964:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8975:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8975:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8978:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8978:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:7"
																},
																"nativeSrc": "8971:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8971:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8964:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8964:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9004:22:7",
																"nodeType": "YulBlock",
																"src": "9004:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9006:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9006:16:7"
																			},
																			"nativeSrc": "9006:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:18:7"
																		},
																		"nativeSrc": "9006:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8996:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8999:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8999:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8993:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8993:2:7"
																},
																"nativeSrc": "8993:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8993:10:7"
															},
															"nativeSrc": "8990:36:7",
															"nodeType": "YulIf",
															"src": "8990:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8842:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8873:1:7",
														"nodeType": "YulTypedName",
														"src": "8873:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8876:1:7",
														"nodeType": "YulTypedName",
														"src": "8876:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8882:3:7",
														"nodeType": "YulTypedName",
														"src": "8882:3:7",
														"type": ""
													}
												],
												"src": "8842:191:7"
											},
											{
												"body": {
													"nativeSrc": "9104:53:7",
													"nodeType": "YulBlock",
													"src": "9104:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9121:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9121:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9144:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9144:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9126:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "9126:17:7"
																		},
																		"nativeSrc": "9126:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9114:6:7"
																},
																"nativeSrc": "9114:37:7",
																"nodeType": "YulFunctionCall",
																"src": "9114:37:7"
															},
															"nativeSrc": "9114:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "9114:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9039:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9092:5:7",
														"nodeType": "YulTypedName",
														"src": "9092:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9099:3:7",
														"nodeType": "YulTypedName",
														"src": "9099:3:7",
														"type": ""
													}
												],
												"src": "9039:118:7"
											},
											{
												"body": {
													"nativeSrc": "9317:288:7",
													"nodeType": "YulBlock",
													"src": "9317:288:7",
													"statements": [
														{
															"nativeSrc": "9327:26:7",
															"nodeType": "YulAssignment",
															"src": "9327:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9339:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9339:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9350:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9350:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9335:3:7"
																},
																"nativeSrc": "9335:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9335:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9407:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9407:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9420:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9420:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9431:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9431:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9416:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9416:3:7"
																		},
																		"nativeSrc": "9416:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9416:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9363:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9363:43:7"
																},
																"nativeSrc": "9363:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9363:71:7"
															},
															"nativeSrc": "9363:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9363:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9488:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9501:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9501:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9512:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9512:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9497:3:7"
																		},
																		"nativeSrc": "9497:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9497:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9444:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9444:43:7"
																},
																"nativeSrc": "9444:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9444:72:7"
															},
															"nativeSrc": "9444:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9444:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9570:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9583:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9594:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9579:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:7"
																		},
																		"nativeSrc": "9579:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9526:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9526:43:7"
																},
																"nativeSrc": "9526:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9526:72:7"
															},
															"nativeSrc": "9526:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9526:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9163:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:7",
														"nodeType": "YulTypedName",
														"src": "9273:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9285:6:7",
														"nodeType": "YulTypedName",
														"src": "9285:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9293:6:7",
														"nodeType": "YulTypedName",
														"src": "9293:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9301:6:7",
														"nodeType": "YulTypedName",
														"src": "9301:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9312:4:7",
														"nodeType": "YulTypedName",
														"src": "9312:4:7",
														"type": ""
													}
												],
												"src": "9163:442:7"
											},
											{
												"body": {
													"nativeSrc": "9709:124:7",
													"nodeType": "YulBlock",
													"src": "9709:124:7",
													"statements": [
														{
															"nativeSrc": "9719:26:7",
															"nodeType": "YulAssignment",
															"src": "9719:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9731:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9742:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9727:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:7"
																},
																"nativeSrc": "9727:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9727:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9719:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9799:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9799:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9812:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9812:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9823:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9823:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:7"
																		},
																		"nativeSrc": "9808:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9755:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9755:43:7"
																},
																"nativeSrc": "9755:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9755:71:7"
															},
															"nativeSrc": "9755:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9755:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9611:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9681:9:7",
														"nodeType": "YulTypedName",
														"src": "9681:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9693:6:7",
														"nodeType": "YulTypedName",
														"src": "9693:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9704:4:7",
														"nodeType": "YulTypedName",
														"src": "9704:4:7",
														"type": ""
													}
												],
												"src": "9611:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052655af3107a4000600955600a805534801561001d575f80fd5b50336040518060400160405280600681526020017f5a6f6d62696500000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f42524e5300000000000000000000000000000000000000000000000000000000815250816003908161009a919061076a565b5080600490816100aa919061076a565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361011d575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101149190610878565b60405180910390fd5b61012c816101c760201b60201c565b506101643361013f61028a60201b60201c565b600a61014b91906109f9565b629896806101599190610a43565b61029260201b60201c565b6040518060400160405280600981526020017f4d616e68617474616e0000000000000000000000000000000000000000000000815250600b5f0190816101aa919061076a565b506064600b600101819055506103e8600b60020181905550610b14565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610302575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102f99190610878565b60405180910390fd5b6103135f838361031760201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610367578060025f82825461035b9190610a84565b92505081905550610435565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103f0578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103e793929190610ac6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361047c578060025f82825403925050819055506104c6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105239190610afb565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105ab57607f821691505b6020821081036105be576105bd610567565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105e5565b61062a86836105e5565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61066e61066961066484610642565b61064b565b610642565b9050919050565b5f819050919050565b61068783610654565b61069b61069382610675565b8484546105f1565b825550505050565b5f90565b6106af6106a3565b6106ba81848461067e565b505050565b5b818110156106dd576106d25f826106a7565b6001810190506106c0565b5050565b601f821115610722576106f3816105c4565b6106fc846105d6565b8101602085101561070b578190505b61071f610717856105d6565b8301826106bf565b50505b505050565b5f82821c905092915050565b5f6107425f1984600802610727565b1980831691505092915050565b5f61075a8383610733565b9150826002028217905092915050565b61077382610530565b67ffffffffffffffff81111561078c5761078b61053a565b5b6107968254610594565b6107a18282856106e1565b5f60209050601f8311600181146107d2575f84156107c0578287015190505b6107ca858261074f565b865550610831565b601f1984166107e0866105c4565b5f5b82811015610807578489015182556001820191506020850194506020810190506107e2565b868310156108245784890151610820601f891682610733565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61086282610839565b9050919050565b61087281610858565b82525050565b5f60208201905061088b5f830184610869565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610913578086048111156108ef576108ee610891565b5b60018516156108fe5780820291505b808102905061090c856108be565b94506108d3565b94509492505050565b5f8261092b57600190506109e6565b81610938575f90506109e6565b816001811461094e576002811461095857610987565b60019150506109e6565b60ff84111561096a57610969610891565b5b8360020a91508482111561098157610980610891565b5b506109e6565b5060208310610133831016604e8410600b84101617156109bc5782820a9050838111156109b7576109b6610891565b5b6109e6565b6109c984848460016108ca565b925090508184048111156109e0576109df610891565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a0382610642565b9150610a0e836109ed565b9250610a3b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461091c565b905092915050565b5f610a4d82610642565b9150610a5883610642565b9250828202610a6681610642565b91508282048414831517610a7d57610a7c610891565b5b5092915050565b5f610a8e82610642565b9150610a9983610642565b9250828201905080821115610ab157610ab0610891565b5b92915050565b610ac081610642565b82525050565b5f606082019050610ad95f830186610869565b610ae66020830185610ab7565b610af36040830184610ab7565b949350505050565b5f602082019050610b0e5f830184610ab7565b92915050565b61238e80610b215f395ff3fe608060405260043610610138575f3560e01c806395d89b41116100aa578063bc3d6dc31161006e578063bc3d6dc3146104ed578063c1280ae714610515578063dd62ed3e14610551578063ddca3f431461058d578063f2c298be146105b7578063f2fde38b146105df576101fd565b806395d89b411461041557806396eb64a91461043f578063a035b1fe1461045b578063a0d81ba614610485578063a9059cbb146104b1576101fd565b8063651dc0df116100fc578063651dc0df146102f757806370a082311461031f578063715018a61461035b578063738f5b5b1461037157806386e6e222146103ad5780638da5cb5b146103eb576101fd565b806306fdde0314610201578063095ea7b31461022b57806318160ddd1461026757806323b872dd14610291578063313ce567146102cd576101fd565b366101fd575f600a5460643461014e91906117d6565b6101589190611806565b90505f610163610607565b73ffffffffffffffffffffffffffffffffffffffff168260405161018690611874565b5f6040518083038185875af1925050503d805f81146101c0576040519150601f19603f3d011682016040523d82523d5f602084013e6101c5565b606091505b505090505f82346101d69190611888565b90505f600954826101e791906117d6565b90506101fb6101f4610607565b338361062f565b005b5f80fd5b34801561020c575f80fd5b5061021561071f565b604051610222919061192b565b60405180910390f35b348015610236575f80fd5b50610251600480360381019061024c91906119e0565b6107af565b60405161025e9190611a38565b60405180910390f35b348015610272575f80fd5b5061027b6107d1565b6040516102889190611a60565b60405180910390f35b34801561029c575f80fd5b506102b760048036038101906102b29190611a79565b6107da565b6040516102c49190611a38565b60405180910390f35b3480156102d8575f80fd5b506102e1610808565b6040516102ee9190611ae4565b60405180910390f35b348015610302575f80fd5b5061031d60048036038101906103189190611c29565b610810565b005b34801561032a575f80fd5b5061034560048036038101906103409190611c9f565b610a37565b6040516103529190611a60565b60405180910390f35b348015610366575f80fd5b5061036f610a7c565b005b34801561037c575f80fd5b5061039760048036038101906103929190611cca565b610a8f565b6040516103a49190611a60565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce9190611cca565b610ac2565b6040516103e293929190611d11565b60405180910390f35b3480156103f6575f80fd5b506103ff610607565b60405161040c9190611d5c565b60405180910390f35b348015610420575f80fd5b50610429610b86565b604051610436919061192b565b60405180910390f35b61045960048036038101906104549190611c9f565b610c16565b005b348015610466575f80fd5b5061046f610d8d565b60405161047c9190611a60565b60405180910390f35b348015610490575f80fd5b50610499610d93565b6040516104a893929190611d11565b60405180910390f35b3480156104bc575f80fd5b506104d760048036038101906104d291906119e0565b610e30565b6040516104e49190611a38565b60405180910390f35b3480156104f8575f80fd5b50610513600480360381019061050e9190611cca565b610e52565b005b348015610520575f80fd5b5061053b60048036038101906105369190611cca565b610f8f565b6040516105489190611a60565b60405180910390f35b34801561055c575f80fd5b5061057760048036038101906105729190611d75565b610fbb565b6040516105849190611a60565b60405180910390f35b348015610598575f80fd5b506105a161103d565b6040516105ae9190611a60565b60405180910390f35b3480156105c2575f80fd5b506105dd60048036038101906105d89190611cca565b611043565b005b3480156105ea575f80fd5b5061060560048036038101906106009190611c9f565b611111565b005b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361069f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106969190611d5c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107069190611d5c565b60405180910390fd5b61071a838383611195565b505050565b60606003805461072e90611de0565b80601f016020809104026020016040519081016040528092919081815260200182805461075a90611de0565b80156107a55780601f1061077c576101008083540402835291602001916107a5565b820191905f5260205f20905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b5f806107b96113ae565b90506107c68185856113b5565b600191505092915050565b5f600254905090565b5f806107e46113ae565b90506107f18582856113c7565b6107fc85858561062f565b60019150509392505050565b5f6012905090565b6007816040516108209190611e4a565b90815260200160405180910390205f01805490506007826040516108449190611e4a565b9081526020016040518091039020600101819055505f60088260405161086a9190611e4a565b908152602001604051809103902060020154036108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611eaa565b60405180910390fd5b6008816040516108cc9190611e4a565b9081526020016040518091039020600101546007836040516108ee9190611e4a565b9081526020016040518091039020600101541015610941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093890611f12565b60405180910390fd5b5f5b6007836040516109539190611e4a565b908152602001604051809103902060010154811015610a0c576109ff610977610607565b6007856040516109879190611e4a565b90815260200160405180910390205f0183815481106109a9576109a8611f30565b5b905f5260205f2090600202016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008856040516109e89190611e4a565b90815260200160405180910390206002015461062f565b8080600101915050610943565b505f600882604051610a1e9190611e4a565b9081526020016040518091039020600201819055505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a8461145a565b610a8d5f6114e1565b565b6007818051602081018201805184825260208301602085012081835280955050505050505f915090508060010154905081565b6008818051602081018201805184825260208301602085012081835280955050505050505f91509050805f018054610af990611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2590611de0565b8015610b705780601f10610b4757610100808354040283529160200191610b70565b820191905f5260205f20905b815481529060010190602001808311610b5357829003601f168201915b5050505050908060010154908060020154905083565b606060048054610b9590611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc190611de0565b8015610c0c5780601f10610be357610100808354040283529160200191610c0c565b820191905f5260205f20905b815481529060010190602001808311610bef57829003601f168201915b5050505050905090565b600180811115610c2957610c28611f5d565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160149054906101000a900460ff166001811115610c8957610c88611f5d565b5b14610c92575f80fd5b600180811115610ca557610ca4611f5d565b5b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160149054906101000a900460ff166001811115610d0557610d04611f5d565b5b03610d0e575f80fd5b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160146101000a81548160ff02191690836001811115610d7257610d71611f5d565b5b0217905550610d8a610d82610607565b33606461062f565b50565b60095481565b600b805f018054610da390611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcf90611de0565b8015610e1a5780601f10610df157610100808354040283529160200191610e1a565b820191905f5260205f20905b815481529060010190602001808311610dfd57829003601f168201915b5050505050908060010154908060020154905083565b5f80610e3a6113ae565b9050610e4781858561062f565b600191505092915050565b600781604051610e629190611e4a565b90815260200160405180910390205f0160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f8201815f019081610ee7919061213c565b50600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610f8557610f84611f5d565b5b0217905550505050565b5f600782604051610fa09190611e4a565b90815260200160405180910390205f01805490509050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600a5481565b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01908161108f9190612221565b503360065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61111961145a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611189575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111809190611d5c565b60405180910390fd5b611192816114e1565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111e5578060025f8282546111d991906122f0565b925050819055506112b3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561126e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161126593929190612323565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112fa578060025f8282540392505081905550611344565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113a19190611a60565b60405180910390a3505050565b5f33905090565b6113c283838360016115a4565b505050565b5f6113d28484610fbb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114545781811015611445578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161143c93929190612323565b60405180910390fd5b61145384848484035f6115a4565b5b50505050565b6114626113ae565b73ffffffffffffffffffffffffffffffffffffffff16611480610607565b73ffffffffffffffffffffffffffffffffffffffff16146114df576114a36113ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114d69190611d5c565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611614575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161160b9190611d5c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611684575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161167b9190611d5c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561176d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117649190611a60565b60405180910390a35b50505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117e082611773565b91506117eb83611773565b9250826117fb576117fa61177c565b5b828204905092915050565b5f61181082611773565b915061181b83611773565b925082820261182981611773565b915082820484148315176118405761183f6117a9565b5b5092915050565b5f81905092915050565b50565b5f61185f5f83611847565b915061186a82611851565b5f82019050919050565b5f61187e82611854565b9150819050919050565b5f61189282611773565b915061189d83611773565b92508282039050818111156118b5576118b46117a9565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118fd826118bb565b61190781856118c5565b93506119178185602086016118d5565b611920816118e3565b840191505092915050565b5f6020820190508181035f83015261194381846118f3565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119858261195c565b9050919050565b6119958161197b565b811461199f575f80fd5b50565b5f813590506119b08161198c565b92915050565b6119bf81611773565b81146119c9575f80fd5b50565b5f813590506119da816119b6565b92915050565b5f80604083850312156119f6576119f5611954565b5b5f611a03858286016119a2565b9250506020611a14858286016119cc565b9150509250929050565b5f8115159050919050565b611a3281611a1e565b82525050565b5f602082019050611a4b5f830184611a29565b92915050565b611a5a81611773565b82525050565b5f602082019050611a735f830184611a51565b92915050565b5f805f60608486031215611a9057611a8f611954565b5b5f611a9d868287016119a2565b9350506020611aae868287016119a2565b9250506040611abf868287016119cc565b9150509250925092565b5f60ff82169050919050565b611ade81611ac9565b82525050565b5f602082019050611af75f830184611ad5565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b3b826118e3565b810181811067ffffffffffffffff82111715611b5a57611b59611b05565b5b80604052505050565b5f611b6c61194b565b9050611b788282611b32565b919050565b5f67ffffffffffffffff821115611b9757611b96611b05565b5b611ba0826118e3565b9050602081019050919050565b828183375f83830152505050565b5f611bcd611bc884611b7d565b611b63565b905082815260208101848484011115611be957611be8611b01565b5b611bf4848285611bad565b509392505050565b5f82601f830112611c1057611c0f611afd565b5b8135611c20848260208601611bbb565b91505092915050565b5f8060408385031215611c3f57611c3e611954565b5b5f83013567ffffffffffffffff811115611c5c57611c5b611958565b5b611c6885828601611bfc565b925050602083013567ffffffffffffffff811115611c8957611c88611958565b5b611c9585828601611bfc565b9150509250929050565b5f60208284031215611cb457611cb3611954565b5b5f611cc1848285016119a2565b91505092915050565b5f60208284031215611cdf57611cde611954565b5b5f82013567ffffffffffffffff811115611cfc57611cfb611958565b5b611d0884828501611bfc565b91505092915050565b5f6060820190508181035f830152611d2981866118f3565b9050611d386020830185611a51565b611d456040830184611a51565b949350505050565b611d568161197b565b82525050565b5f602082019050611d6f5f830184611d4d565b92915050565b5f8060408385031215611d8b57611d8a611954565b5b5f611d98858286016119a2565b9250506020611da9858286016119a2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611df757607f821691505b602082108103611e0a57611e09611db3565b5b50919050565b5f81905092915050565b5f611e24826118bb565b611e2e8185611e10565b9350611e3e8185602086016118d5565b80840191505092915050565b5f611e558284611e1a565b915081905092915050565b7f4e6f2073756368207465727269746f72790000000000000000000000000000005f82015250565b5f611e946011836118c5565b9150611e9f82611e60565b602082019050919050565b5f6020820190508181035f830152611ec181611e88565b9050919050565b7f486f72646520646f65736e2774206861766520656e6f75676820706f776572005f82015250565b5f611efc601f836118c5565b9150611f0782611ec8565b602082019050919050565b5f6020820190508181035f830152611f2981611ef0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f81549050611f9881611de0565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611ffb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fc0565b6120058683611fc0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61204061203b61203684611773565b61201d565b611773565b9050919050565b5f819050919050565b61205983612026565b61206d61206582612047565b848454611fcc565b825550505050565b5f90565b612081612075565b61208c818484612050565b505050565b5b818110156120af576120a45f82612079565b600181019050612092565b5050565b601f8211156120f4576120c581611f9f565b6120ce84611fb1565b810160208510156120dd578190505b6120f16120e985611fb1565b830182612091565b50505b505050565b5f82821c905092915050565b5f6121145f19846008026120f9565b1980831691505092915050565b5f61212c8383612105565b9150826002028217905092915050565b81810361214a57505061221f565b61215382611f8a565b67ffffffffffffffff81111561216c5761216b611b05565b5b6121768254611de0565b6121818282856120b3565b5f601f8311600181146121ae575f841561219c578287015490505b6121a68582612121565b865550612218565b601f1984166121bc87611f9f565b96506121c786611f9f565b5f5b828110156121ee578489015482556001820191506001850194506020810190506121c9565b8683101561220b5784890154612207601f891682612105565b8355505b6001600288020188555050505b5050505050505b565b61222a826118bb565b67ffffffffffffffff81111561224357612242611b05565b5b61224d8254611de0565b6122588282856120b3565b5f60209050601f831160018114612289575f8415612277578287015190505b6122818582612121565b8655506122e8565b601f19841661229786611f9f565b5f5b828110156122be57848901518255600182019150602085019450602081019050612299565b868310156122db57848901516122d7601f891682612105565b8355505b6001600288020188555050505b505050505050565b5f6122fa82611773565b915061230583611773565b925082820190508082111561231d5761231c6117a9565b5b92915050565b5f6060820190506123365f830186611d4d565b6123436020830185611a51565b6123506040830184611a51565b94935050505056fea264697066735822122051c1f0ad3d570470af07a16992dbb386b0df97685a6104fc32e390373d6006e864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH6 0x5AF3107A4000 PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A6F6D6269650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x42524E5300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 PUSH2 0x1C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x164 CALLER PUSH2 0x13F PUSH2 0x28A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x9F9 JUMP JUMPDEST PUSH3 0x989680 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0xA43 JUMP JUMPDEST PUSH2 0x292 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D616E68617474616E0000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0xB PUSH0 ADD SWAP1 DUP2 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0xB PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH1 0xB PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xB14 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x302 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x313 PUSH0 DUP4 DUP4 PUSH2 0x317 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x367 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x435 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3F0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x47C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4C6 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0xAFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5AB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5BE JUMPI PUSH2 0x5BD PUSH2 0x567 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x620 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x62A DUP7 DUP4 PUSH2 0x5E5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x66E PUSH2 0x669 PUSH2 0x664 DUP5 PUSH2 0x642 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x687 DUP4 PUSH2 0x654 JUMP JUMPDEST PUSH2 0x69B PUSH2 0x693 DUP3 PUSH2 0x675 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5F1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6AF PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x6BA DUP2 DUP5 DUP5 PUSH2 0x67E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6D2 PUSH0 DUP3 PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x722 JUMPI PUSH2 0x6F3 DUP2 PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x6FC DUP5 PUSH2 0x5D6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x70B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x71F PUSH2 0x717 DUP6 PUSH2 0x5D6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6BF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x742 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x727 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75A DUP4 DUP4 PUSH2 0x733 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x773 DUP3 PUSH2 0x530 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x78C JUMPI PUSH2 0x78B PUSH2 0x53A JUMP JUMPDEST JUMPDEST PUSH2 0x796 DUP3 SLOAD PUSH2 0x594 JUMP JUMPDEST PUSH2 0x7A1 DUP3 DUP3 DUP6 PUSH2 0x6E1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7D2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7C0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7CA DUP6 DUP3 PUSH2 0x74F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x831 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7E0 DUP7 PUSH2 0x5C4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x807 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x824 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x820 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x733 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x862 DUP3 PUSH2 0x839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x872 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x88B PUSH0 DUP4 ADD DUP5 PUSH2 0x869 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x913 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8EF JUMPI PUSH2 0x8EE PUSH2 0x891 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x8FE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x90C DUP6 PUSH2 0x8BE JUMP JUMPDEST SWAP5 POP PUSH2 0x8D3 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x92B JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9E6 JUMP JUMPDEST DUP2 PUSH2 0x938 JUMPI PUSH0 SWAP1 POP PUSH2 0x9E6 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x94E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x958 JUMPI PUSH2 0x987 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x96A JUMPI PUSH2 0x969 PUSH2 0x891 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x981 JUMPI PUSH2 0x980 PUSH2 0x891 JUMP JUMPDEST JUMPDEST POP PUSH2 0x9E6 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9BC JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x891 JUMP JUMPDEST JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x9C9 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x8CA JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH2 0x9DF PUSH2 0x891 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA03 DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP2 POP PUSH2 0xA0E DUP4 PUSH2 0x9ED JUMP JUMPDEST SWAP3 POP PUSH2 0xA3B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x91C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA4D DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP2 POP PUSH2 0xA58 DUP4 PUSH2 0x642 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA66 DUP2 PUSH2 0x642 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA7D JUMPI PUSH2 0xA7C PUSH2 0x891 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA8E DUP3 PUSH2 0x642 JUMP JUMPDEST SWAP2 POP PUSH2 0xA99 DUP4 PUSH2 0x642 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAB1 JUMPI PUSH2 0xAB0 PUSH2 0x891 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAC0 DUP2 PUSH2 0x642 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAD9 PUSH0 DUP4 ADD DUP7 PUSH2 0x869 JUMP JUMPDEST PUSH2 0xAE6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAB7 JUMP JUMPDEST PUSH2 0xAF3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB0E PUSH0 DUP4 ADD DUP5 PUSH2 0xAB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x238E DUP1 PUSH2 0xB21 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x138 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xBC3D6DC3 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xBC3D6DC3 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xC1280AE7 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xF2C298BE EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DF JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x96EB64A9 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xA0D81BA6 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B1 JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x651DC0DF GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x651DC0DF EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x738F5B5B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x86E6E222 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CD JUMPI PUSH2 0x1FD JUMP JUMPDEST CALLDATASIZE PUSH2 0x1FD JUMPI PUSH0 PUSH1 0xA SLOAD PUSH1 0x64 CALLVALUE PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x163 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP3 CALLVALUE PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP3 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB PUSH2 0x1F4 PUSH2 0x607 JUMP JUMPDEST CALLER DUP4 PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0xA7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x577 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A1 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1043 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x69F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71A DUP4 DUP4 DUP4 PUSH2 0x1195 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x72E SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75A SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7B9 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0x7C6 DUP2 DUP6 DUP6 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E4 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0x7F1 DUP6 DUP3 DUP6 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x7FC DUP6 DUP6 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA0C JUMPI PUSH2 0x9FF PUSH2 0x977 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x1F30 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x62F JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x943 JUMP JUMPDEST POP PUSH0 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA84 PUSH2 0x145A JUMP JUMPDEST PUSH2 0xA8D PUSH0 PUSH2 0x14E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xAF9 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB25 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB95 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC1 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC29 JUMPI PUSH2 0xC28 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC92 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD0E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xD8A PUSH2 0xD82 PUSH2 0x607 JUMP JUMPDEST CALLER PUSH1 0x64 PUSH2 0x62F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xDA3 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDCF SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3A PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0xE47 DUP2 DUP6 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xEE7 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF85 JUMPI PUSH2 0xF84 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SWAP1 DUP2 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP CALLER PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1119 PUSH2 0x145A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1189 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0x14E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x126E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1344 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D2 DUP5 DUP5 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1454 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1445 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1453 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1462 PUSH2 0x13AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1480 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14DF JUMPI PUSH2 0x14A3 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D6 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1614 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1684 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167B SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x176D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E0 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EB DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17FB JUMPI PUSH2 0x17FA PUSH2 0x177C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1810 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1829 DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x185F PUSH0 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x186A DUP3 PUSH2 0x1851 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187E DUP3 PUSH2 0x1854 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1892 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x189D DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FD DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1907 DUP2 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1917 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1920 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1943 DUP2 DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1985 DUP3 PUSH2 0x195C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19BF DUP2 PUSH2 0x1773 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19DA DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A03 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A14 DUP6 DUP3 DUP7 ADD PUSH2 0x19CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A32 DUP2 PUSH2 0x1A1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5A DUP2 PUSH2 0x1773 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9D DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AAE DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ABF DUP7 DUP3 DUP8 ADD PUSH2 0x19CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADE DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B3B DUP3 PUSH2 0x18E3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B5A JUMPI PUSH2 0x1B59 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6C PUSH2 0x194B JUMP JUMPDEST SWAP1 POP PUSH2 0x1B78 DUP3 DUP3 PUSH2 0x1B32 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA0 DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCD PUSH2 0x1BC8 DUP5 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x1B63 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH2 0x1BF4 DUP5 DUP3 DUP6 PUSH2 0x1BAD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C10 JUMPI PUSH2 0x1C0F PUSH2 0x1AFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1C68 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C89 JUMPI PUSH2 0x1C88 PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1C95 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC1 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDF JUMPI PUSH2 0x1CDE PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 DUP7 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DF7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1DB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E24 DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1E2E DUP2 DUP6 PUSH2 0x1E10 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E3E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 DUP5 PUSH2 0x1E1A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073756368207465727269746F7279000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E94 PUSH1 0x11 DUP4 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9F DUP3 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC1 DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F72646520646F65736E2774206861766520656E6F75676820706F77657200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC PUSH1 0x1F DUP4 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F29 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x1F98 DUP2 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FFB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x2005 DUP7 DUP4 PUSH2 0x1FC0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH2 0x203B PUSH2 0x2036 DUP5 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x201D JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2059 DUP4 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2065 DUP3 PUSH2 0x2047 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1FCC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x208C DUP2 DUP5 DUP5 PUSH2 0x2050 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20A4 PUSH0 DUP3 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2092 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20C5 DUP2 PUSH2 0x1F9F JUMP JUMPDEST PUSH2 0x20CE DUP5 PUSH2 0x1FB1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x20DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x20F1 PUSH2 0x20E9 DUP6 PUSH2 0x1FB1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2114 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x20F9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x212C DUP4 DUP4 PUSH2 0x2105 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x214A JUMPI POP POP PUSH2 0x221F JUMP JUMPDEST PUSH2 0x2153 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x2176 DUP3 SLOAD PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x2181 DUP3 DUP3 DUP6 PUSH2 0x20B3 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21AE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x219C JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x21A6 DUP6 DUP3 PUSH2 0x2121 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21BC DUP8 PUSH2 0x1F9F JUMP JUMPDEST SWAP7 POP PUSH2 0x21C7 DUP7 PUSH2 0x1F9F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21EE JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21C9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x220B JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2207 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2105 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x222A DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x224D DUP3 SLOAD PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x2258 DUP3 DUP3 DUP6 PUSH2 0x20B3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2289 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2277 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2281 DUP6 DUP3 PUSH2 0x2121 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2297 DUP7 PUSH2 0x1F9F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22BE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2299 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22DB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22D7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2105 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22FA DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x231D JUMPI PUSH2 0x231C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2336 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x2350 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC1 CREATE 0xAD RETURNDATASIZE JUMPI DIV PUSH17 0xAF07A16992DBB386B0DF97685A6104FC32 0xE3 SWAP1 CALLDATACOPY RETURNDATASIZE PUSH1 0x6 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "634:2259:6:-:0;;;1145:11;1125:31;;1180:2;1162:20;;1216:213;;;;;;;;;;1262:10;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1284:46:6::2;1290:10;1319;:8;;;:10;;:::i;:::-;1313:2;:16;;;;:::i;:::-;1302:8;:27;;;;:::i;:::-;1284:5;;;:46;;:::i;:::-;1340:23;;;;;;;;;;;;;;;;::::0;:4:::2;:9;;:23;;;;;;:::i;:::-;;1391:3;1373:4;:15;;:21;;;;1418:4;1404;:11;;:18;;;;634:2259:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;634:2259:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@City_990": {
									"entryPoint": 3475,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1255": {
									"entryPoint": null,
									"id": 1255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 5045,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 5540,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5210,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5038,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5063,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5345,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1583,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4501,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 4027,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1967,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2615,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@capture_1208": {
									"entryPoint": 2064,
									"id": 1208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 2056,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fee_987": {
									"entryPoint": 4157,
									"id": 987,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@formHorde_1114": {
									"entryPoint": 3666,
									"id": 1114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getPower_1128": {
									"entryPoint": 3983,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hordes_976": {
									"entryPoint": 2703,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@infect_1097": {
									"entryPoint": 3094,
									"id": 1097,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1823,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1543,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@price_984": {
									"entryPoint": 3469,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@register_1054": {
									"entryPoint": 4163,
									"id": 1054,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2684,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2950,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@territories_981": {
									"entryPoint": 2754,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 2001,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2010,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4369,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3632,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7441,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_storage": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8029,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7984,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 6225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8140,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22425:7",
										"nodeType": "YulBlock",
										"src": "0:22425:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "118:152:7",
													"nodeType": "YulBlock",
													"src": "118:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:7",
																		"nodeType": "YulLiteral",
																		"src": "135:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:7",
																		"nodeType": "YulLiteral",
																		"src": "138:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:7"
																},
																"nativeSrc": "128:88:7",
																"nodeType": "YulFunctionCall",
																"src": "128:88:7"
															},
															"nativeSrc": "128:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "232:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:7",
																		"nodeType": "YulLiteral",
																		"src": "235:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:7"
																},
																"nativeSrc": "225:15:7",
																"nodeType": "YulFunctionCall",
																"src": "225:15:7"
															},
															"nativeSrc": "225:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:7",
																		"nodeType": "YulLiteral",
																		"src": "256:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:7",
																		"nodeType": "YulLiteral",
																		"src": "259:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:7"
																},
																"nativeSrc": "249:15:7",
																"nodeType": "YulFunctionCall",
																"src": "249:15:7"
															},
															"nativeSrc": "249:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "90:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:7"
											},
											{
												"body": {
													"nativeSrc": "304:152:7",
													"nodeType": "YulBlock",
													"src": "304:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "321:1:7",
																		"nodeType": "YulLiteral",
																		"src": "321:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "324:77:7",
																		"nodeType": "YulLiteral",
																		"src": "324:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "314:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "314:6:7"
																},
																"nativeSrc": "314:88:7",
																"nodeType": "YulFunctionCall",
																"src": "314:88:7"
															},
															"nativeSrc": "314:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "314:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "418:1:7",
																		"nodeType": "YulLiteral",
																		"src": "418:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "421:4:7",
																		"nodeType": "YulLiteral",
																		"src": "421:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:7"
																},
																"nativeSrc": "411:15:7",
																"nodeType": "YulFunctionCall",
																"src": "411:15:7"
															},
															"nativeSrc": "411:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "411:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "442:1:7",
																		"nodeType": "YulLiteral",
																		"src": "442:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "445:4:7",
																		"nodeType": "YulLiteral",
																		"src": "445:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:7"
																},
																"nativeSrc": "435:15:7",
																"nodeType": "YulFunctionCall",
																"src": "435:15:7"
															},
															"nativeSrc": "435:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "435:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "276:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "276:180:7"
											},
											{
												"body": {
													"nativeSrc": "504:143:7",
													"nodeType": "YulBlock",
													"src": "504:143:7",
													"statements": [
														{
															"nativeSrc": "514:25:7",
															"nodeType": "YulAssignment",
															"src": "514:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "537:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "537:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "519:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "519:17:7"
																},
																"nativeSrc": "519:20:7",
																"nodeType": "YulFunctionCall",
																"src": "519:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "514:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:1:7"
																}
															]
														},
														{
															"nativeSrc": "548:25:7",
															"nodeType": "YulAssignment",
															"src": "548:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "571:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "571:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "553:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "553:17:7"
																},
																"nativeSrc": "553:20:7",
																"nodeType": "YulFunctionCall",
																"src": "553:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "548:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "548:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "595:22:7",
																"nodeType": "YulBlock",
																"src": "595:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "597:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:7"
																			},
																			"nativeSrc": "597:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:7"
																		},
																		"nativeSrc": "597:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "592:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "592:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "585:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:7"
																},
																"nativeSrc": "585:9:7",
																"nodeType": "YulFunctionCall",
																"src": "585:9:7"
															},
															"nativeSrc": "582:35:7",
															"nodeType": "YulIf",
															"src": "582:35:7"
														},
														{
															"nativeSrc": "627:14:7",
															"nodeType": "YulAssignment",
															"src": "627:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "636:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "636:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "639:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "639:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "632:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:7"
																},
																"nativeSrc": "632:9:7",
																"nodeType": "YulFunctionCall",
																"src": "632:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "627:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "462:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "493:1:7",
														"nodeType": "YulTypedName",
														"src": "493:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "496:1:7",
														"nodeType": "YulTypedName",
														"src": "496:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "502:1:7",
														"nodeType": "YulTypedName",
														"src": "502:1:7",
														"type": ""
													}
												],
												"src": "462:185:7"
											},
											{
												"body": {
													"nativeSrc": "701:362:7",
													"nodeType": "YulBlock",
													"src": "701:362:7",
													"statements": [
														{
															"nativeSrc": "711:25:7",
															"nodeType": "YulAssignment",
															"src": "711:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "734:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "734:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "716:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "716:17:7"
																},
																"nativeSrc": "716:20:7",
																"nodeType": "YulFunctionCall",
																"src": "716:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "711:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:1:7"
																}
															]
														},
														{
															"nativeSrc": "745:25:7",
															"nodeType": "YulAssignment",
															"src": "745:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "768:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "750:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "750:17:7"
																},
																"nativeSrc": "750:20:7",
																"nodeType": "YulFunctionCall",
																"src": "750:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "745:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:1:7"
																}
															]
														},
														{
															"nativeSrc": "779:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "779:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "802:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "805:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "805:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "798:3:7"
																},
																"nativeSrc": "798:9:7",
																"nodeType": "YulFunctionCall",
																"src": "798:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "783:11:7",
																	"nodeType": "YulTypedName",
																	"src": "783:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "816:41:7",
															"nodeType": "YulAssignment",
															"src": "816:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "845:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "845:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "827:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "827:17:7"
																},
																"nativeSrc": "827:30:7",
																"nodeType": "YulFunctionCall",
																"src": "827:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "816:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "816:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1034:22:7",
																"nodeType": "YulBlock",
																"src": "1034:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1036:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1036:16:7"
																			},
																			"nativeSrc": "1036:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1036:18:7"
																		},
																		"nativeSrc": "1036:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1036:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "967:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "967:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "960:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "960:6:7"
																				},
																				"nativeSrc": "960:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "960:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "990:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "990:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "997:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "997:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1006:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "1006:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "993:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "993:3:7"
																						},
																						"nativeSrc": "993:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "993:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "987:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "987:2:7"
																				},
																				"nativeSrc": "987:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "940:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "940:2:7"
																		},
																		"nativeSrc": "940:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "940:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:6:7"
																},
																"nativeSrc": "920:113:7",
																"nodeType": "YulFunctionCall",
																"src": "920:113:7"
															},
															"nativeSrc": "917:139:7",
															"nodeType": "YulIf",
															"src": "917:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "653:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "684:1:7",
														"nodeType": "YulTypedName",
														"src": "684:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "687:1:7",
														"nodeType": "YulTypedName",
														"src": "687:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "693:7:7",
														"nodeType": "YulTypedName",
														"src": "693:7:7",
														"type": ""
													}
												],
												"src": "653:410:7"
											},
											{
												"body": {
													"nativeSrc": "1182:34:7",
													"nodeType": "YulBlock",
													"src": "1182:34:7",
													"statements": [
														{
															"nativeSrc": "1192:18:7",
															"nodeType": "YulAssignment",
															"src": "1192:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "1207:3:7",
																"nodeType": "YulIdentifier",
																"src": "1207:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1192:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1192:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1069:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1154:3:7",
														"nodeType": "YulTypedName",
														"src": "1154:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1159:6:7",
														"nodeType": "YulTypedName",
														"src": "1159:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1170:11:7",
														"nodeType": "YulTypedName",
														"src": "1170:11:7",
														"type": ""
													}
												],
												"src": "1069:147:7"
											},
											{
												"body": {
													"nativeSrc": "1328:8:7",
													"nodeType": "YulBlock",
													"src": "1328:8:7",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "1222:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1320:6:7",
														"nodeType": "YulTypedName",
														"src": "1320:6:7",
														"type": ""
													}
												],
												"src": "1222:114:7"
											},
											{
												"body": {
													"nativeSrc": "1505:235:7",
													"nodeType": "YulBlock",
													"src": "1505:235:7",
													"statements": [
														{
															"nativeSrc": "1515:90:7",
															"nodeType": "YulAssignment",
															"src": "1515:90:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1598:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1598:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1603:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1522:75:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:75:7"
																},
																"nativeSrc": "1522:83:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:83:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1515:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1703:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "1614:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "1614:88:7"
																},
																"nativeSrc": "1614:93:7",
																"nodeType": "YulFunctionCall",
																"src": "1614:93:7"
															},
															"nativeSrc": "1614:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "1614:93:7"
														},
														{
															"nativeSrc": "1716:18:7",
															"nodeType": "YulAssignment",
															"src": "1716:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1727:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1727:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1732:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1723:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:3:7"
																},
																"nativeSrc": "1723:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1723:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1716:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1716:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "1342:398:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1493:3:7",
														"nodeType": "YulTypedName",
														"src": "1493:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1501:3:7",
														"nodeType": "YulTypedName",
														"src": "1501:3:7",
														"type": ""
													}
												],
												"src": "1342:398:7"
											},
											{
												"body": {
													"nativeSrc": "1934:191:7",
													"nodeType": "YulBlock",
													"src": "1934:191:7",
													"statements": [
														{
															"nativeSrc": "1945:154:7",
															"nodeType": "YulAssignment",
															"src": "1945:154:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2095:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2095:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1952:141:7",
																	"nodeType": "YulIdentifier",
																	"src": "1952:141:7"
																},
																"nativeSrc": "1952:147:7",
																"nodeType": "YulFunctionCall",
																"src": "1952:147:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:7"
																}
															]
														},
														{
															"nativeSrc": "2109:10:7",
															"nodeType": "YulAssignment",
															"src": "2109:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "2116:3:7",
																"nodeType": "YulIdentifier",
																"src": "2116:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1746:379:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1921:3:7",
														"nodeType": "YulTypedName",
														"src": "1921:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1930:3:7",
														"nodeType": "YulTypedName",
														"src": "1930:3:7",
														"type": ""
													}
												],
												"src": "1746:379:7"
											},
											{
												"body": {
													"nativeSrc": "2176:149:7",
													"nodeType": "YulBlock",
													"src": "2176:149:7",
													"statements": [
														{
															"nativeSrc": "2186:25:7",
															"nodeType": "YulAssignment",
															"src": "2186:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2209:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2209:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2191:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2191:17:7"
																},
																"nativeSrc": "2191:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2191:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2186:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2186:1:7"
																}
															]
														},
														{
															"nativeSrc": "2220:25:7",
															"nodeType": "YulAssignment",
															"src": "2220:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2243:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2243:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2225:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2225:17:7"
																},
																"nativeSrc": "2225:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2225:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2220:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "2220:1:7"
																}
															]
														},
														{
															"nativeSrc": "2254:17:7",
															"nodeType": "YulAssignment",
															"src": "2254:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2266:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2266:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2269:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2269:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2262:3:7"
																},
																"nativeSrc": "2262:9:7",
																"nodeType": "YulFunctionCall",
																"src": "2262:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2254:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2254:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2296:22:7",
																"nodeType": "YulBlock",
																"src": "2296:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2298:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2298:16:7"
																			},
																			"nativeSrc": "2298:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2298:18:7"
																		},
																		"nativeSrc": "2298:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2298:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2287:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2287:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2293:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2293:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2284:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:7"
																},
																"nativeSrc": "2284:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2284:11:7"
															},
															"nativeSrc": "2281:37:7",
															"nodeType": "YulIf",
															"src": "2281:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2131:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2162:1:7",
														"nodeType": "YulTypedName",
														"src": "2162:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2165:1:7",
														"nodeType": "YulTypedName",
														"src": "2165:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2171:4:7",
														"nodeType": "YulTypedName",
														"src": "2171:4:7",
														"type": ""
													}
												],
												"src": "2131:194:7"
											},
											{
												"body": {
													"nativeSrc": "2390:40:7",
													"nodeType": "YulBlock",
													"src": "2390:40:7",
													"statements": [
														{
															"nativeSrc": "2401:22:7",
															"nodeType": "YulAssignment",
															"src": "2401:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2417:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2417:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2411:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2411:5:7"
																},
																"nativeSrc": "2411:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2411:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2331:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2373:5:7",
														"nodeType": "YulTypedName",
														"src": "2373:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2383:6:7",
														"nodeType": "YulTypedName",
														"src": "2383:6:7",
														"type": ""
													}
												],
												"src": "2331:99:7"
											},
											{
												"body": {
													"nativeSrc": "2532:73:7",
													"nodeType": "YulBlock",
													"src": "2532:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2549:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2549:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2554:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2554:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:7"
																},
																"nativeSrc": "2542:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2542:19:7"
															},
															"nativeSrc": "2542:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2542:19:7"
														},
														{
															"nativeSrc": "2570:29:7",
															"nodeType": "YulAssignment",
															"src": "2570:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2589:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2589:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2594:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2594:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2585:3:7"
																},
																"nativeSrc": "2585:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2585:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2570:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2570:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2436:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2504:3:7",
														"nodeType": "YulTypedName",
														"src": "2504:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2509:6:7",
														"nodeType": "YulTypedName",
														"src": "2509:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2520:11:7",
														"nodeType": "YulTypedName",
														"src": "2520:11:7",
														"type": ""
													}
												],
												"src": "2436:169:7"
											},
											{
												"body": {
													"nativeSrc": "2673:77:7",
													"nodeType": "YulBlock",
													"src": "2673:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2690:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2690:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2695:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2695:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2700:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2684:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2684:5:7"
																},
																"nativeSrc": "2684:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2684:23:7"
															},
															"nativeSrc": "2684:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2684:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2727:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2727:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2732:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2732:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:7"
																		},
																		"nativeSrc": "2723:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2741:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2741:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:7"
																},
																"nativeSrc": "2716:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2716:27:7"
															},
															"nativeSrc": "2716:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2716:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2611:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2655:3:7",
														"nodeType": "YulTypedName",
														"src": "2655:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2660:3:7",
														"nodeType": "YulTypedName",
														"src": "2660:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2665:6:7",
														"nodeType": "YulTypedName",
														"src": "2665:6:7",
														"type": ""
													}
												],
												"src": "2611:139:7"
											},
											{
												"body": {
													"nativeSrc": "2804:54:7",
													"nodeType": "YulBlock",
													"src": "2804:54:7",
													"statements": [
														{
															"nativeSrc": "2814:38:7",
															"nodeType": "YulAssignment",
															"src": "2814:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2832:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2832:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2839:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2839:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2828:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:7"
																		},
																		"nativeSrc": "2828:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2828:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2848:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2848:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2844:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:7"
																		},
																		"nativeSrc": "2844:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2844:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:7"
																},
																"nativeSrc": "2824:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2824:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2756:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2787:5:7",
														"nodeType": "YulTypedName",
														"src": "2787:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2797:6:7",
														"nodeType": "YulTypedName",
														"src": "2797:6:7",
														"type": ""
													}
												],
												"src": "2756:102:7"
											},
											{
												"body": {
													"nativeSrc": "2956:285:7",
													"nodeType": "YulBlock",
													"src": "2956:285:7",
													"statements": [
														{
															"nativeSrc": "2966:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3013:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3013:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2980:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "2980:32:7"
																},
																"nativeSrc": "2980:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2980:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2970:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2970:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3028:78:7",
															"nodeType": "YulAssignment",
															"src": "3028:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3094:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3094:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3099:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3099:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3035:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3035:58:7"
																},
																"nativeSrc": "3035:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3035:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3028:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3028:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3154:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3154:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3161:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3161:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:7"
																		},
																		"nativeSrc": "3150:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3150:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3168:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3168:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3173:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3115:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "3115:34:7"
																},
																"nativeSrc": "3115:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3115:65:7"
															},
															"nativeSrc": "3115:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3115:65:7"
														},
														{
															"nativeSrc": "3189:46:7",
															"nodeType": "YulAssignment",
															"src": "3189:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3200:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3200:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3227:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3227:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3205:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "3205:21:7"
																		},
																		"nativeSrc": "3205:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3196:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:7"
																},
																"nativeSrc": "3196:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3196:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3189:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3189:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2864:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2937:5:7",
														"nodeType": "YulTypedName",
														"src": "2937:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2944:3:7",
														"nodeType": "YulTypedName",
														"src": "2944:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2952:3:7",
														"nodeType": "YulTypedName",
														"src": "2952:3:7",
														"type": ""
													}
												],
												"src": "2864:377:7"
											},
											{
												"body": {
													"nativeSrc": "3365:195:7",
													"nodeType": "YulBlock",
													"src": "3365:195:7",
													"statements": [
														{
															"nativeSrc": "3375:26:7",
															"nodeType": "YulAssignment",
															"src": "3375:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3387:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3387:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3398:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3383:3:7"
																},
																"nativeSrc": "3383:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3383:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3375:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3433:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3433:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3418:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:7"
																		},
																		"nativeSrc": "3418:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3441:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3441:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3447:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3447:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3437:3:7"
																		},
																		"nativeSrc": "3437:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3437:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3411:6:7"
																},
																"nativeSrc": "3411:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3411:47:7"
															},
															"nativeSrc": "3411:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3411:47:7"
														},
														{
															"nativeSrc": "3467:86:7",
															"nodeType": "YulAssignment",
															"src": "3467:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3539:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3539:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3548:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3548:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3475:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "3475:63:7"
																},
																"nativeSrc": "3475:78:7",
																"nodeType": "YulFunctionCall",
																"src": "3475:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3467:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3467:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3247:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3337:9:7",
														"nodeType": "YulTypedName",
														"src": "3337:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3349:6:7",
														"nodeType": "YulTypedName",
														"src": "3349:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3360:4:7",
														"nodeType": "YulTypedName",
														"src": "3360:4:7",
														"type": ""
													}
												],
												"src": "3247:313:7"
											},
											{
												"body": {
													"nativeSrc": "3606:35:7",
													"nodeType": "YulBlock",
													"src": "3606:35:7",
													"statements": [
														{
															"nativeSrc": "3616:19:7",
															"nodeType": "YulAssignment",
															"src": "3616:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3632:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3632:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3626:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3626:5:7"
																},
																"nativeSrc": "3626:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3626:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3616:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3616:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "3566:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3599:6:7",
														"nodeType": "YulTypedName",
														"src": "3599:6:7",
														"type": ""
													}
												],
												"src": "3566:75:7"
											},
											{
												"body": {
													"nativeSrc": "3736:28:7",
													"nodeType": "YulBlock",
													"src": "3736:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3753:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3753:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3756:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3756:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3746:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3746:6:7"
																},
																"nativeSrc": "3746:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3746:12:7"
															},
															"nativeSrc": "3746:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3746:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "3647:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3647:117:7"
											},
											{
												"body": {
													"nativeSrc": "3859:28:7",
													"nodeType": "YulBlock",
													"src": "3859:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3876:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3876:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3879:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3879:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3869:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:7"
																},
																"nativeSrc": "3869:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3869:12:7"
															},
															"nativeSrc": "3869:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "3869:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "3770:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3770:117:7"
											},
											{
												"body": {
													"nativeSrc": "3938:81:7",
													"nodeType": "YulBlock",
													"src": "3938:81:7",
													"statements": [
														{
															"nativeSrc": "3948:65:7",
															"nodeType": "YulAssignment",
															"src": "3948:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3963:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3963:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3970:42:7",
																		"nodeType": "YulLiteral",
																		"src": "3970:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3959:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:7"
																},
																"nativeSrc": "3959:54:7",
																"nodeType": "YulFunctionCall",
																"src": "3959:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3948:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3948:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3893:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3920:5:7",
														"nodeType": "YulTypedName",
														"src": "3920:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3930:7:7",
														"nodeType": "YulTypedName",
														"src": "3930:7:7",
														"type": ""
													}
												],
												"src": "3893:126:7"
											},
											{
												"body": {
													"nativeSrc": "4070:51:7",
													"nodeType": "YulBlock",
													"src": "4070:51:7",
													"statements": [
														{
															"nativeSrc": "4080:35:7",
															"nodeType": "YulAssignment",
															"src": "4080:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4109:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4109:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4091:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4091:17:7"
																},
																"nativeSrc": "4091:24:7",
																"nodeType": "YulFunctionCall",
																"src": "4091:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "4025:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4052:5:7",
														"nodeType": "YulTypedName",
														"src": "4052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4062:7:7",
														"nodeType": "YulTypedName",
														"src": "4062:7:7",
														"type": ""
													}
												],
												"src": "4025:96:7"
											},
											{
												"body": {
													"nativeSrc": "4170:79:7",
													"nodeType": "YulBlock",
													"src": "4170:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4227:16:7",
																"nodeType": "YulBlock",
																"src": "4227:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4236:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4236:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4239:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4239:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4229:6:7"
																			},
																			"nativeSrc": "4229:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4229:12:7"
																		},
																		"nativeSrc": "4229:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4229:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4193:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4193:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4218:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4218:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4200:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4200:17:7"
																				},
																				"nativeSrc": "4200:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4200:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4190:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4190:2:7"
																		},
																		"nativeSrc": "4190:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4183:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4183:6:7"
																},
																"nativeSrc": "4183:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4183:43:7"
															},
															"nativeSrc": "4180:63:7",
															"nodeType": "YulIf",
															"src": "4180:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4127:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4163:5:7",
														"nodeType": "YulTypedName",
														"src": "4163:5:7",
														"type": ""
													}
												],
												"src": "4127:122:7"
											},
											{
												"body": {
													"nativeSrc": "4307:87:7",
													"nodeType": "YulBlock",
													"src": "4307:87:7",
													"statements": [
														{
															"nativeSrc": "4317:29:7",
															"nodeType": "YulAssignment",
															"src": "4317:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4339:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4339:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4326:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4326:12:7"
																},
																"nativeSrc": "4326:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4326:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4317:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4317:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4382:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4382:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4355:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4355:26:7"
																},
																"nativeSrc": "4355:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4355:33:7"
															},
															"nativeSrc": "4355:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4355:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4255:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4285:6:7",
														"nodeType": "YulTypedName",
														"src": "4285:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4293:3:7",
														"nodeType": "YulTypedName",
														"src": "4293:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4301:5:7",
														"nodeType": "YulTypedName",
														"src": "4301:5:7",
														"type": ""
													}
												],
												"src": "4255:139:7"
											},
											{
												"body": {
													"nativeSrc": "4443:79:7",
													"nodeType": "YulBlock",
													"src": "4443:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4500:16:7",
																"nodeType": "YulBlock",
																"src": "4500:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4509:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4509:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4512:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4512:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4502:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4502:6:7"
																			},
																			"nativeSrc": "4502:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4502:12:7"
																		},
																		"nativeSrc": "4502:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4502:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4466:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4466:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4491:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4491:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4473:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4473:17:7"
																				},
																				"nativeSrc": "4473:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4473:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4463:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4463:2:7"
																		},
																		"nativeSrc": "4463:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4463:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4456:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:7"
																},
																"nativeSrc": "4456:43:7",
																"nodeType": "YulFunctionCall",
																"src": "4456:43:7"
															},
															"nativeSrc": "4453:63:7",
															"nodeType": "YulIf",
															"src": "4453:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4400:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4436:5:7",
														"nodeType": "YulTypedName",
														"src": "4436:5:7",
														"type": ""
													}
												],
												"src": "4400:122:7"
											},
											{
												"body": {
													"nativeSrc": "4580:87:7",
													"nodeType": "YulBlock",
													"src": "4580:87:7",
													"statements": [
														{
															"nativeSrc": "4590:29:7",
															"nodeType": "YulAssignment",
															"src": "4590:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4612:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4612:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4599:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "4599:12:7"
																},
																"nativeSrc": "4599:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4599:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4590:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4655:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4655:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4628:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "4628:26:7"
																},
																"nativeSrc": "4628:33:7",
																"nodeType": "YulFunctionCall",
																"src": "4628:33:7"
															},
															"nativeSrc": "4628:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "4628:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4528:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4558:6:7",
														"nodeType": "YulTypedName",
														"src": "4558:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4566:3:7",
														"nodeType": "YulTypedName",
														"src": "4566:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4574:5:7",
														"nodeType": "YulTypedName",
														"src": "4574:5:7",
														"type": ""
													}
												],
												"src": "4528:139:7"
											},
											{
												"body": {
													"nativeSrc": "4756:391:7",
													"nodeType": "YulBlock",
													"src": "4756:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4802:83:7",
																"nodeType": "YulBlock",
																"src": "4802:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4804:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4804:77:7"
																			},
																			"nativeSrc": "4804:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4804:79:7"
																		},
																		"nativeSrc": "4804:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4804:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4777:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4777:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4773:3:7"
																		},
																		"nativeSrc": "4773:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4773:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4798:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4769:3:7"
																},
																"nativeSrc": "4769:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4769:32:7"
															},
															"nativeSrc": "4766:119:7",
															"nodeType": "YulIf",
															"src": "4766:119:7"
														},
														{
															"nativeSrc": "4895:117:7",
															"nodeType": "YulBlock",
															"src": "4895:117:7",
															"statements": [
																{
																	"nativeSrc": "4910:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4910:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4924:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4924:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4914:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4914:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4939:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4939:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4974:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4974:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4985:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4985:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4970:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:7"
																				},
																				"nativeSrc": "4970:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4970:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4994:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4949:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4949:20:7"
																		},
																		"nativeSrc": "4949:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4949:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4939:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4939:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5022:118:7",
															"nodeType": "YulBlock",
															"src": "5022:118:7",
															"statements": [
																{
																	"nativeSrc": "5037:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5051:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5067:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5067:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5102:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5102:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5113:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5113:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5098:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5098:3:7"
																				},
																				"nativeSrc": "5098:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5098:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5122:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5122:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5077:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5077:20:7"
																		},
																		"nativeSrc": "5077:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5077:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5067:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5067:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4673:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4718:9:7",
														"nodeType": "YulTypedName",
														"src": "4718:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4729:7:7",
														"nodeType": "YulTypedName",
														"src": "4729:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4741:6:7",
														"nodeType": "YulTypedName",
														"src": "4741:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4749:6:7",
														"nodeType": "YulTypedName",
														"src": "4749:6:7",
														"type": ""
													}
												],
												"src": "4673:474:7"
											},
											{
												"body": {
													"nativeSrc": "5195:48:7",
													"nodeType": "YulBlock",
													"src": "5195:48:7",
													"statements": [
														{
															"nativeSrc": "5205:32:7",
															"nodeType": "YulAssignment",
															"src": "5205:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5230:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5230:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5223:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5223:6:7"
																		},
																		"nativeSrc": "5223:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5223:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5216:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5216:6:7"
																},
																"nativeSrc": "5216:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5216:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5205:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5205:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5153:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5177:5:7",
														"nodeType": "YulTypedName",
														"src": "5177:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5187:7:7",
														"nodeType": "YulTypedName",
														"src": "5187:7:7",
														"type": ""
													}
												],
												"src": "5153:90:7"
											},
											{
												"body": {
													"nativeSrc": "5308:50:7",
													"nodeType": "YulBlock",
													"src": "5308:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5325:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5345:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5345:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5330:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "5330:14:7"
																		},
																		"nativeSrc": "5330:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5330:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:7"
																},
																"nativeSrc": "5318:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5318:34:7"
															},
															"nativeSrc": "5318:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5318:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5249:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5296:5:7",
														"nodeType": "YulTypedName",
														"src": "5296:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5303:3:7",
														"nodeType": "YulTypedName",
														"src": "5303:3:7",
														"type": ""
													}
												],
												"src": "5249:109:7"
											},
											{
												"body": {
													"nativeSrc": "5456:118:7",
													"nodeType": "YulBlock",
													"src": "5456:118:7",
													"statements": [
														{
															"nativeSrc": "5466:26:7",
															"nodeType": "YulAssignment",
															"src": "5466:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5478:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:7"
																},
																"nativeSrc": "5474:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5474:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5466:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5540:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5553:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5564:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5564:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:7"
																		},
																		"nativeSrc": "5549:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5502:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5502:37:7"
																},
																"nativeSrc": "5502:65:7",
																"nodeType": "YulFunctionCall",
																"src": "5502:65:7"
															},
															"nativeSrc": "5502:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "5502:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5364:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5428:9:7",
														"nodeType": "YulTypedName",
														"src": "5428:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5440:6:7",
														"nodeType": "YulTypedName",
														"src": "5440:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5451:4:7",
														"nodeType": "YulTypedName",
														"src": "5451:4:7",
														"type": ""
													}
												],
												"src": "5364:210:7"
											},
											{
												"body": {
													"nativeSrc": "5645:53:7",
													"nodeType": "YulBlock",
													"src": "5645:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5662:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5662:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5685:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5685:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5667:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5667:17:7"
																		},
																		"nativeSrc": "5667:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5655:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:7"
																},
																"nativeSrc": "5655:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5655:37:7"
															},
															"nativeSrc": "5655:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5655:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5580:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5633:5:7",
														"nodeType": "YulTypedName",
														"src": "5633:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5640:3:7",
														"nodeType": "YulTypedName",
														"src": "5640:3:7",
														"type": ""
													}
												],
												"src": "5580:118:7"
											},
											{
												"body": {
													"nativeSrc": "5802:124:7",
													"nodeType": "YulBlock",
													"src": "5802:124:7",
													"statements": [
														{
															"nativeSrc": "5812:26:7",
															"nodeType": "YulAssignment",
															"src": "5812:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5824:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5835:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5835:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5820:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:7"
																},
																"nativeSrc": "5820:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5820:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5812:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5812:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5892:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5905:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5905:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5916:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5916:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5901:3:7"
																		},
																		"nativeSrc": "5901:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5901:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5848:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5848:43:7"
																},
																"nativeSrc": "5848:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5848:71:7"
															},
															"nativeSrc": "5848:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5848:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5704:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5774:9:7",
														"nodeType": "YulTypedName",
														"src": "5774:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5786:6:7",
														"nodeType": "YulTypedName",
														"src": "5786:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5797:4:7",
														"nodeType": "YulTypedName",
														"src": "5797:4:7",
														"type": ""
													}
												],
												"src": "5704:222:7"
											},
											{
												"body": {
													"nativeSrc": "6032:519:7",
													"nodeType": "YulBlock",
													"src": "6032:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6078:83:7",
																"nodeType": "YulBlock",
																"src": "6078:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6080:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6080:77:7"
																			},
																			"nativeSrc": "6080:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6080:79:7"
																		},
																		"nativeSrc": "6080:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6080:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6053:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6053:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6062:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6049:3:7"
																		},
																		"nativeSrc": "6049:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6049:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6074:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6045:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6045:3:7"
																},
																"nativeSrc": "6045:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6045:32:7"
															},
															"nativeSrc": "6042:119:7",
															"nodeType": "YulIf",
															"src": "6042:119:7"
														},
														{
															"nativeSrc": "6171:117:7",
															"nodeType": "YulBlock",
															"src": "6171:117:7",
															"statements": [
																{
																	"nativeSrc": "6186:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6186:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6200:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6200:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6190:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6190:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6215:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6215:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6250:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6250:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6261:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6261:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6246:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6246:3:7"
																				},
																				"nativeSrc": "6246:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6246:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6270:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6270:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6225:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6225:20:7"
																		},
																		"nativeSrc": "6225:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6225:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6215:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6215:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6298:118:7",
															"nodeType": "YulBlock",
															"src": "6298:118:7",
															"statements": [
																{
																	"nativeSrc": "6313:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6313:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6327:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6327:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6317:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6317:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6343:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6343:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6378:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6378:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6389:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6389:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6374:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6374:3:7"
																				},
																				"nativeSrc": "6374:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6374:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6398:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6398:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6353:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6353:20:7"
																		},
																		"nativeSrc": "6353:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6353:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6343:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6343:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6426:118:7",
															"nodeType": "YulBlock",
															"src": "6426:118:7",
															"statements": [
																{
																	"nativeSrc": "6441:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6441:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6455:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6455:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6445:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6445:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6471:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6471:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6506:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6506:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6517:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6517:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6502:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6502:3:7"
																				},
																				"nativeSrc": "6502:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6502:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6526:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6526:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6481:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6481:20:7"
																		},
																		"nativeSrc": "6481:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6481:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6471:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6471:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5932:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5986:9:7",
														"nodeType": "YulTypedName",
														"src": "5986:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5997:7:7",
														"nodeType": "YulTypedName",
														"src": "5997:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6009:6:7",
														"nodeType": "YulTypedName",
														"src": "6009:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6017:6:7",
														"nodeType": "YulTypedName",
														"src": "6017:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6025:6:7",
														"nodeType": "YulTypedName",
														"src": "6025:6:7",
														"type": ""
													}
												],
												"src": "5932:619:7"
											},
											{
												"body": {
													"nativeSrc": "6600:43:7",
													"nodeType": "YulBlock",
													"src": "6600:43:7",
													"statements": [
														{
															"nativeSrc": "6610:27:7",
															"nodeType": "YulAssignment",
															"src": "6610:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6625:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6632:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6632:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6621:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6621:3:7"
																},
																"nativeSrc": "6621:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6621:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6610:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6610:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6557:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6582:5:7",
														"nodeType": "YulTypedName",
														"src": "6582:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6592:7:7",
														"nodeType": "YulTypedName",
														"src": "6592:7:7",
														"type": ""
													}
												],
												"src": "6557:86:7"
											},
											{
												"body": {
													"nativeSrc": "6710:51:7",
													"nodeType": "YulBlock",
													"src": "6710:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6727:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6727:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6748:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6748:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6732:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "6732:15:7"
																		},
																		"nativeSrc": "6732:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6732:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6720:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:7"
																},
																"nativeSrc": "6720:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6720:35:7"
															},
															"nativeSrc": "6720:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "6720:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6649:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6698:5:7",
														"nodeType": "YulTypedName",
														"src": "6698:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6705:3:7",
														"nodeType": "YulTypedName",
														"src": "6705:3:7",
														"type": ""
													}
												],
												"src": "6649:112:7"
											},
											{
												"body": {
													"nativeSrc": "6861:120:7",
													"nodeType": "YulBlock",
													"src": "6861:120:7",
													"statements": [
														{
															"nativeSrc": "6871:26:7",
															"nodeType": "YulAssignment",
															"src": "6871:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6883:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6883:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6894:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6879:3:7"
																},
																"nativeSrc": "6879:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6879:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6871:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6871:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6947:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6947:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6960:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6960:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6971:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6971:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6956:3:7"
																		},
																		"nativeSrc": "6956:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6956:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6907:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "6907:39:7"
																},
																"nativeSrc": "6907:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6907:67:7"
															},
															"nativeSrc": "6907:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6907:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6767:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6833:9:7",
														"nodeType": "YulTypedName",
														"src": "6833:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6845:6:7",
														"nodeType": "YulTypedName",
														"src": "6845:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6856:4:7",
														"nodeType": "YulTypedName",
														"src": "6856:4:7",
														"type": ""
													}
												],
												"src": "6767:214:7"
											},
											{
												"body": {
													"nativeSrc": "7076:28:7",
													"nodeType": "YulBlock",
													"src": "7076:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7093:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7093:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7096:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7096:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7086:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7086:6:7"
																},
																"nativeSrc": "7086:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7086:12:7"
															},
															"nativeSrc": "7086:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7086:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6987:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6987:117:7"
											},
											{
												"body": {
													"nativeSrc": "7199:28:7",
													"nodeType": "YulBlock",
													"src": "7199:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7216:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7219:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7219:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7209:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:7"
																},
																"nativeSrc": "7209:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7209:12:7"
															},
															"nativeSrc": "7209:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7209:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7110:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7110:117:7"
											},
											{
												"body": {
													"nativeSrc": "7261:152:7",
													"nodeType": "YulBlock",
													"src": "7261:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7281:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:7"
																},
																"nativeSrc": "7271:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7271:88:7"
															},
															"nativeSrc": "7271:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7271:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7375:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7375:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7378:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:7"
																},
																"nativeSrc": "7368:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7368:15:7"
															},
															"nativeSrc": "7368:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7368:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7399:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7399:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7402:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7402:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:7"
																},
																"nativeSrc": "7392:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7392:15:7"
															},
															"nativeSrc": "7392:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7392:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7233:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7233:180:7"
											},
											{
												"body": {
													"nativeSrc": "7462:238:7",
													"nodeType": "YulBlock",
													"src": "7462:238:7",
													"statements": [
														{
															"nativeSrc": "7472:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7472:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7494:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7494:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7524:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7524:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7502:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "7502:21:7"
																		},
																		"nativeSrc": "7502:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7502:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7490:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7490:3:7"
																},
																"nativeSrc": "7490:40:7",
																"nodeType": "YulFunctionCall",
																"src": "7490:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7476:10:7",
																	"nodeType": "YulTypedName",
																	"src": "7476:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7641:22:7",
																"nodeType": "YulBlock",
																"src": "7641:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7643:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7643:16:7"
																			},
																			"nativeSrc": "7643:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7643:18:7"
																		},
																		"nativeSrc": "7643:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7643:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7584:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7584:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7596:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7596:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7581:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7581:2:7"
																		},
																		"nativeSrc": "7581:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7581:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7620:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "7620:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7632:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7617:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7617:2:7"
																		},
																		"nativeSrc": "7617:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7617:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7578:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:7"
																},
																"nativeSrc": "7578:62:7",
																"nodeType": "YulFunctionCall",
																"src": "7578:62:7"
															},
															"nativeSrc": "7575:88:7",
															"nodeType": "YulIf",
															"src": "7575:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7679:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7679:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7683:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "7683:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:7"
																},
																"nativeSrc": "7672:22:7",
																"nodeType": "YulFunctionCall",
																"src": "7672:22:7"
															},
															"nativeSrc": "7672:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "7672:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7419:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7448:6:7",
														"nodeType": "YulTypedName",
														"src": "7448:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7456:4:7",
														"nodeType": "YulTypedName",
														"src": "7456:4:7",
														"type": ""
													}
												],
												"src": "7419:281:7"
											},
											{
												"body": {
													"nativeSrc": "7747:88:7",
													"nodeType": "YulBlock",
													"src": "7747:88:7",
													"statements": [
														{
															"nativeSrc": "7757:30:7",
															"nodeType": "YulAssignment",
															"src": "7757:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7767:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7767:18:7"
																},
																"nativeSrc": "7767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7767:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7757:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7816:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7816:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7824:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7824:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7796:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "7796:19:7"
																},
																"nativeSrc": "7796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7796:33:7"
															},
															"nativeSrc": "7796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7796:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7706:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7731:4:7",
														"nodeType": "YulTypedName",
														"src": "7731:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7740:6:7",
														"nodeType": "YulTypedName",
														"src": "7740:6:7",
														"type": ""
													}
												],
												"src": "7706:129:7"
											},
											{
												"body": {
													"nativeSrc": "7908:241:7",
													"nodeType": "YulBlock",
													"src": "7908:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8013:22:7",
																"nodeType": "YulBlock",
																"src": "8013:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8015:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8015:16:7"
																			},
																			"nativeSrc": "8015:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8015:18:7"
																		},
																		"nativeSrc": "8015:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8015:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7985:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7985:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7993:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7993:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7982:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:2:7"
																},
																"nativeSrc": "7982:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:30:7"
															},
															"nativeSrc": "7979:56:7",
															"nodeType": "YulIf",
															"src": "7979:56:7"
														},
														{
															"nativeSrc": "8045:37:7",
															"nodeType": "YulAssignment",
															"src": "8045:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8075:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8075:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8053:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "8053:21:7"
																},
																"nativeSrc": "8053:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8053:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8045:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:7"
																}
															]
														},
														{
															"nativeSrc": "8119:23:7",
															"nodeType": "YulAssignment",
															"src": "8119:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8131:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8131:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8137:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8137:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8127:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:7"
																},
																"nativeSrc": "8127:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8127:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8119:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7841:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7892:6:7",
														"nodeType": "YulTypedName",
														"src": "7892:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7903:4:7",
														"nodeType": "YulTypedName",
														"src": "7903:4:7",
														"type": ""
													}
												],
												"src": "7841:308:7"
											},
											{
												"body": {
													"nativeSrc": "8219:84:7",
													"nodeType": "YulBlock",
													"src": "8219:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8243:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8243:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8248:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8248:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8253:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8253:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8230:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8230:12:7"
																},
																"nativeSrc": "8230:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8230:30:7"
															},
															"nativeSrc": "8230:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8230:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8280:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8280:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8285:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8285:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8276:3:7"
																		},
																		"nativeSrc": "8276:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8276:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8294:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8269:6:7"
																},
																"nativeSrc": "8269:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8269:27:7"
															},
															"nativeSrc": "8269:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "8269:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8155:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8201:3:7",
														"nodeType": "YulTypedName",
														"src": "8201:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8206:3:7",
														"nodeType": "YulTypedName",
														"src": "8206:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8211:6:7",
														"nodeType": "YulTypedName",
														"src": "8211:6:7",
														"type": ""
													}
												],
												"src": "8155:148:7"
											},
											{
												"body": {
													"nativeSrc": "8393:341:7",
													"nodeType": "YulBlock",
													"src": "8393:341:7",
													"statements": [
														{
															"nativeSrc": "8403:75:7",
															"nodeType": "YulAssignment",
															"src": "8403:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8470:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8470:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8428:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "8428:41:7"
																		},
																		"nativeSrc": "8428:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8428:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8412:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8412:15:7"
																},
																"nativeSrc": "8412:66:7",
																"nodeType": "YulFunctionCall",
																"src": "8412:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8403:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8403:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8494:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8494:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8501:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8501:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8487:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8487:6:7"
																},
																"nativeSrc": "8487:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8487:21:7"
															},
															"nativeSrc": "8487:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8487:21:7"
														},
														{
															"nativeSrc": "8517:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8517:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8532:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8532:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8539:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8539:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8528:3:7"
																},
																"nativeSrc": "8528:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8528:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8521:3:7",
																	"nodeType": "YulTypedName",
																	"src": "8521:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8582:83:7",
																"nodeType": "YulBlock",
																"src": "8582:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8584:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8584:77:7"
																			},
																			"nativeSrc": "8584:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8584:79:7"
																		},
																		"nativeSrc": "8584:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8584:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8563:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8563:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8568:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8568:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8559:3:7"
																		},
																		"nativeSrc": "8559:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8559:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8577:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8577:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8556:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8556:2:7"
																},
																"nativeSrc": "8556:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8556:25:7"
															},
															"nativeSrc": "8553:112:7",
															"nodeType": "YulIf",
															"src": "8553:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8711:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8711:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8716:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8716:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8721:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8721:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8674:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "8674:36:7"
																},
																"nativeSrc": "8674:54:7",
																"nodeType": "YulFunctionCall",
																"src": "8674:54:7"
															},
															"nativeSrc": "8674:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "8674:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8309:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8366:3:7",
														"nodeType": "YulTypedName",
														"src": "8366:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8371:6:7",
														"nodeType": "YulTypedName",
														"src": "8371:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8379:3:7",
														"nodeType": "YulTypedName",
														"src": "8379:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8387:5:7",
														"nodeType": "YulTypedName",
														"src": "8387:5:7",
														"type": ""
													}
												],
												"src": "8309:425:7"
											},
											{
												"body": {
													"nativeSrc": "8816:278:7",
													"nodeType": "YulBlock",
													"src": "8816:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8865:83:7",
																"nodeType": "YulBlock",
																"src": "8865:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8867:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8867:77:7"
																			},
																			"nativeSrc": "8867:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8867:79:7"
																		},
																		"nativeSrc": "8867:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8867:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8844:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8844:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8852:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8852:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8840:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8840:3:7"
																				},
																				"nativeSrc": "8840:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8840:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8859:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8859:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8836:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8836:3:7"
																		},
																		"nativeSrc": "8836:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8836:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8829:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8829:6:7"
																},
																"nativeSrc": "8829:35:7",
																"nodeType": "YulFunctionCall",
																"src": "8829:35:7"
															},
															"nativeSrc": "8826:122:7",
															"nodeType": "YulIf",
															"src": "8826:122:7"
														},
														{
															"nativeSrc": "8957:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8957:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8984:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8984:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8971:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8971:12:7"
																},
																"nativeSrc": "8971:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8971:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8961:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8961:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9000:88:7",
															"nodeType": "YulAssignment",
															"src": "9000:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9061:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9061:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9069:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9069:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9057:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:7"
																		},
																		"nativeSrc": "9057:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9076:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9076:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9084:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9009:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "9009:47:7"
																},
																"nativeSrc": "9009:79:7",
																"nodeType": "YulFunctionCall",
																"src": "9009:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9000:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9000:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8754:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8794:6:7",
														"nodeType": "YulTypedName",
														"src": "8794:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8802:3:7",
														"nodeType": "YulTypedName",
														"src": "8802:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8810:5:7",
														"nodeType": "YulTypedName",
														"src": "8810:5:7",
														"type": ""
													}
												],
												"src": "8754:340:7"
											},
											{
												"body": {
													"nativeSrc": "9203:731:7",
													"nodeType": "YulBlock",
													"src": "9203:731:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9249:83:7",
																"nodeType": "YulBlock",
																"src": "9249:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9251:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9251:77:7"
																			},
																			"nativeSrc": "9251:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9251:79:7"
																		},
																		"nativeSrc": "9251:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9251:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9224:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9224:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9233:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9233:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:7"
																		},
																		"nativeSrc": "9220:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9220:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9245:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9216:3:7"
																},
																"nativeSrc": "9216:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9216:32:7"
															},
															"nativeSrc": "9213:119:7",
															"nodeType": "YulIf",
															"src": "9213:119:7"
														},
														{
															"nativeSrc": "9342:287:7",
															"nodeType": "YulBlock",
															"src": "9342:287:7",
															"statements": [
																{
																	"nativeSrc": "9357:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9357:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9388:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9388:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9399:1:7",
																						"nodeType": "YulLiteral",
																						"src": "9399:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9384:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9384:3:7"
																				},
																				"nativeSrc": "9384:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9384:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9371:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "9371:12:7"
																		},
																		"nativeSrc": "9371:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9371:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9361:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9361:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9449:83:7",
																		"nodeType": "YulBlock",
																		"src": "9449:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9451:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "9451:77:7"
																					},
																					"nativeSrc": "9451:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9451:79:7"
																				},
																				"nativeSrc": "9451:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9451:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9421:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9421:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9429:18:7",
																				"nodeType": "YulLiteral",
																				"src": "9429:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9418:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9418:2:7"
																		},
																		"nativeSrc": "9418:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9418:30:7"
																	},
																	"nativeSrc": "9415:117:7",
																	"nodeType": "YulIf",
																	"src": "9415:117:7"
																},
																{
																	"nativeSrc": "9546:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9546:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9591:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9591:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9602:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9602:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9587:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9587:3:7"
																				},
																				"nativeSrc": "9587:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9587:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9611:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9611:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9556:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "9556:30:7"
																		},
																		"nativeSrc": "9556:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9556:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9546:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9546:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9639:288:7",
															"nodeType": "YulBlock",
															"src": "9639:288:7",
															"statements": [
																{
																	"nativeSrc": "9654:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9654:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9685:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9685:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9696:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9696:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9681:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9681:3:7"
																				},
																				"nativeSrc": "9681:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9681:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9668:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "9668:12:7"
																		},
																		"nativeSrc": "9668:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9668:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9658:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9658:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9747:83:7",
																		"nodeType": "YulBlock",
																		"src": "9747:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9749:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "9749:77:7"
																					},
																					"nativeSrc": "9749:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9749:79:7"
																				},
																				"nativeSrc": "9749:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9749:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9719:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9719:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9727:18:7",
																				"nodeType": "YulLiteral",
																				"src": "9727:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9716:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9716:2:7"
																		},
																		"nativeSrc": "9716:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9716:30:7"
																	},
																	"nativeSrc": "9713:117:7",
																	"nodeType": "YulIf",
																	"src": "9713:117:7"
																},
																{
																	"nativeSrc": "9844:73:7",
																	"nodeType": "YulAssignment",
																	"src": "9844:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9889:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9889:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9900:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9900:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9885:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9885:3:7"
																				},
																				"nativeSrc": "9885:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9885:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9909:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9909:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9854:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "9854:30:7"
																		},
																		"nativeSrc": "9854:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9854:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9844:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9844:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "9100:834:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9165:9:7",
														"nodeType": "YulTypedName",
														"src": "9165:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9176:7:7",
														"nodeType": "YulTypedName",
														"src": "9176:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9188:6:7",
														"nodeType": "YulTypedName",
														"src": "9188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9196:6:7",
														"nodeType": "YulTypedName",
														"src": "9196:6:7",
														"type": ""
													}
												],
												"src": "9100:834:7"
											},
											{
												"body": {
													"nativeSrc": "10006:263:7",
													"nodeType": "YulBlock",
													"src": "10006:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10052:83:7",
																"nodeType": "YulBlock",
																"src": "10052:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10054:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10054:77:7"
																			},
																			"nativeSrc": "10054:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10054:79:7"
																		},
																		"nativeSrc": "10054:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10054:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10027:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10027:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10036:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10036:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10023:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10023:3:7"
																		},
																		"nativeSrc": "10023:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10023:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10048:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10048:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10019:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10019:3:7"
																},
																"nativeSrc": "10019:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10019:32:7"
															},
															"nativeSrc": "10016:119:7",
															"nodeType": "YulIf",
															"src": "10016:119:7"
														},
														{
															"nativeSrc": "10145:117:7",
															"nodeType": "YulBlock",
															"src": "10145:117:7",
															"statements": [
																{
																	"nativeSrc": "10160:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10160:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10174:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10174:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10164:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10164:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10189:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10189:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10224:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10224:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10235:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10235:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10220:3:7"
																				},
																				"nativeSrc": "10220:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10220:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10244:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10244:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10199:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10199:20:7"
																		},
																		"nativeSrc": "10199:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10199:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10189:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10189:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9940:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9976:9:7",
														"nodeType": "YulTypedName",
														"src": "9976:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9987:7:7",
														"nodeType": "YulTypedName",
														"src": "9987:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9999:6:7",
														"nodeType": "YulTypedName",
														"src": "9999:6:7",
														"type": ""
													}
												],
												"src": "9940:329:7"
											},
											{
												"body": {
													"nativeSrc": "10351:433:7",
													"nodeType": "YulBlock",
													"src": "10351:433:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10397:83:7",
																"nodeType": "YulBlock",
																"src": "10397:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10399:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10399:77:7"
																			},
																			"nativeSrc": "10399:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10399:79:7"
																		},
																		"nativeSrc": "10399:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10399:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10372:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10372:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10368:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10368:3:7"
																		},
																		"nativeSrc": "10368:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10368:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10393:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10393:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10364:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10364:3:7"
																},
																"nativeSrc": "10364:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10364:32:7"
															},
															"nativeSrc": "10361:119:7",
															"nodeType": "YulIf",
															"src": "10361:119:7"
														},
														{
															"nativeSrc": "10490:287:7",
															"nodeType": "YulBlock",
															"src": "10490:287:7",
															"statements": [
																{
																	"nativeSrc": "10505:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10505:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10536:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10536:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10547:1:7",
																						"nodeType": "YulLiteral",
																						"src": "10547:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10532:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10532:3:7"
																				},
																				"nativeSrc": "10532:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10532:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10519:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10519:12:7"
																		},
																		"nativeSrc": "10519:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10519:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10509:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10509:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10597:83:7",
																		"nodeType": "YulBlock",
																		"src": "10597:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10599:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10599:77:7"
																					},
																					"nativeSrc": "10599:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10599:79:7"
																				},
																				"nativeSrc": "10599:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10599:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10569:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10569:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10577:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10577:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10566:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10566:2:7"
																		},
																		"nativeSrc": "10566:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10566:30:7"
																	},
																	"nativeSrc": "10563:117:7",
																	"nodeType": "YulIf",
																	"src": "10563:117:7"
																},
																{
																	"nativeSrc": "10694:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10694:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10739:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10739:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10750:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10750:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10735:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10735:3:7"
																				},
																				"nativeSrc": "10735:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10735:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10759:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10759:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10704:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10704:30:7"
																		},
																		"nativeSrc": "10704:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10704:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10694:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10694:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "10275:509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10321:9:7",
														"nodeType": "YulTypedName",
														"src": "10321:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10332:7:7",
														"nodeType": "YulTypedName",
														"src": "10332:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10344:6:7",
														"nodeType": "YulTypedName",
														"src": "10344:6:7",
														"type": ""
													}
												],
												"src": "10275:509:7"
											},
											{
												"body": {
													"nativeSrc": "10964:359:7",
													"nodeType": "YulBlock",
													"src": "10964:359:7",
													"statements": [
														{
															"nativeSrc": "10974:26:7",
															"nodeType": "YulAssignment",
															"src": "10974:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10986:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10986:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10997:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10997:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10982:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10982:3:7"
																},
																"nativeSrc": "10982:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10982:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10974:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10974:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11021:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11021:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11032:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11032:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11017:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11017:3:7"
																		},
																		"nativeSrc": "11017:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11017:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11040:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11040:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11046:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11046:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11036:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:7"
																		},
																		"nativeSrc": "11036:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11036:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11010:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11010:6:7"
																},
																"nativeSrc": "11010:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11010:47:7"
															},
															"nativeSrc": "11010:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11010:47:7"
														},
														{
															"nativeSrc": "11066:86:7",
															"nodeType": "YulAssignment",
															"src": "11066:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11138:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11138:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11147:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11147:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11074:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "11074:63:7"
																},
																"nativeSrc": "11074:78:7",
																"nodeType": "YulFunctionCall",
																"src": "11074:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11066:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11066:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11206:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11206:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11219:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11219:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11230:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11230:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11215:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11215:3:7"
																		},
																		"nativeSrc": "11215:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11215:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11162:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11162:43:7"
																},
																"nativeSrc": "11162:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11162:72:7"
															},
															"nativeSrc": "11162:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11162:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11288:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11288:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11301:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11301:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11312:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11312:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11297:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11297:3:7"
																		},
																		"nativeSrc": "11297:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11297:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11244:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11244:43:7"
																},
																"nativeSrc": "11244:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11244:72:7"
															},
															"nativeSrc": "11244:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11244:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10790:533:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10920:9:7",
														"nodeType": "YulTypedName",
														"src": "10920:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10932:6:7",
														"nodeType": "YulTypedName",
														"src": "10932:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10940:6:7",
														"nodeType": "YulTypedName",
														"src": "10940:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10948:6:7",
														"nodeType": "YulTypedName",
														"src": "10948:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10959:4:7",
														"nodeType": "YulTypedName",
														"src": "10959:4:7",
														"type": ""
													}
												],
												"src": "10790:533:7"
											},
											{
												"body": {
													"nativeSrc": "11394:53:7",
													"nodeType": "YulBlock",
													"src": "11394:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11411:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11411:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11434:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11434:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11416:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "11416:17:7"
																		},
																		"nativeSrc": "11416:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:7"
																},
																"nativeSrc": "11404:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11404:37:7"
															},
															"nativeSrc": "11404:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "11404:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11329:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11382:5:7",
														"nodeType": "YulTypedName",
														"src": "11382:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11389:3:7",
														"nodeType": "YulTypedName",
														"src": "11389:3:7",
														"type": ""
													}
												],
												"src": "11329:118:7"
											},
											{
												"body": {
													"nativeSrc": "11551:124:7",
													"nodeType": "YulBlock",
													"src": "11551:124:7",
													"statements": [
														{
															"nativeSrc": "11561:26:7",
															"nodeType": "YulAssignment",
															"src": "11561:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11573:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11573:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11584:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11584:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11569:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:7"
																},
																"nativeSrc": "11569:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11569:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11561:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11641:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11641:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11654:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11654:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11665:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11665:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11650:3:7"
																		},
																		"nativeSrc": "11650:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11650:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11597:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11597:43:7"
																},
																"nativeSrc": "11597:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11597:71:7"
															},
															"nativeSrc": "11597:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11597:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11453:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11523:9:7",
														"nodeType": "YulTypedName",
														"src": "11523:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11535:6:7",
														"nodeType": "YulTypedName",
														"src": "11535:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11546:4:7",
														"nodeType": "YulTypedName",
														"src": "11546:4:7",
														"type": ""
													}
												],
												"src": "11453:222:7"
											},
											{
												"body": {
													"nativeSrc": "11764:391:7",
													"nodeType": "YulBlock",
													"src": "11764:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11810:83:7",
																"nodeType": "YulBlock",
																"src": "11810:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11812:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11812:77:7"
																			},
																			"nativeSrc": "11812:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11812:79:7"
																		},
																		"nativeSrc": "11812:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11812:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11785:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11785:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11794:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11794:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11781:3:7"
																		},
																		"nativeSrc": "11781:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11781:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11806:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11806:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11777:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11777:3:7"
																},
																"nativeSrc": "11777:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11777:32:7"
															},
															"nativeSrc": "11774:119:7",
															"nodeType": "YulIf",
															"src": "11774:119:7"
														},
														{
															"nativeSrc": "11903:117:7",
															"nodeType": "YulBlock",
															"src": "11903:117:7",
															"statements": [
																{
																	"nativeSrc": "11918:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11918:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11932:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11932:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11922:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11922:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11947:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11947:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11982:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11982:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11993:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11993:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11978:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11978:3:7"
																				},
																				"nativeSrc": "11978:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11978:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12002:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12002:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11957:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11957:20:7"
																		},
																		"nativeSrc": "11957:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11957:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11947:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11947:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12030:118:7",
															"nodeType": "YulBlock",
															"src": "12030:118:7",
															"statements": [
																{
																	"nativeSrc": "12045:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12045:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12059:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12059:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12049:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12049:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12075:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12075:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12110:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12110:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12121:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12121:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12106:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12106:3:7"
																				},
																				"nativeSrc": "12106:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12106:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12130:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12130:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12085:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12085:20:7"
																		},
																		"nativeSrc": "12085:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12085:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12075:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12075:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11681:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11726:9:7",
														"nodeType": "YulTypedName",
														"src": "11726:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11737:7:7",
														"nodeType": "YulTypedName",
														"src": "11737:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11749:6:7",
														"nodeType": "YulTypedName",
														"src": "11749:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11757:6:7",
														"nodeType": "YulTypedName",
														"src": "11757:6:7",
														"type": ""
													}
												],
												"src": "11681:474:7"
											},
											{
												"body": {
													"nativeSrc": "12189:152:7",
													"nodeType": "YulBlock",
													"src": "12189:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12206:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12206:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12209:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12209:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12199:6:7"
																},
																"nativeSrc": "12199:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12199:88:7"
															},
															"nativeSrc": "12199:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12199:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12303:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12303:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12306:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12306:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12296:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12296:6:7"
																},
																"nativeSrc": "12296:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12296:15:7"
															},
															"nativeSrc": "12296:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12296:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12327:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12327:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12330:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12330:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:7"
																},
																"nativeSrc": "12320:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12320:15:7"
															},
															"nativeSrc": "12320:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12320:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12161:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12161:180:7"
											},
											{
												"body": {
													"nativeSrc": "12398:269:7",
													"nodeType": "YulBlock",
													"src": "12398:269:7",
													"statements": [
														{
															"nativeSrc": "12408:22:7",
															"nodeType": "YulAssignment",
															"src": "12408:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12422:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12422:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12428:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12428:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12418:3:7"
																},
																"nativeSrc": "12418:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12418:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12408:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12408:6:7"
																}
															]
														},
														{
															"nativeSrc": "12439:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12439:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12469:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12469:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12475:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12475:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12465:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12465:3:7"
																},
																"nativeSrc": "12465:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12465:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12443:18:7",
																	"nodeType": "YulTypedName",
																	"src": "12443:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12516:51:7",
																"nodeType": "YulBlock",
																"src": "12516:51:7",
																"statements": [
																	{
																		"nativeSrc": "12530:27:7",
																		"nodeType": "YulAssignment",
																		"src": "12530:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12544:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12544:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12552:4:7",
																					"nodeType": "YulLiteral",
																					"src": "12552:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12540:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12540:3:7"
																			},
																			"nativeSrc": "12540:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12540:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12530:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12530:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12496:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "12496:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12489:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12489:6:7"
																},
																"nativeSrc": "12489:26:7",
																"nodeType": "YulFunctionCall",
																"src": "12489:26:7"
															},
															"nativeSrc": "12486:81:7",
															"nodeType": "YulIf",
															"src": "12486:81:7"
														},
														{
															"body": {
																"nativeSrc": "12619:42:7",
																"nodeType": "YulBlock",
																"src": "12619:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12633:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12633:16:7"
																			},
																			"nativeSrc": "12633:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12633:18:7"
																		},
																		"nativeSrc": "12633:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12633:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12583:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "12583:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12606:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12606:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12614:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12614:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12603:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12603:2:7"
																		},
																		"nativeSrc": "12603:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12603:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12580:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12580:2:7"
																},
																"nativeSrc": "12580:38:7",
																"nodeType": "YulFunctionCall",
																"src": "12580:38:7"
															},
															"nativeSrc": "12577:84:7",
															"nodeType": "YulIf",
															"src": "12577:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12347:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12382:4:7",
														"nodeType": "YulTypedName",
														"src": "12382:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12391:6:7",
														"nodeType": "YulTypedName",
														"src": "12391:6:7",
														"type": ""
													}
												],
												"src": "12347:320:7"
											},
											{
												"body": {
													"nativeSrc": "12787:34:7",
													"nodeType": "YulBlock",
													"src": "12787:34:7",
													"statements": [
														{
															"nativeSrc": "12797:18:7",
															"nodeType": "YulAssignment",
															"src": "12797:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "12812:3:7",
																"nodeType": "YulIdentifier",
																"src": "12812:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12797:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12797:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12673:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12759:3:7",
														"nodeType": "YulTypedName",
														"src": "12759:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12764:6:7",
														"nodeType": "YulTypedName",
														"src": "12764:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12775:11:7",
														"nodeType": "YulTypedName",
														"src": "12775:11:7",
														"type": ""
													}
												],
												"src": "12673:148:7"
											},
											{
												"body": {
													"nativeSrc": "12937:280:7",
													"nodeType": "YulBlock",
													"src": "12937:280:7",
													"statements": [
														{
															"nativeSrc": "12947:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12947:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12994:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12961:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "12961:32:7"
																},
																"nativeSrc": "12961:39:7",
																"nodeType": "YulFunctionCall",
																"src": "12961:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12951:6:7",
																	"nodeType": "YulTypedName",
																	"src": "12951:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13009:96:7",
															"nodeType": "YulAssignment",
															"src": "13009:96:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13093:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13093:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13098:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13098:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13016:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "13016:76:7"
																},
																"nativeSrc": "13016:89:7",
																"nodeType": "YulFunctionCall",
																"src": "13016:89:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13009:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13153:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13153:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13160:4:7",
																				"nodeType": "YulLiteral",
																				"src": "13160:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13149:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13149:3:7"
																		},
																		"nativeSrc": "13149:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13149:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13167:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13172:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13172:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13114:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "13114:34:7"
																},
																"nativeSrc": "13114:65:7",
																"nodeType": "YulFunctionCall",
																"src": "13114:65:7"
															},
															"nativeSrc": "13114:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "13114:65:7"
														},
														{
															"nativeSrc": "13188:23:7",
															"nodeType": "YulAssignment",
															"src": "13188:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13199:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13199:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13204:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13204:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13195:3:7"
																},
																"nativeSrc": "13195:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13195:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13188:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12827:390:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12918:5:7",
														"nodeType": "YulTypedName",
														"src": "12918:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12925:3:7",
														"nodeType": "YulTypedName",
														"src": "12925:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12933:3:7",
														"nodeType": "YulTypedName",
														"src": "12933:3:7",
														"type": ""
													}
												],
												"src": "12827:390:7"
											},
											{
												"body": {
													"nativeSrc": "13359:139:7",
													"nodeType": "YulBlock",
													"src": "13359:139:7",
													"statements": [
														{
															"nativeSrc": "13370:102:7",
															"nodeType": "YulAssignment",
															"src": "13370:102:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13459:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13459:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13468:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13468:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13377:81:7",
																	"nodeType": "YulIdentifier",
																	"src": "13377:81:7"
																},
																"nativeSrc": "13377:95:7",
																"nodeType": "YulFunctionCall",
																"src": "13377:95:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:7"
																}
															]
														},
														{
															"nativeSrc": "13482:10:7",
															"nodeType": "YulAssignment",
															"src": "13482:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "13489:3:7",
																"nodeType": "YulIdentifier",
																"src": "13489:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13482:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13482:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13223:275:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13338:3:7",
														"nodeType": "YulTypedName",
														"src": "13338:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13344:6:7",
														"nodeType": "YulTypedName",
														"src": "13344:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13355:3:7",
														"nodeType": "YulTypedName",
														"src": "13355:3:7",
														"type": ""
													}
												],
												"src": "13223:275:7"
											},
											{
												"body": {
													"nativeSrc": "13610:61:7",
													"nodeType": "YulBlock",
													"src": "13610:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13632:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13632:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13640:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13640:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:7"
																		},
																		"nativeSrc": "13628:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:14:7"
																	},
																	{
																		"hexValue": "4e6f2073756368207465727269746f7279",
																		"kind": "string",
																		"nativeSrc": "13644:19:7",
																		"nodeType": "YulLiteral",
																		"src": "13644:19:7",
																		"type": "",
																		"value": "No such territory"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13621:6:7"
																},
																"nativeSrc": "13621:43:7",
																"nodeType": "YulFunctionCall",
																"src": "13621:43:7"
															},
															"nativeSrc": "13621:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "13621:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b",
												"nativeSrc": "13504:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13602:6:7",
														"nodeType": "YulTypedName",
														"src": "13602:6:7",
														"type": ""
													}
												],
												"src": "13504:167:7"
											},
											{
												"body": {
													"nativeSrc": "13823:220:7",
													"nodeType": "YulBlock",
													"src": "13823:220:7",
													"statements": [
														{
															"nativeSrc": "13833:74:7",
															"nodeType": "YulAssignment",
															"src": "13833:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13899:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13899:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13904:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13904:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13840:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13840:58:7"
																},
																"nativeSrc": "13840:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13840:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13833:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13833:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14005:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14005:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b",
																	"nativeSrc": "13916:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13916:88:7"
																},
																"nativeSrc": "13916:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13916:93:7"
															},
															"nativeSrc": "13916:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13916:93:7"
														},
														{
															"nativeSrc": "14018:19:7",
															"nodeType": "YulAssignment",
															"src": "14018:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14029:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14029:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14034:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14034:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14025:3:7"
																},
																"nativeSrc": "14025:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14025:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14018:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13677:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13811:3:7",
														"nodeType": "YulTypedName",
														"src": "13811:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13819:3:7",
														"nodeType": "YulTypedName",
														"src": "13819:3:7",
														"type": ""
													}
												],
												"src": "13677:366:7"
											},
											{
												"body": {
													"nativeSrc": "14220:248:7",
													"nodeType": "YulBlock",
													"src": "14220:248:7",
													"statements": [
														{
															"nativeSrc": "14230:26:7",
															"nodeType": "YulAssignment",
															"src": "14230:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14242:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14242:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14253:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14253:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14238:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14238:3:7"
																},
																"nativeSrc": "14238:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14238:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14230:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14230:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14277:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14277:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14288:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14288:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14273:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14273:3:7"
																		},
																		"nativeSrc": "14273:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14273:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14296:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14296:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14302:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14302:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14292:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14292:3:7"
																		},
																		"nativeSrc": "14292:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14292:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14266:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14266:6:7"
																},
																"nativeSrc": "14266:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14266:47:7"
															},
															"nativeSrc": "14266:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14266:47:7"
														},
														{
															"nativeSrc": "14322:139:7",
															"nodeType": "YulAssignment",
															"src": "14322:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14456:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14456:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14330:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14330:124:7"
																},
																"nativeSrc": "14330:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14330:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14322:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14049:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14200:9:7",
														"nodeType": "YulTypedName",
														"src": "14200:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14215:4:7",
														"nodeType": "YulTypedName",
														"src": "14215:4:7",
														"type": ""
													}
												],
												"src": "14049:419:7"
											},
											{
												"body": {
													"nativeSrc": "14580:75:7",
													"nodeType": "YulBlock",
													"src": "14580:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14602:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14602:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14610:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14610:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14598:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14598:3:7"
																		},
																		"nativeSrc": "14598:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14598:14:7"
																	},
																	{
																		"hexValue": "486f72646520646f65736e2774206861766520656e6f75676820706f776572",
																		"kind": "string",
																		"nativeSrc": "14614:33:7",
																		"nodeType": "YulLiteral",
																		"src": "14614:33:7",
																		"type": "",
																		"value": "Horde doesn't have enough power"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14591:6:7"
																},
																"nativeSrc": "14591:57:7",
																"nodeType": "YulFunctionCall",
																"src": "14591:57:7"
															},
															"nativeSrc": "14591:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "14591:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74",
												"nativeSrc": "14474:181:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14572:6:7",
														"nodeType": "YulTypedName",
														"src": "14572:6:7",
														"type": ""
													}
												],
												"src": "14474:181:7"
											},
											{
												"body": {
													"nativeSrc": "14807:220:7",
													"nodeType": "YulBlock",
													"src": "14807:220:7",
													"statements": [
														{
															"nativeSrc": "14817:74:7",
															"nodeType": "YulAssignment",
															"src": "14817:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14883:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14883:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14888:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14888:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14824:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14824:58:7"
																},
																"nativeSrc": "14824:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14824:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14817:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14989:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14989:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74",
																	"nativeSrc": "14900:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14900:88:7"
																},
																"nativeSrc": "14900:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14900:93:7"
															},
															"nativeSrc": "14900:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14900:93:7"
														},
														{
															"nativeSrc": "15002:19:7",
															"nodeType": "YulAssignment",
															"src": "15002:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15013:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15013:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15018:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15018:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15009:3:7"
																},
																"nativeSrc": "15009:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15009:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15002:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15002:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14661:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14795:3:7",
														"nodeType": "YulTypedName",
														"src": "14795:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14803:3:7",
														"nodeType": "YulTypedName",
														"src": "14803:3:7",
														"type": ""
													}
												],
												"src": "14661:366:7"
											},
											{
												"body": {
													"nativeSrc": "15204:248:7",
													"nodeType": "YulBlock",
													"src": "15204:248:7",
													"statements": [
														{
															"nativeSrc": "15214:26:7",
															"nodeType": "YulAssignment",
															"src": "15214:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15226:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15226:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15237:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15237:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15222:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15222:3:7"
																},
																"nativeSrc": "15222:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15222:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15214:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15214:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15261:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15261:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15272:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15272:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15257:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15257:3:7"
																		},
																		"nativeSrc": "15257:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15257:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15280:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15280:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15286:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15286:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15276:3:7"
																		},
																		"nativeSrc": "15276:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15276:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15250:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:7"
																},
																"nativeSrc": "15250:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15250:47:7"
															},
															"nativeSrc": "15250:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15250:47:7"
														},
														{
															"nativeSrc": "15306:139:7",
															"nodeType": "YulAssignment",
															"src": "15306:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15440:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15440:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15314:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15314:124:7"
																},
																"nativeSrc": "15314:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15314:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15306:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15306:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15033:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15184:9:7",
														"nodeType": "YulTypedName",
														"src": "15184:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15199:4:7",
														"nodeType": "YulTypedName",
														"src": "15199:4:7",
														"type": ""
													}
												],
												"src": "15033:419:7"
											},
											{
												"body": {
													"nativeSrc": "15486:152:7",
													"nodeType": "YulBlock",
													"src": "15486:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15503:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15503:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15506:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15506:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15496:6:7"
																},
																"nativeSrc": "15496:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15496:88:7"
															},
															"nativeSrc": "15496:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15496:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15600:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15600:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15603:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15603:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:7"
																},
																"nativeSrc": "15593:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15593:15:7"
															},
															"nativeSrc": "15593:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15593:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15624:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15624:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15627:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15627:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15617:6:7"
																},
																"nativeSrc": "15617:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15617:15:7"
															},
															"nativeSrc": "15617:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15617:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "15458:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15458:180:7"
											},
											{
												"body": {
													"nativeSrc": "15672:152:7",
													"nodeType": "YulBlock",
													"src": "15672:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15689:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15689:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15692:77:7",
																		"nodeType": "YulLiteral",
																		"src": "15692:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15682:6:7"
																},
																"nativeSrc": "15682:88:7",
																"nodeType": "YulFunctionCall",
																"src": "15682:88:7"
															},
															"nativeSrc": "15682:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "15682:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15786:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15786:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15789:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15789:4:7",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15779:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15779:6:7"
																},
																"nativeSrc": "15779:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15779:15:7"
															},
															"nativeSrc": "15779:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15779:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15810:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15810:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15813:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15813:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15803:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15803:6:7"
																},
																"nativeSrc": "15803:15:7",
																"nodeType": "YulFunctionCall",
																"src": "15803:15:7"
															},
															"nativeSrc": "15803:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "15803:15:7"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15644:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "15644:180:7"
											},
											{
												"body": {
													"nativeSrc": "15886:93:7",
													"nodeType": "YulBlock",
													"src": "15886:93:7",
													"statements": [
														{
															"nativeSrc": "15897:22:7",
															"nodeType": "YulAssignment",
															"src": "15897:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15913:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15913:5:7"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "15907:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15907:5:7"
																},
																"nativeSrc": "15907:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15907:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15897:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15897:6:7"
																}
															]
														},
														{
															"nativeSrc": "15929:43:7",
															"nodeType": "YulAssignment",
															"src": "15929:43:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "15965:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15965:6:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "15939:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "15939:25:7"
																},
																"nativeSrc": "15939:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15939:33:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15929:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15929:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_storage",
												"nativeSrc": "15830:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15869:5:7",
														"nodeType": "YulTypedName",
														"src": "15869:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15879:6:7",
														"nodeType": "YulTypedName",
														"src": "15879:6:7",
														"type": ""
													}
												],
												"src": "15830:149:7"
											},
											{
												"body": {
													"nativeSrc": "16039:87:7",
													"nodeType": "YulBlock",
													"src": "16039:87:7",
													"statements": [
														{
															"nativeSrc": "16049:11:7",
															"nodeType": "YulAssignment",
															"src": "16049:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "16057:3:7",
																"nodeType": "YulIdentifier",
																"src": "16057:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16049:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16049:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16077:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16080:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16080:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16070:6:7"
																},
																"nativeSrc": "16070:14:7",
																"nodeType": "YulFunctionCall",
																"src": "16070:14:7"
															},
															"nativeSrc": "16070:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "16070:14:7"
														},
														{
															"nativeSrc": "16093:26:7",
															"nodeType": "YulAssignment",
															"src": "16093:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16111:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16111:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16114:4:7",
																		"nodeType": "YulLiteral",
																		"src": "16114:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16101:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "16101:9:7"
																},
																"nativeSrc": "16101:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16101:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16093:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16093:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15985:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16026:3:7",
														"nodeType": "YulTypedName",
														"src": "16026:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16034:4:7",
														"nodeType": "YulTypedName",
														"src": "16034:4:7",
														"type": ""
													}
												],
												"src": "15985:141:7"
											},
											{
												"body": {
													"nativeSrc": "16176:49:7",
													"nodeType": "YulBlock",
													"src": "16176:49:7",
													"statements": [
														{
															"nativeSrc": "16186:33:7",
															"nodeType": "YulAssignment",
															"src": "16186:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16204:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "16204:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16211:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16211:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16200:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16200:3:7"
																		},
																		"nativeSrc": "16200:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16200:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16216:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16196:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16196:3:7"
																},
																"nativeSrc": "16196:23:7",
																"nodeType": "YulFunctionCall",
																"src": "16196:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16186:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16132:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16159:5:7",
														"nodeType": "YulTypedName",
														"src": "16159:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16169:6:7",
														"nodeType": "YulTypedName",
														"src": "16169:6:7",
														"type": ""
													}
												],
												"src": "16132:93:7"
											},
											{
												"body": {
													"nativeSrc": "16284:54:7",
													"nodeType": "YulBlock",
													"src": "16284:54:7",
													"statements": [
														{
															"nativeSrc": "16294:37:7",
															"nodeType": "YulAssignment",
															"src": "16294:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16319:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16319:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16325:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16325:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16315:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16315:3:7"
																},
																"nativeSrc": "16315:16:7",
																"nodeType": "YulFunctionCall",
																"src": "16315:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16294:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16294:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16231:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16259:4:7",
														"nodeType": "YulTypedName",
														"src": "16259:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16265:5:7",
														"nodeType": "YulTypedName",
														"src": "16265:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16275:8:7",
														"nodeType": "YulTypedName",
														"src": "16275:8:7",
														"type": ""
													}
												],
												"src": "16231:107:7"
											},
											{
												"body": {
													"nativeSrc": "16420:317:7",
													"nodeType": "YulBlock",
													"src": "16420:317:7",
													"statements": [
														{
															"nativeSrc": "16430:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16430:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16451:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "16451:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16463:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16463:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16447:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16447:3:7"
																},
																"nativeSrc": "16447:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16447:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16434:9:7",
																	"nodeType": "YulTypedName",
																	"src": "16434:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16474:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "16474:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16505:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16505:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16516:66:7",
																		"nodeType": "YulLiteral",
																		"src": "16516:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16486:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "16486:18:7"
																},
																"nativeSrc": "16486:97:7",
																"nodeType": "YulFunctionCall",
																"src": "16486:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16478:4:7",
																	"nodeType": "YulTypedName",
																	"src": "16478:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16592:51:7",
															"nodeType": "YulAssignment",
															"src": "16592:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16623:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16634:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "16634:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16604:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "16604:18:7"
																},
																"nativeSrc": "16604:39:7",
																"nodeType": "YulFunctionCall",
																"src": "16604:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16592:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "16592:8:7"
																}
															]
														},
														{
															"nativeSrc": "16652:30:7",
															"nodeType": "YulAssignment",
															"src": "16652:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16665:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16676:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16676:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16672:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16672:3:7"
																		},
																		"nativeSrc": "16672:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16672:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16661:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16661:3:7"
																},
																"nativeSrc": "16661:21:7",
																"nodeType": "YulFunctionCall",
																"src": "16661:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16652:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "16652:5:7"
																}
															]
														},
														{
															"nativeSrc": "16691:40:7",
															"nodeType": "YulAssignment",
															"src": "16691:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16704:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16704:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16715:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "16715:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16725:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16725:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16711:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16711:3:7"
																		},
																		"nativeSrc": "16711:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16711:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16701:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "16701:2:7"
																},
																"nativeSrc": "16701:30:7",
																"nodeType": "YulFunctionCall",
																"src": "16701:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16691:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16691:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16344:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16381:5:7",
														"nodeType": "YulTypedName",
														"src": "16381:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16388:10:7",
														"nodeType": "YulTypedName",
														"src": "16388:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16400:8:7",
														"nodeType": "YulTypedName",
														"src": "16400:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16413:6:7",
														"nodeType": "YulTypedName",
														"src": "16413:6:7",
														"type": ""
													}
												],
												"src": "16344:393:7"
											},
											{
												"body": {
													"nativeSrc": "16775:28:7",
													"nodeType": "YulBlock",
													"src": "16775:28:7",
													"statements": [
														{
															"nativeSrc": "16785:12:7",
															"nodeType": "YulAssignment",
															"src": "16785:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "16792:5:7",
																"nodeType": "YulIdentifier",
																"src": "16792:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16785:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16743:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16761:5:7",
														"nodeType": "YulTypedName",
														"src": "16761:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16771:3:7",
														"nodeType": "YulTypedName",
														"src": "16771:3:7",
														"type": ""
													}
												],
												"src": "16743:60:7"
											},
											{
												"body": {
													"nativeSrc": "16869:82:7",
													"nodeType": "YulBlock",
													"src": "16869:82:7",
													"statements": [
														{
															"nativeSrc": "16879:66:7",
															"nodeType": "YulAssignment",
															"src": "16879:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16937:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "16937:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16919:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "16919:17:7"
																				},
																				"nativeSrc": "16919:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16919:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16910:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "16910:8:7"
																		},
																		"nativeSrc": "16910:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16910:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16892:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "16892:17:7"
																},
																"nativeSrc": "16892:53:7",
																"nodeType": "YulFunctionCall",
																"src": "16892:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16879:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "16879:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16809:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16849:5:7",
														"nodeType": "YulTypedName",
														"src": "16849:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16859:9:7",
														"nodeType": "YulTypedName",
														"src": "16859:9:7",
														"type": ""
													}
												],
												"src": "16809:142:7"
											},
											{
												"body": {
													"nativeSrc": "17004:28:7",
													"nodeType": "YulBlock",
													"src": "17004:28:7",
													"statements": [
														{
															"nativeSrc": "17014:12:7",
															"nodeType": "YulAssignment",
															"src": "17014:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "17021:5:7",
																"nodeType": "YulIdentifier",
																"src": "17021:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17014:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17014:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16957:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16990:5:7",
														"nodeType": "YulTypedName",
														"src": "16990:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17000:3:7",
														"nodeType": "YulTypedName",
														"src": "17000:3:7",
														"type": ""
													}
												],
												"src": "16957:75:7"
											},
											{
												"body": {
													"nativeSrc": "17114:193:7",
													"nodeType": "YulBlock",
													"src": "17114:193:7",
													"statements": [
														{
															"nativeSrc": "17124:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17124:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17179:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "17179:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17148:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "17148:30:7"
																},
																"nativeSrc": "17148:39:7",
																"nodeType": "YulFunctionCall",
																"src": "17148:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17128:16:7",
																	"nodeType": "YulTypedName",
																	"src": "17128:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17203:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17203:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17243:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "17243:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17237:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "17237:5:7"
																				},
																				"nativeSrc": "17237:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17237:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17250:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17250:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17282:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "17282:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17258:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "17258:23:7"
																				},
																				"nativeSrc": "17258:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "17258:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17209:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "17209:27:7"
																		},
																		"nativeSrc": "17209:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17209:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17196:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17196:6:7"
																},
																"nativeSrc": "17196:105:7",
																"nodeType": "YulFunctionCall",
																"src": "17196:105:7"
															},
															"nativeSrc": "17196:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "17196:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17038:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17091:4:7",
														"nodeType": "YulTypedName",
														"src": "17091:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17097:6:7",
														"nodeType": "YulTypedName",
														"src": "17097:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17105:7:7",
														"nodeType": "YulTypedName",
														"src": "17105:7:7",
														"type": ""
													}
												],
												"src": "17038:269:7"
											},
											{
												"body": {
													"nativeSrc": "17362:24:7",
													"nodeType": "YulBlock",
													"src": "17362:24:7",
													"statements": [
														{
															"nativeSrc": "17372:8:7",
															"nodeType": "YulAssignment",
															"src": "17372:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "17379:1:7",
																"nodeType": "YulLiteral",
																"src": "17379:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17372:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17313:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17358:3:7",
														"nodeType": "YulTypedName",
														"src": "17358:3:7",
														"type": ""
													}
												],
												"src": "17313:73:7"
											},
											{
												"body": {
													"nativeSrc": "17445:136:7",
													"nodeType": "YulBlock",
													"src": "17445:136:7",
													"statements": [
														{
															"nativeSrc": "17455:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17455:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17469:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "17469:30:7"
																},
																"nativeSrc": "17469:32:7",
																"nodeType": "YulFunctionCall",
																"src": "17469:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17459:6:7",
																	"nodeType": "YulTypedName",
																	"src": "17459:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17554:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17554:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17560:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17560:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17568:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "17568:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17510:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "17510:43:7"
																},
																"nativeSrc": "17510:65:7",
																"nodeType": "YulFunctionCall",
																"src": "17510:65:7"
															},
															"nativeSrc": "17510:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "17510:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17392:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17431:4:7",
														"nodeType": "YulTypedName",
														"src": "17431:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17437:6:7",
														"nodeType": "YulTypedName",
														"src": "17437:6:7",
														"type": ""
													}
												],
												"src": "17392:189:7"
											},
											{
												"body": {
													"nativeSrc": "17637:136:7",
													"nodeType": "YulBlock",
													"src": "17637:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "17704:63:7",
																"nodeType": "YulBlock",
																"src": "17704:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17748:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "17748:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17755:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17755:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17718:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "17718:29:7"
																			},
																			"nativeSrc": "17718:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17718:39:7"
																		},
																		"nativeSrc": "17718:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17718:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17657:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17657:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17664:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17664:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17654:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17654:2:7"
																},
																"nativeSrc": "17654:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17654:14:7"
															},
															"nativeSrc": "17647:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17669:26:7",
																"nodeType": "YulBlock",
																"src": "17669:26:7",
																"statements": [
																	{
																		"nativeSrc": "17671:22:7",
																		"nodeType": "YulAssignment",
																		"src": "17671:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17684:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "17684:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17691:1:7",
																					"nodeType": "YulLiteral",
																					"src": "17691:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17680:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17680:3:7"
																			},
																			"nativeSrc": "17680:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17680:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17671:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "17671:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17651:2:7",
																"nodeType": "YulBlock",
																"src": "17651:2:7",
																"statements": []
															},
															"src": "17647:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17587:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17625:5:7",
														"nodeType": "YulTypedName",
														"src": "17625:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17632:3:7",
														"nodeType": "YulTypedName",
														"src": "17632:3:7",
														"type": ""
													}
												],
												"src": "17587:186:7"
											},
											{
												"body": {
													"nativeSrc": "17858:464:7",
													"nodeType": "YulBlock",
													"src": "17858:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "17884:431:7",
																"nodeType": "YulBlock",
																"src": "17884:431:7",
																"statements": [
																	{
																		"nativeSrc": "17898:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17898:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17946:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "17946:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17914:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "17914:31:7"
																			},
																			"nativeSrc": "17914:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17914:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17902:8:7",
																				"nodeType": "YulTypedName",
																				"src": "17902:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17965:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17965:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17988:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "17988:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18016:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "18016:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17998:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "17998:17:7"
																					},
																					"nativeSrc": "17998:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "17998:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17984:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "17984:3:7"
																			},
																			"nativeSrc": "17984:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17984:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17969:11:7",
																				"nodeType": "YulTypedName",
																				"src": "17969:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18185:27:7",
																			"nodeType": "YulBlock",
																			"src": "18185:27:7",
																			"statements": [
																				{
																					"nativeSrc": "18187:23:7",
																					"nodeType": "YulAssignment",
																					"src": "18187:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18202:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "18202:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18187:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "18187:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18169:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "18169:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18181:2:7",
																					"nodeType": "YulLiteral",
																					"src": "18181:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18166:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "18166:2:7"
																			},
																			"nativeSrc": "18166:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18166:18:7"
																		},
																		"nativeSrc": "18163:49:7",
																		"nodeType": "YulIf",
																		"src": "18163:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18254:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "18254:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18271:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "18271:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18299:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "18299:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18281:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "18281:17:7"
																							},
																							"nativeSrc": "18281:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "18281:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18267:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "18267:3:7"
																					},
																					"nativeSrc": "18267:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "18267:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18225:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "18225:28:7"
																			},
																			"nativeSrc": "18225:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18225:80:7"
																		},
																		"nativeSrc": "18225:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "18225:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17875:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17875:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17880:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17872:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17872:2:7"
																},
																"nativeSrc": "17872:11:7",
																"nodeType": "YulFunctionCall",
																"src": "17872:11:7"
															},
															"nativeSrc": "17869:446:7",
															"nodeType": "YulIf",
															"src": "17869:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17779:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17834:5:7",
														"nodeType": "YulTypedName",
														"src": "17834:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17841:3:7",
														"nodeType": "YulTypedName",
														"src": "17841:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17846:10:7",
														"nodeType": "YulTypedName",
														"src": "17846:10:7",
														"type": ""
													}
												],
												"src": "17779:543:7"
											},
											{
												"body": {
													"nativeSrc": "18391:54:7",
													"nodeType": "YulBlock",
													"src": "18391:54:7",
													"statements": [
														{
															"nativeSrc": "18401:37:7",
															"nodeType": "YulAssignment",
															"src": "18401:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18426:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18426:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18432:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18432:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18422:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18422:3:7"
																},
																"nativeSrc": "18422:16:7",
																"nodeType": "YulFunctionCall",
																"src": "18422:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18401:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "18401:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18328:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18366:4:7",
														"nodeType": "YulTypedName",
														"src": "18366:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18372:5:7",
														"nodeType": "YulTypedName",
														"src": "18372:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18382:8:7",
														"nodeType": "YulTypedName",
														"src": "18382:8:7",
														"type": ""
													}
												],
												"src": "18328:117:7"
											},
											{
												"body": {
													"nativeSrc": "18502:118:7",
													"nodeType": "YulBlock",
													"src": "18502:118:7",
													"statements": [
														{
															"nativeSrc": "18512:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18512:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18561:1:7",
																						"nodeType": "YulLiteral",
																						"src": "18561:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18564:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "18564:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18557:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18557:3:7"
																				},
																				"nativeSrc": "18557:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18557:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18576:1:7",
																						"nodeType": "YulLiteral",
																						"src": "18576:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18572:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "18572:3:7"
																				},
																				"nativeSrc": "18572:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18572:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18528:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "18528:28:7"
																		},
																		"nativeSrc": "18528:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18528:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18524:3:7"
																},
																"nativeSrc": "18524:56:7",
																"nodeType": "YulFunctionCall",
																"src": "18524:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18516:4:7",
																	"nodeType": "YulTypedName",
																	"src": "18516:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18589:25:7",
															"nodeType": "YulAssignment",
															"src": "18589:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18603:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18603:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18609:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18609:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18599:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18599:3:7"
																},
																"nativeSrc": "18599:15:7",
																"nodeType": "YulFunctionCall",
																"src": "18599:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18589:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18451:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18479:4:7",
														"nodeType": "YulTypedName",
														"src": "18479:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18485:5:7",
														"nodeType": "YulTypedName",
														"src": "18485:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18495:6:7",
														"nodeType": "YulTypedName",
														"src": "18495:6:7",
														"type": ""
													}
												],
												"src": "18451:169:7"
											},
											{
												"body": {
													"nativeSrc": "18706:214:7",
													"nodeType": "YulBlock",
													"src": "18706:214:7",
													"statements": [
														{
															"nativeSrc": "18839:37:7",
															"nodeType": "YulAssignment",
															"src": "18839:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18866:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18866:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18872:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18872:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18847:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "18847:18:7"
																},
																"nativeSrc": "18847:29:7",
																"nodeType": "YulFunctionCall",
																"src": "18847:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18839:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18839:4:7"
																}
															]
														},
														{
															"nativeSrc": "18885:29:7",
															"nodeType": "YulAssignment",
															"src": "18885:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18896:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18896:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18906:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18906:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18909:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18909:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18902:3:7"
																		},
																		"nativeSrc": "18902:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18902:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18893:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18893:2:7"
																},
																"nativeSrc": "18893:21:7",
																"nodeType": "YulFunctionCall",
																"src": "18893:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18885:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18885:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18625:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18687:4:7",
														"nodeType": "YulTypedName",
														"src": "18687:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18693:3:7",
														"nodeType": "YulTypedName",
														"src": "18693:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18701:4:7",
														"nodeType": "YulTypedName",
														"src": "18701:4:7",
														"type": ""
													}
												],
												"src": "18625:295:7"
											},
											{
												"body": {
													"nativeSrc": "19014:1362:7",
													"nodeType": "YulBlock",
													"src": "19014:1362:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19041:9:7",
																"nodeType": "YulBlock",
																"src": "19041:9:7",
																"statements": [
																	{
																		"nativeSrc": "19043:5:7",
																		"nodeType": "YulLeave",
																		"src": "19043:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19030:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19030:4:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "19036:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19036:3:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19027:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19027:2:7"
																},
																"nativeSrc": "19027:13:7",
																"nodeType": "YulFunctionCall",
																"src": "19027:13:7"
															},
															"nativeSrc": "19024:26:7",
															"nodeType": "YulIf",
															"src": "19024:26:7"
														},
														{
															"nativeSrc": "19060:48:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19060:48:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19104:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19104:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_storage",
																	"nativeSrc": "19074:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "19074:29:7"
																},
																"nativeSrc": "19074:34:7",
																"nodeType": "YulFunctionCall",
																"src": "19074:34:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19064:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19064:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19193:22:7",
																"nodeType": "YulBlock",
																"src": "19193:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19195:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "19195:16:7"
																			},
																			"nativeSrc": "19195:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19195:18:7"
																		},
																		"nativeSrc": "19195:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19195:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19165:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19165:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19173:18:7",
																		"nodeType": "YulLiteral",
																		"src": "19173:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19162:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19162:2:7"
																},
																"nativeSrc": "19162:30:7",
																"nodeType": "YulFunctionCall",
																"src": "19162:30:7"
															},
															"nativeSrc": "19159:56:7",
															"nodeType": "YulIf",
															"src": "19159:56:7"
														},
														{
															"nativeSrc": "19225:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19225:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19271:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19271:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19265:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "19265:5:7"
																		},
																		"nativeSrc": "19265:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19265:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19239:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "19239:25:7"
																},
																"nativeSrc": "19239:38:7",
																"nodeType": "YulFunctionCall",
																"src": "19239:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19229:6:7",
																	"nodeType": "YulTypedName",
																	"src": "19229:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19370:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19370:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19376:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19384:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19384:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19324:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "19324:45:7"
																},
																"nativeSrc": "19324:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19324:67:7"
															},
															"nativeSrc": "19324:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "19324:67:7"
														},
														{
															"nativeSrc": "19401:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19401:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "19418:1:7",
																"nodeType": "YulLiteral",
																"src": "19418:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19405:9:7",
																	"nodeType": "YulTypedName",
																	"src": "19405:9:7",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19466:665:7",
																		"nodeType": "YulBlock",
																		"src": "19466:665:7",
																		"statements": [
																			{
																				"nativeSrc": "19480:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19480:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19499:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "19499:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19511:4:7",
																									"nodeType": "YulLiteral",
																									"src": "19511:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19507:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "19507:3:7"
																							},
																							"nativeSrc": "19507:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "19507:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19495:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "19495:3:7"
																					},
																					"nativeSrc": "19495:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19495:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19484:7:7",
																						"nodeType": "YulTypedName",
																						"src": "19484:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19530:43:7",
																				"nodeType": "YulAssignment",
																				"src": "19530:43:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "19569:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "19569:3:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19537:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "19537:31:7"
																					},
																					"nativeSrc": "19537:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19537:36:7"
																				},
																				"variableNames": [
																					{
																						"name": "src",
																						"nativeSrc": "19530:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "19530:3:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "19586:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19586:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19632:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "19632:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19600:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "19600:31:7"
																					},
																					"nativeSrc": "19600:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19600:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19590:6:7",
																						"nodeType": "YulTypedName",
																						"src": "19590:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19650:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19650:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19659:1:7",
																					"nodeType": "YulLiteral",
																					"src": "19659:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19654:1:7",
																						"nodeType": "YulTypedName",
																						"src": "19654:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19718:162:7",
																					"nodeType": "YulBlock",
																					"src": "19718:162:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19743:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "19743:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19761:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "19761:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19766:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "19766:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19757:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "19757:3:7"
																												},
																												"nativeSrc": "19757:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "19757:19:7"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "19751:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "19751:5:7"
																										},
																										"nativeSrc": "19751:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "19751:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19736:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "19736:6:7"
																								},
																								"nativeSrc": "19736:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19736:42:7"
																							},
																							"nativeSrc": "19736:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "19736:42:7"
																						},
																						{
																							"nativeSrc": "19795:24:7",
																							"nodeType": "YulAssignment",
																							"src": "19795:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19809:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "19809:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19817:1:7",
																										"nodeType": "YulLiteral",
																										"src": "19817:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19805:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "19805:3:7"
																								},
																								"nativeSrc": "19805:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19805:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19795:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "19795:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19836:30:7",
																							"nodeType": "YulAssignment",
																							"src": "19836:30:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19853:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "19853:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19864:1:7",
																										"nodeType": "YulLiteral",
																										"src": "19864:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19849:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "19849:3:7"
																								},
																								"nativeSrc": "19849:17:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19849:17:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19836:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "19836:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19684:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "19684:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19687:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "19687:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19681:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "19681:2:7"
																					},
																					"nativeSrc": "19681:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19681:14:7"
																				},
																				"nativeSrc": "19673:207:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19696:21:7",
																					"nodeType": "YulBlock",
																					"src": "19696:21:7",
																					"statements": [
																						{
																							"nativeSrc": "19698:17:7",
																							"nodeType": "YulAssignment",
																							"src": "19698:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19707:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "19707:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19710:4:7",
																										"nodeType": "YulLiteral",
																										"src": "19710:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19703:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "19703:3:7"
																								},
																								"nativeSrc": "19703:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19703:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19698:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "19698:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19677:3:7",
																					"nodeType": "YulBlock",
																					"src": "19677:3:7",
																					"statements": []
																				},
																				"src": "19673:207:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "19916:156:7",
																					"nodeType": "YulBlock",
																					"src": "19916:156:7",
																					"statements": [
																						{
																							"nativeSrc": "19934:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19934:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19961:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "19961:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19966:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "19966:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19957:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "19957:3:7"
																										},
																										"nativeSrc": "19957:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "19957:19:7"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "19951:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "19951:5:7"
																								},
																								"nativeSrc": "19951:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19951:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19938:9:7",
																									"nodeType": "YulTypedName",
																									"src": "19938:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20001:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "20001:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20028:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "20028:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20043:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "20043:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20051:4:7",
																														"nodeType": "YulLiteral",
																														"src": "20051:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20039:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "20039:3:7"
																												},
																												"nativeSrc": "20039:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "20039:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20009:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "20009:18:7"
																										},
																										"nativeSrc": "20009:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20009:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19994:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "19994:6:7"
																								},
																								"nativeSrc": "19994:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "19994:64:7"
																							},
																							"nativeSrc": "19994:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "19994:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19899:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "19899:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19908:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "19908:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19896:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "19896:2:7"
																					},
																					"nativeSrc": "19896:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19896:19:7"
																				},
																				"nativeSrc": "19893:179:7",
																				"nodeType": "YulIf",
																				"src": "19893:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20092:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20092:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20106:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "20106:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20114:1:7",
																											"nodeType": "YulLiteral",
																											"src": "20114:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20102:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "20102:3:7"
																									},
																									"nativeSrc": "20102:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "20102:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20118:1:7",
																									"nodeType": "YulLiteral",
																									"src": "20118:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20098:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "20098:3:7"
																							},
																							"nativeSrc": "20098:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20098:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20085:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20085:6:7"
																					},
																					"nativeSrc": "20085:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20085:36:7"
																				},
																				"nativeSrc": "20085:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "20085:36:7"
																			}
																		]
																	},
																	"nativeSrc": "19459:672:7",
																	"nodeType": "YulCase",
																	"src": "19459:672:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "19464:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20148:222:7",
																		"nodeType": "YulBlock",
																		"src": "20148:222:7",
																		"statements": [
																			{
																				"nativeSrc": "20162:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20162:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20175:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20175:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20166:5:7",
																						"nodeType": "YulTypedName",
																						"src": "20166:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20199:67:7",
																					"nodeType": "YulBlock",
																					"src": "20199:67:7",
																					"statements": [
																						{
																							"nativeSrc": "20217:35:7",
																							"nodeType": "YulAssignment",
																							"src": "20217:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20236:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "20236:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20241:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "20241:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20232:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "20232:3:7"
																										},
																										"nativeSrc": "20232:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "20232:19:7"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "20226:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20226:5:7"
																								},
																								"nativeSrc": "20226:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20226:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20217:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20217:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20192:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "20192:6:7"
																				},
																				"nativeSrc": "20189:77:7",
																				"nodeType": "YulIf",
																				"src": "20189:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20286:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20286:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20345:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "20345:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20352:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20352:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20292:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "20292:52:7"
																							},
																							"nativeSrc": "20292:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20292:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20279:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "20279:6:7"
																					},
																					"nativeSrc": "20279:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20279:81:7"
																				},
																				"nativeSrc": "20279:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "20279:81:7"
																			}
																		]
																	},
																	"nativeSrc": "20140:230:7",
																	"nodeType": "YulCase",
																	"src": "20140:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19439:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19439:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19447:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19447:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19436:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19436:2:7"
																},
																"nativeSrc": "19436:14:7",
																"nodeType": "YulFunctionCall",
																"src": "19436:14:7"
															},
															"nativeSrc": "19429:941:7",
															"nodeType": "YulSwitch",
															"src": "19429:941:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage",
												"nativeSrc": "18925:1451:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19003:4:7",
														"nodeType": "YulTypedName",
														"src": "19003:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19009:3:7",
														"nodeType": "YulTypedName",
														"src": "19009:3:7",
														"type": ""
													}
												],
												"src": "18925:1451:7"
											},
											{
												"body": {
													"nativeSrc": "20474:1303:7",
													"nodeType": "YulBlock",
													"src": "20474:1303:7",
													"statements": [
														{
															"nativeSrc": "20485:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20485:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "20532:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20532:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20499:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "20499:32:7"
																},
																"nativeSrc": "20499:37:7",
																"nodeType": "YulFunctionCall",
																"src": "20499:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "20489:6:7",
																	"nodeType": "YulTypedName",
																	"src": "20489:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20621:22:7",
																"nodeType": "YulBlock",
																"src": "20621:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "20623:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20623:16:7"
																			},
																			"nativeSrc": "20623:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20623:18:7"
																		},
																		"nativeSrc": "20623:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20623:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20593:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20593:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20601:18:7",
																		"nodeType": "YulLiteral",
																		"src": "20601:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20590:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20590:2:7"
																},
																"nativeSrc": "20590:30:7",
																"nodeType": "YulFunctionCall",
																"src": "20590:30:7"
															},
															"nativeSrc": "20587:56:7",
															"nodeType": "YulIf",
															"src": "20587:56:7"
														},
														{
															"nativeSrc": "20653:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20653:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "20699:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20699:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "20693:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "20693:5:7"
																		},
																		"nativeSrc": "20693:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20693:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20667:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "20667:25:7"
																},
																"nativeSrc": "20667:38:7",
																"nodeType": "YulFunctionCall",
																"src": "20667:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "20657:6:7",
																	"nodeType": "YulTypedName",
																	"src": "20657:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20798:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20798:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "20804:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20804:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "20812:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20812:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "20752:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "20752:45:7"
																},
																"nativeSrc": "20752:67:7",
																"nodeType": "YulFunctionCall",
																"src": "20752:67:7"
															},
															"nativeSrc": "20752:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "20752:67:7"
														},
														{
															"nativeSrc": "20829:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20829:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20846:1:7",
																"nodeType": "YulLiteral",
																"src": "20846:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20833:9:7",
																	"nodeType": "YulTypedName",
																	"src": "20833:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20857:17:7",
															"nodeType": "YulAssignment",
															"src": "20857:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20870:4:7",
																"nodeType": "YulLiteral",
																"src": "20870:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20857:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "20857:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20921:611:7",
																		"nodeType": "YulBlock",
																		"src": "20921:611:7",
																		"statements": [
																			{
																				"nativeSrc": "20935:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20935:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "20954:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "20954:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "20966:4:7",
																									"nodeType": "YulLiteral",
																									"src": "20966:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "20962:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "20962:3:7"
																							},
																							"nativeSrc": "20962:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20962:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "20950:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "20950:3:7"
																					},
																					"nativeSrc": "20950:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20950:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "20939:7:7",
																						"nodeType": "YulTypedName",
																						"src": "20939:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20986:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20986:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21032:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "21032:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21000:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "21000:31:7"
																					},
																					"nativeSrc": "21000:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21000:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "20990:6:7",
																						"nodeType": "YulTypedName",
																						"src": "20990:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21050:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21050:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21059:1:7",
																					"nodeType": "YulLiteral",
																					"src": "21059:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "21054:1:7",
																						"nodeType": "YulTypedName",
																						"src": "21054:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21118:163:7",
																					"nodeType": "YulBlock",
																					"src": "21118:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21143:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "21143:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "21161:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "21161:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "21166:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "21166:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "21157:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "21157:3:7"
																												},
																												"nativeSrc": "21157:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "21157:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "21151:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "21151:5:7"
																										},
																										"nativeSrc": "21151:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21151:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21136:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21136:6:7"
																								},
																								"nativeSrc": "21136:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21136:42:7"
																							},
																							"nativeSrc": "21136:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "21136:42:7"
																						},
																						{
																							"nativeSrc": "21195:24:7",
																							"nodeType": "YulAssignment",
																							"src": "21195:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21209:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "21209:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21217:1:7",
																										"nodeType": "YulLiteral",
																										"src": "21217:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21205:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "21205:3:7"
																								},
																								"nativeSrc": "21205:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21205:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "21195:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21195:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "21236:31:7",
																							"nodeType": "YulAssignment",
																							"src": "21236:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "21253:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "21253:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21264:2:7",
																										"nodeType": "YulLiteral",
																										"src": "21264:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21249:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "21249:3:7"
																								},
																								"nativeSrc": "21249:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21249:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "21236:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "21236:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "21084:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "21084:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21087:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "21087:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21081:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "21081:2:7"
																					},
																					"nativeSrc": "21081:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21081:14:7"
																				},
																				"nativeSrc": "21073:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "21096:21:7",
																					"nodeType": "YulBlock",
																					"src": "21096:21:7",
																					"statements": [
																						{
																							"nativeSrc": "21098:17:7",
																							"nodeType": "YulAssignment",
																							"src": "21098:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "21107:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "21107:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21110:4:7",
																										"nodeType": "YulLiteral",
																										"src": "21110:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21103:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "21103:3:7"
																								},
																								"nativeSrc": "21103:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21103:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "21098:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "21098:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "21077:3:7",
																					"nodeType": "YulBlock",
																					"src": "21077:3:7",
																					"statements": []
																				},
																				"src": "21073:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "21317:156:7",
																					"nodeType": "YulBlock",
																					"src": "21317:156:7",
																					"statements": [
																						{
																							"nativeSrc": "21335:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "21335:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21362:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "21362:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21367:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21367:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21358:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "21358:3:7"
																										},
																										"nativeSrc": "21358:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21358:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21352:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21352:5:7"
																								},
																								"nativeSrc": "21352:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21352:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "21339:9:7",
																									"nodeType": "YulTypedName",
																									"src": "21339:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21402:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "21402:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "21429:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21429:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "21444:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "21444:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "21452:4:7",
																														"nodeType": "YulLiteral",
																														"src": "21452:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "21440:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "21440:3:7"
																												},
																												"nativeSrc": "21440:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "21440:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "21410:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "21410:18:7"
																										},
																										"nativeSrc": "21410:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21410:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21395:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21395:6:7"
																								},
																								"nativeSrc": "21395:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21395:64:7"
																							},
																							"nativeSrc": "21395:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "21395:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21300:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "21300:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "21309:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "21309:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21297:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "21297:2:7"
																					},
																					"nativeSrc": "21297:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21297:19:7"
																				},
																				"nativeSrc": "21294:179:7",
																				"nodeType": "YulIf",
																				"src": "21294:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21493:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "21493:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "21507:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "21507:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "21515:1:7",
																											"nodeType": "YulLiteral",
																											"src": "21515:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "21503:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "21503:3:7"
																									},
																									"nativeSrc": "21503:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "21503:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "21519:1:7",
																									"nodeType": "YulLiteral",
																									"src": "21519:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "21499:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "21499:3:7"
																							},
																							"nativeSrc": "21499:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "21499:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21486:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "21486:6:7"
																					},
																					"nativeSrc": "21486:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21486:36:7"
																				},
																				"nativeSrc": "21486:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "21486:36:7"
																			}
																		]
																	},
																	"nativeSrc": "20914:618:7",
																	"nodeType": "YulCase",
																	"src": "20914:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20919:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20919:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "21549:222:7",
																		"nodeType": "YulBlock",
																		"src": "21549:222:7",
																		"statements": [
																			{
																				"nativeSrc": "21563:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21563:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21576:1:7",
																					"nodeType": "YulLiteral",
																					"src": "21576:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "21567:5:7",
																						"nodeType": "YulTypedName",
																						"src": "21567:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21600:67:7",
																					"nodeType": "YulBlock",
																					"src": "21600:67:7",
																					"statements": [
																						{
																							"nativeSrc": "21618:35:7",
																							"nodeType": "YulAssignment",
																							"src": "21618:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21637:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "21637:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21642:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21642:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21633:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "21633:3:7"
																										},
																										"nativeSrc": "21633:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21633:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21627:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21627:5:7"
																								},
																								"nativeSrc": "21627:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21627:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "21618:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21618:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "21593:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "21593:6:7"
																				},
																				"nativeSrc": "21590:77:7",
																				"nodeType": "YulIf",
																				"src": "21590:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21687:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "21687:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "21746:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21746:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "21753:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21753:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "21693:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "21693:52:7"
																							},
																							"nativeSrc": "21693:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "21693:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21680:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "21680:6:7"
																					},
																					"nativeSrc": "21680:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21680:81:7"
																				},
																				"nativeSrc": "21680:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "21680:81:7"
																			}
																		]
																	},
																	"nativeSrc": "21541:230:7",
																	"nodeType": "YulCase",
																	"src": "21541:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20894:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20894:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20902:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20902:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20891:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20891:2:7"
																},
																"nativeSrc": "20891:14:7",
																"nodeType": "YulFunctionCall",
																"src": "20891:14:7"
															},
															"nativeSrc": "20884:887:7",
															"nodeType": "YulSwitch",
															"src": "20884:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "20382:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20463:4:7",
														"nodeType": "YulTypedName",
														"src": "20463:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "20469:3:7",
														"nodeType": "YulTypedName",
														"src": "20469:3:7",
														"type": ""
													}
												],
												"src": "20382:1395:7"
											},
											{
												"body": {
													"nativeSrc": "21827:147:7",
													"nodeType": "YulBlock",
													"src": "21827:147:7",
													"statements": [
														{
															"nativeSrc": "21837:25:7",
															"nodeType": "YulAssignment",
															"src": "21837:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21860:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21860:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21842:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21842:17:7"
																},
																"nativeSrc": "21842:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21842:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21837:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21837:1:7"
																}
															]
														},
														{
															"nativeSrc": "21871:25:7",
															"nodeType": "YulAssignment",
															"src": "21871:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21894:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21894:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21876:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "21876:17:7"
																},
																"nativeSrc": "21876:20:7",
																"nodeType": "YulFunctionCall",
																"src": "21876:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21871:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "21871:1:7"
																}
															]
														},
														{
															"nativeSrc": "21905:16:7",
															"nodeType": "YulAssignment",
															"src": "21905:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21916:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21916:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21919:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21919:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21912:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21912:3:7"
																},
																"nativeSrc": "21912:9:7",
																"nodeType": "YulFunctionCall",
																"src": "21912:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21905:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21905:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21945:22:7",
																"nodeType": "YulBlock",
																"src": "21945:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21947:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "21947:16:7"
																			},
																			"nativeSrc": "21947:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "21947:18:7"
																		},
																		"nativeSrc": "21947:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "21947:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21937:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "21937:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21940:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21940:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21934:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "21934:2:7"
																},
																"nativeSrc": "21934:10:7",
																"nodeType": "YulFunctionCall",
																"src": "21934:10:7"
															},
															"nativeSrc": "21931:36:7",
															"nodeType": "YulIf",
															"src": "21931:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21783:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21814:1:7",
														"nodeType": "YulTypedName",
														"src": "21814:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21817:1:7",
														"nodeType": "YulTypedName",
														"src": "21817:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21823:3:7",
														"nodeType": "YulTypedName",
														"src": "21823:3:7",
														"type": ""
													}
												],
												"src": "21783:191:7"
											},
											{
												"body": {
													"nativeSrc": "22134:288:7",
													"nodeType": "YulBlock",
													"src": "22134:288:7",
													"statements": [
														{
															"nativeSrc": "22144:26:7",
															"nodeType": "YulAssignment",
															"src": "22144:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22156:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22156:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22167:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22167:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22152:3:7"
																},
																"nativeSrc": "22152:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22152:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22144:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22144:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22224:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22237:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22237:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22248:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22248:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22233:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22233:3:7"
																		},
																		"nativeSrc": "22233:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22233:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22180:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22180:43:7"
																},
																"nativeSrc": "22180:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22180:71:7"
															},
															"nativeSrc": "22180:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22180:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22305:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22305:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22318:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22318:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22329:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22329:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22314:3:7"
																		},
																		"nativeSrc": "22314:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22314:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22261:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22261:43:7"
																},
																"nativeSrc": "22261:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22261:72:7"
															},
															"nativeSrc": "22261:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22261:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22387:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22387:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22400:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22400:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22411:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22411:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22396:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22396:3:7"
																		},
																		"nativeSrc": "22396:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22396:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22343:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22343:43:7"
																},
																"nativeSrc": "22343:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22343:72:7"
															},
															"nativeSrc": "22343:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22343:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21980:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22090:9:7",
														"nodeType": "YulTypedName",
														"src": "22090:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22102:6:7",
														"nodeType": "YulTypedName",
														"src": "22102:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22110:6:7",
														"nodeType": "YulTypedName",
														"src": "22110:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22118:6:7",
														"nodeType": "YulTypedName",
														"src": "22118:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22129:4:7",
														"nodeType": "YulTypedName",
														"src": "22129:4:7",
														"type": ""
													}
												],
												"src": "21980:442:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No such territory\")\n\n    }\n\n    function abi_encode_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74(memPtr) {\n\n        mstore(add(memPtr, 0), \"Horde doesn't have enough power\")\n\n    }\n\n    function abi_encode_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_string_storage(value) -> length {\n\n        length := sload(value)\n\n        length := extract_byte_array_length(length)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage(slot, src) {\n        if eq(slot, src) { leave }\n\n        let newLen := array_length_t_string_storage(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n            src := array_dataslot_t_string_storage(src)\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, sload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 1)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := sload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610138575f3560e01c806395d89b41116100aa578063bc3d6dc31161006e578063bc3d6dc3146104ed578063c1280ae714610515578063dd62ed3e14610551578063ddca3f431461058d578063f2c298be146105b7578063f2fde38b146105df576101fd565b806395d89b411461041557806396eb64a91461043f578063a035b1fe1461045b578063a0d81ba614610485578063a9059cbb146104b1576101fd565b8063651dc0df116100fc578063651dc0df146102f757806370a082311461031f578063715018a61461035b578063738f5b5b1461037157806386e6e222146103ad5780638da5cb5b146103eb576101fd565b806306fdde0314610201578063095ea7b31461022b57806318160ddd1461026757806323b872dd14610291578063313ce567146102cd576101fd565b366101fd575f600a5460643461014e91906117d6565b6101589190611806565b90505f610163610607565b73ffffffffffffffffffffffffffffffffffffffff168260405161018690611874565b5f6040518083038185875af1925050503d805f81146101c0576040519150601f19603f3d011682016040523d82523d5f602084013e6101c5565b606091505b505090505f82346101d69190611888565b90505f600954826101e791906117d6565b90506101fb6101f4610607565b338361062f565b005b5f80fd5b34801561020c575f80fd5b5061021561071f565b604051610222919061192b565b60405180910390f35b348015610236575f80fd5b50610251600480360381019061024c91906119e0565b6107af565b60405161025e9190611a38565b60405180910390f35b348015610272575f80fd5b5061027b6107d1565b6040516102889190611a60565b60405180910390f35b34801561029c575f80fd5b506102b760048036038101906102b29190611a79565b6107da565b6040516102c49190611a38565b60405180910390f35b3480156102d8575f80fd5b506102e1610808565b6040516102ee9190611ae4565b60405180910390f35b348015610302575f80fd5b5061031d60048036038101906103189190611c29565b610810565b005b34801561032a575f80fd5b5061034560048036038101906103409190611c9f565b610a37565b6040516103529190611a60565b60405180910390f35b348015610366575f80fd5b5061036f610a7c565b005b34801561037c575f80fd5b5061039760048036038101906103929190611cca565b610a8f565b6040516103a49190611a60565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce9190611cca565b610ac2565b6040516103e293929190611d11565b60405180910390f35b3480156103f6575f80fd5b506103ff610607565b60405161040c9190611d5c565b60405180910390f35b348015610420575f80fd5b50610429610b86565b604051610436919061192b565b60405180910390f35b61045960048036038101906104549190611c9f565b610c16565b005b348015610466575f80fd5b5061046f610d8d565b60405161047c9190611a60565b60405180910390f35b348015610490575f80fd5b50610499610d93565b6040516104a893929190611d11565b60405180910390f35b3480156104bc575f80fd5b506104d760048036038101906104d291906119e0565b610e30565b6040516104e49190611a38565b60405180910390f35b3480156104f8575f80fd5b50610513600480360381019061050e9190611cca565b610e52565b005b348015610520575f80fd5b5061053b60048036038101906105369190611cca565b610f8f565b6040516105489190611a60565b60405180910390f35b34801561055c575f80fd5b5061057760048036038101906105729190611d75565b610fbb565b6040516105849190611a60565b60405180910390f35b348015610598575f80fd5b506105a161103d565b6040516105ae9190611a60565b60405180910390f35b3480156105c2575f80fd5b506105dd60048036038101906105d89190611cca565b611043565b005b3480156105ea575f80fd5b5061060560048036038101906106009190611c9f565b611111565b005b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361069f575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106969190611d5c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070f575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107069190611d5c565b60405180910390fd5b61071a838383611195565b505050565b60606003805461072e90611de0565b80601f016020809104026020016040519081016040528092919081815260200182805461075a90611de0565b80156107a55780601f1061077c576101008083540402835291602001916107a5565b820191905f5260205f20905b81548152906001019060200180831161078857829003601f168201915b5050505050905090565b5f806107b96113ae565b90506107c68185856113b5565b600191505092915050565b5f600254905090565b5f806107e46113ae565b90506107f18582856113c7565b6107fc85858561062f565b60019150509392505050565b5f6012905090565b6007816040516108209190611e4a565b90815260200160405180910390205f01805490506007826040516108449190611e4a565b9081526020016040518091039020600101819055505f60088260405161086a9190611e4a565b908152602001604051809103902060020154036108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390611eaa565b60405180910390fd5b6008816040516108cc9190611e4a565b9081526020016040518091039020600101546007836040516108ee9190611e4a565b9081526020016040518091039020600101541015610941576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093890611f12565b60405180910390fd5b5f5b6007836040516109539190611e4a565b908152602001604051809103902060010154811015610a0c576109ff610977610607565b6007856040516109879190611e4a565b90815260200160405180910390205f0183815481106109a9576109a8611f30565b5b905f5260205f2090600202016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008856040516109e89190611e4a565b90815260200160405180910390206002015461062f565b8080600101915050610943565b505f600882604051610a1e9190611e4a565b9081526020016040518091039020600201819055505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610a8461145a565b610a8d5f6114e1565b565b6007818051602081018201805184825260208301602085012081835280955050505050505f915090508060010154905081565b6008818051602081018201805184825260208301602085012081835280955050505050505f91509050805f018054610af990611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b2590611de0565b8015610b705780601f10610b4757610100808354040283529160200191610b70565b820191905f5260205f20905b815481529060010190602001808311610b5357829003601f168201915b5050505050908060010154908060020154905083565b606060048054610b9590611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc190611de0565b8015610c0c5780601f10610be357610100808354040283529160200191610c0c565b820191905f5260205f20905b815481529060010190602001808311610bef57829003601f168201915b5050505050905090565b600180811115610c2957610c28611f5d565b5b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160149054906101000a900460ff166001811115610c8957610c88611f5d565b5b14610c92575f80fd5b600180811115610ca557610ca4611f5d565b5b60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160149054906101000a900460ff166001811115610d0557610d04611f5d565b5b03610d0e575f80fd5b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010160146101000a81548160ff02191690836001811115610d7257610d71611f5d565b5b0217905550610d8a610d82610607565b33606461062f565b50565b60095481565b600b805f018054610da390611de0565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcf90611de0565b8015610e1a5780601f10610df157610100808354040283529160200191610e1a565b820191905f5260205f20905b815481529060010190602001808311610dfd57829003601f168201915b5050505050908060010154908060020154905083565b5f80610e3a6113ae565b9050610e4781858561062f565b600191505092915050565b600781604051610e629190611e4a565b90815260200160405180910390205f0160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f8201815f019081610ee7919061213c565b50600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610f8557610f84611f5d565b5b0217905550505050565b5f600782604051610fa09190611e4a565b90815260200160405180910390205f01805490509050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600a5481565b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01908161108f9190612221565b503360065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61111961145a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611189575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111809190611d5c565b60405180910390fd5b611192816114e1565b50565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111e5578060025f8282546111d991906122f0565b925050819055506112b3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561126e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161126593929190612323565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112fa578060025f8282540392505081905550611344565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113a19190611a60565b60405180910390a3505050565b5f33905090565b6113c283838360016115a4565b505050565b5f6113d28484610fbb565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156114545781811015611445578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161143c93929190612323565b60405180910390fd5b61145384848484035f6115a4565b5b50505050565b6114626113ae565b73ffffffffffffffffffffffffffffffffffffffff16611480610607565b73ffffffffffffffffffffffffffffffffffffffff16146114df576114a36113ae565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114d69190611d5c565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611614575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161160b9190611d5c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611684575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161167b9190611d5c565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561176d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516117649190611a60565b60405180910390a35b50505050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117e082611773565b91506117eb83611773565b9250826117fb576117fa61177c565b5b828204905092915050565b5f61181082611773565b915061181b83611773565b925082820261182981611773565b915082820484148315176118405761183f6117a9565b5b5092915050565b5f81905092915050565b50565b5f61185f5f83611847565b915061186a82611851565b5f82019050919050565b5f61187e82611854565b9150819050919050565b5f61189282611773565b915061189d83611773565b92508282039050818111156118b5576118b46117a9565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6118fd826118bb565b61190781856118c5565b93506119178185602086016118d5565b611920816118e3565b840191505092915050565b5f6020820190508181035f83015261194381846118f3565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119858261195c565b9050919050565b6119958161197b565b811461199f575f80fd5b50565b5f813590506119b08161198c565b92915050565b6119bf81611773565b81146119c9575f80fd5b50565b5f813590506119da816119b6565b92915050565b5f80604083850312156119f6576119f5611954565b5b5f611a03858286016119a2565b9250506020611a14858286016119cc565b9150509250929050565b5f8115159050919050565b611a3281611a1e565b82525050565b5f602082019050611a4b5f830184611a29565b92915050565b611a5a81611773565b82525050565b5f602082019050611a735f830184611a51565b92915050565b5f805f60608486031215611a9057611a8f611954565b5b5f611a9d868287016119a2565b9350506020611aae868287016119a2565b9250506040611abf868287016119cc565b9150509250925092565b5f60ff82169050919050565b611ade81611ac9565b82525050565b5f602082019050611af75f830184611ad5565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b3b826118e3565b810181811067ffffffffffffffff82111715611b5a57611b59611b05565b5b80604052505050565b5f611b6c61194b565b9050611b788282611b32565b919050565b5f67ffffffffffffffff821115611b9757611b96611b05565b5b611ba0826118e3565b9050602081019050919050565b828183375f83830152505050565b5f611bcd611bc884611b7d565b611b63565b905082815260208101848484011115611be957611be8611b01565b5b611bf4848285611bad565b509392505050565b5f82601f830112611c1057611c0f611afd565b5b8135611c20848260208601611bbb565b91505092915050565b5f8060408385031215611c3f57611c3e611954565b5b5f83013567ffffffffffffffff811115611c5c57611c5b611958565b5b611c6885828601611bfc565b925050602083013567ffffffffffffffff811115611c8957611c88611958565b5b611c9585828601611bfc565b9150509250929050565b5f60208284031215611cb457611cb3611954565b5b5f611cc1848285016119a2565b91505092915050565b5f60208284031215611cdf57611cde611954565b5b5f82013567ffffffffffffffff811115611cfc57611cfb611958565b5b611d0884828501611bfc565b91505092915050565b5f6060820190508181035f830152611d2981866118f3565b9050611d386020830185611a51565b611d456040830184611a51565b949350505050565b611d568161197b565b82525050565b5f602082019050611d6f5f830184611d4d565b92915050565b5f8060408385031215611d8b57611d8a611954565b5b5f611d98858286016119a2565b9250506020611da9858286016119a2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611df757607f821691505b602082108103611e0a57611e09611db3565b5b50919050565b5f81905092915050565b5f611e24826118bb565b611e2e8185611e10565b9350611e3e8185602086016118d5565b80840191505092915050565b5f611e558284611e1a565b915081905092915050565b7f4e6f2073756368207465727269746f72790000000000000000000000000000005f82015250565b5f611e946011836118c5565b9150611e9f82611e60565b602082019050919050565b5f6020820190508181035f830152611ec181611e88565b9050919050565b7f486f72646520646f65736e2774206861766520656e6f75676820706f776572005f82015250565b5f611efc601f836118c5565b9150611f0782611ec8565b602082019050919050565b5f6020820190508181035f830152611f2981611ef0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f81549050611f9881611de0565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611ffb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fc0565b6120058683611fc0565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61204061203b61203684611773565b61201d565b611773565b9050919050565b5f819050919050565b61205983612026565b61206d61206582612047565b848454611fcc565b825550505050565b5f90565b612081612075565b61208c818484612050565b505050565b5b818110156120af576120a45f82612079565b600181019050612092565b5050565b601f8211156120f4576120c581611f9f565b6120ce84611fb1565b810160208510156120dd578190505b6120f16120e985611fb1565b830182612091565b50505b505050565b5f82821c905092915050565b5f6121145f19846008026120f9565b1980831691505092915050565b5f61212c8383612105565b9150826002028217905092915050565b81810361214a57505061221f565b61215382611f8a565b67ffffffffffffffff81111561216c5761216b611b05565b5b6121768254611de0565b6121818282856120b3565b5f601f8311600181146121ae575f841561219c578287015490505b6121a68582612121565b865550612218565b601f1984166121bc87611f9f565b96506121c786611f9f565b5f5b828110156121ee578489015482556001820191506001850194506020810190506121c9565b8683101561220b5784890154612207601f891682612105565b8355505b6001600288020188555050505b5050505050505b565b61222a826118bb565b67ffffffffffffffff81111561224357612242611b05565b5b61224d8254611de0565b6122588282856120b3565b5f60209050601f831160018114612289575f8415612277578287015190505b6122818582612121565b8655506122e8565b601f19841661229786611f9f565b5f5b828110156122be57848901518255600182019150602085019450602081019050612299565b868310156122db57848901516122d7601f891682612105565b8355505b6001600288020188555050505b505050505050565b5f6122fa82611773565b915061230583611773565b925082820190508082111561231d5761231c6117a9565b5b92915050565b5f6060820190506123365f830186611d4d565b6123436020830185611a51565b6123506040830184611a51565b94935050505056fea264697066735822122051c1f0ad3d570470af07a16992dbb386b0df97685a6104fc32e390373d6006e864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x138 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xBC3D6DC3 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xBC3D6DC3 EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xC1280AE7 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x551 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xF2C298BE EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5DF JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x96EB64A9 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xA0D81BA6 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B1 JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x651DC0DF GT PUSH2 0xFC JUMPI DUP1 PUSH4 0x651DC0DF EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x738F5B5B EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x86E6E222 EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI PUSH2 0x1FD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2CD JUMPI PUSH2 0x1FD JUMP JUMPDEST CALLDATASIZE PUSH2 0x1FD JUMPI PUSH0 PUSH1 0xA SLOAD PUSH1 0x64 CALLVALUE PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x163 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x186 SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH0 DUP3 CALLVALUE PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1888 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 SLOAD DUP3 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x17D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB PUSH2 0x1F4 PUSH2 0x607 JUMP JUMPDEST CALLER DUP4 PUSH2 0x62F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x7DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36F PUSH2 0xA7C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FF PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x420 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0xC16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x19E0 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x577 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x584 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A1 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D8 SWAP2 SWAP1 PUSH2 0x1CCA JUMP JUMPDEST PUSH2 0x1043 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x605 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x1C9F JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x69F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x70F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71A DUP4 DUP4 DUP4 PUSH2 0x1195 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x72E SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x75A SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x77C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x788 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7B9 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0x7C6 DUP2 DUP6 DUP6 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7E4 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0x7F1 DUP6 DUP3 DUP6 PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x7FC DUP6 DUP6 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH2 0x820 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP1 SLOAD SWAP1 POP PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x86A SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SUB PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP1 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 PUSH1 0x40 MLOAD PUSH2 0x8CC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA0C JUMPI PUSH2 0x9FF PUSH2 0x977 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9A9 JUMPI PUSH2 0x9A8 PUSH2 0x1F30 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x62F JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x943 JUMP JUMPDEST POP PUSH0 PUSH1 0x8 DUP3 PUSH1 0x40 MLOAD PUSH2 0xA1E SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA84 PUSH2 0x145A JUMP JUMPDEST PUSH2 0xA8D PUSH0 PUSH2 0x14E1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xAF9 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB25 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB70 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB47 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB70 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB53 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB95 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBC1 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC0C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBE3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC0C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBEF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xC29 JUMPI PUSH2 0xC28 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xC89 JUMPI PUSH2 0xC88 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST EQ PUSH2 0xC92 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD05 JUMPI PUSH2 0xD04 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD0E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD72 JUMPI PUSH2 0xD71 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xD8A PUSH2 0xD82 PUSH2 0x607 JUMP JUMPDEST CALLER PUSH1 0x64 PUSH2 0x62F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0xDA3 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDCF SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE1A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE1A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDFD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3A PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP PUSH2 0xE47 DUP2 DUP6 DUP6 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0xEE7 SWAP2 SWAP1 PUSH2 0x213C JUMP JUMPDEST POP PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xF85 JUMPI PUSH2 0xF84 PUSH2 0x1F5D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFA0 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SWAP1 DUP2 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST POP CALLER PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1119 PUSH2 0x145A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1189 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0x14E1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E5 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x126E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1265 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1344 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13A1 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13C2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15A4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D2 DUP5 DUP5 PUSH2 0xFBB JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1454 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1445 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1453 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x15A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1462 PUSH2 0x13AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1480 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14DF JUMPI PUSH2 0x14A3 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D6 SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1614 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160B SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1684 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167B SWAP2 SWAP1 PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x176D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E0 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EB DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17FB JUMPI PUSH2 0x17FA PUSH2 0x177C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1810 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1829 DUP2 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1840 JUMPI PUSH2 0x183F PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x185F PUSH0 DUP4 PUSH2 0x1847 JUMP JUMPDEST SWAP2 POP PUSH2 0x186A DUP3 PUSH2 0x1851 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187E DUP3 PUSH2 0x1854 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1892 DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x189D DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x18B5 JUMPI PUSH2 0x18B4 PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FD DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1907 DUP2 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1917 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x1920 DUP2 PUSH2 0x18E3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1943 DUP2 DUP5 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1985 DUP3 PUSH2 0x195C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1995 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP2 EQ PUSH2 0x199F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B0 DUP2 PUSH2 0x198C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x19BF DUP2 PUSH2 0x1773 JUMP JUMPDEST DUP2 EQ PUSH2 0x19C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19DA DUP2 PUSH2 0x19B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A03 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A14 DUP6 DUP3 DUP7 ADD PUSH2 0x19CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A32 DUP2 PUSH2 0x1A1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4B PUSH0 DUP4 ADD DUP5 PUSH2 0x1A29 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A5A DUP2 PUSH2 0x1773 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A73 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9D DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AAE DUP7 DUP3 DUP8 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1ABF DUP7 DUP3 DUP8 ADD PUSH2 0x19CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ADE DUP2 PUSH2 0x1AC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B3B DUP3 PUSH2 0x18E3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B5A JUMPI PUSH2 0x1B59 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6C PUSH2 0x194B JUMP JUMPDEST SWAP1 POP PUSH2 0x1B78 DUP3 DUP3 PUSH2 0x1B32 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B97 JUMPI PUSH2 0x1B96 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x1BA0 DUP3 PUSH2 0x18E3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCD PUSH2 0x1BC8 DUP5 PUSH2 0x1B7D JUMP JUMPDEST PUSH2 0x1B63 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x1B01 JUMP JUMPDEST JUMPDEST PUSH2 0x1BF4 DUP5 DUP3 DUP6 PUSH2 0x1BAD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C10 JUMPI PUSH2 0x1C0F PUSH2 0x1AFD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C20 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3F JUMPI PUSH2 0x1C3E PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1C68 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C89 JUMPI PUSH2 0x1C88 PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1C95 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CC1 DUP5 DUP3 DUP6 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CDF JUMPI PUSH2 0x1CDE PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CFC JUMPI PUSH2 0x1CFB PUSH2 0x1958 JUMP JUMPDEST JUMPDEST PUSH2 0x1D08 DUP5 DUP3 DUP6 ADD PUSH2 0x1BFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D29 DUP2 DUP7 PUSH2 0x18F3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D38 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x1D45 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D56 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D6F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1954 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP6 DUP3 DUP7 ADD PUSH2 0x19A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DF7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E0A JUMPI PUSH2 0x1E09 PUSH2 0x1DB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E24 DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH2 0x1E2E DUP2 DUP6 PUSH2 0x1E10 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E3E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18D5 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E55 DUP3 DUP5 PUSH2 0x1E1A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073756368207465727269746F7279000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E94 PUSH1 0x11 DUP4 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E9F DUP3 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EC1 DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x486F72646520646F65736E2774206861766520656E6F75676820706F77657200 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EFC PUSH1 0x1F DUP4 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F07 DUP3 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F29 DUP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SLOAD SWAP1 POP PUSH2 0x1F98 DUP2 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1FFB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x2005 DUP7 DUP4 PUSH2 0x1FC0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2040 PUSH2 0x203B PUSH2 0x2036 DUP5 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x201D JUMP JUMPDEST PUSH2 0x1773 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2059 DUP4 PUSH2 0x2026 JUMP JUMPDEST PUSH2 0x206D PUSH2 0x2065 DUP3 PUSH2 0x2047 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1FCC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2081 PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x208C DUP2 DUP5 DUP5 PUSH2 0x2050 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20A4 PUSH0 DUP3 PUSH2 0x2079 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2092 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x20F4 JUMPI PUSH2 0x20C5 DUP2 PUSH2 0x1F9F JUMP JUMPDEST PUSH2 0x20CE DUP5 PUSH2 0x1FB1 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x20DD JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x20F1 PUSH2 0x20E9 DUP6 PUSH2 0x1FB1 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2114 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x20F9 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x212C DUP4 DUP4 PUSH2 0x2105 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x214A JUMPI POP POP PUSH2 0x221F JUMP JUMPDEST PUSH2 0x2153 DUP3 PUSH2 0x1F8A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x216C JUMPI PUSH2 0x216B PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x2176 DUP3 SLOAD PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x2181 DUP3 DUP3 DUP6 PUSH2 0x20B3 JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x21AE JUMPI PUSH0 DUP5 ISZERO PUSH2 0x219C JUMPI DUP3 DUP8 ADD SLOAD SWAP1 POP JUMPDEST PUSH2 0x21A6 DUP6 DUP3 PUSH2 0x2121 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2218 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x21BC DUP8 PUSH2 0x1F9F JUMP JUMPDEST SWAP7 POP PUSH2 0x21C7 DUP7 PUSH2 0x1F9F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21EE JUMPI DUP5 DUP10 ADD SLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21C9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x220B JUMPI DUP5 DUP10 ADD SLOAD PUSH2 0x2207 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2105 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH2 0x222A DUP3 PUSH2 0x18BB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST PUSH2 0x224D DUP3 SLOAD PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x2258 DUP3 DUP3 DUP6 PUSH2 0x20B3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2289 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2277 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2281 DUP6 DUP3 PUSH2 0x2121 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2297 DUP7 PUSH2 0x1F9F JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22BE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2299 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x22DB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x22D7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2105 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22FA DUP3 PUSH2 0x1773 JUMP JUMPDEST SWAP2 POP PUSH2 0x2305 DUP4 PUSH2 0x1773 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x231D JUMPI PUSH2 0x231C PUSH2 0x17A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2336 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4D JUMP JUMPDEST PUSH2 0x2343 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A51 JUMP JUMPDEST PUSH2 0x2350 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC1 CREATE 0xAD RETURNDATASIZE JUMPI DIV PUSH17 0xAF07A16992DBB386B0DF97685A6104FC32 0xE3 SWAP1 CALLDATACOPY RETURNDATASIZE PUSH1 0x6 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "634:2259:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:9;2678:3;;2672;2660:9;:15;;;;:::i;:::-;:21;;;;:::i;:::-;2648:33;;2692:12;2710:7;:5;:7::i;:::-;:12;;2730:4;2710:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2691:48;;;2772:11;2798:4;2786:9;:16;;;;:::i;:::-;2772:30;;2812:10;2832:5;;2825:6;:12;;;;:::i;:::-;2812:25;;2847:37;2857:7;:5;:7::i;:::-;2866:10;2878:5;2847:9;:37::i;:::-;2638:253;634:2259;;;;1760:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2090:515:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1028:38:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1072:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1585:263:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1125:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1188:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3296:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1854:108:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1968:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1162:20:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1435:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;5374:300:2:-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1760:89::-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;2090:515:6:-;2192:6;2199:4;2192:12;;;;;;:::i;:::-;;;;;;;;;;;;;:19;;:26;;;;2171:6;2178:4;2171:12;;;;;;:::i;:::-;;;;;;;;;;;;;:18;;:47;;;;2264:1;2236:11;2248:4;2236:17;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;:29;2228:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2332:11;2344:4;2332:17;;;;;;:::i;:::-;;;;;;;;;;;;;:28;;;2305:6;2312:9;2305:17;;;;;;:::i;:::-;;;;;;;;;;;;;:23;;;:55;;2297:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;2411:6;2406:155;2427:6;2434:9;2427:17;;;;;;:::i;:::-;;;;;;;;;;;;;:23;;;2423:1;:27;2406:155;;;2470:80;2480:7;:5;:7::i;:::-;2489:6;2496:9;2489:17;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;2514:1;2489:27;;;;;;;;:::i;:::-;;;;;;;;;;;;:34;;;;;;;;;;;;2525:11;2537:4;2525:17;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;;2470:9;:80::i;:::-;2452:3;;;;;;;2406:155;;;;2597:1;2570:11;2582:4;2570:17;;;;;;:::i;:::-;;;;;;;;;;;;;:24;;:28;;;;2090:515;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1028:38:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1072:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;1585:263:6:-;1680:13;1652:41;;;;;;;;:::i;:::-;;:5;:17;1658:10;1652:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;1644:50;;;;;;1736:13;1712:37;;;;;;;;:::i;:::-;;:5;:13;1718:6;1712:13;;;;;;;;;;;;;;;:20;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;1704:46;;;;;;1783:13;1760:5;:13;1766:6;1760:13;;;;;;;;;;;;;;;:20;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1806:35;1816:7;:5;:7::i;:::-;1825:10;1837:3;1806:9;:35::i;:::-;1585:263;:::o;1125:31::-;;;;:::o;1188:21::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;1854:108:6:-;1912:6;1919:4;1912:12;;;;;;:::i;:::-;;;;;;;;;;;;;:19;;1937:5;:17;1943:10;1937:17;;;;;;;;;;;;;;;1912:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:108;:::o;1968:116::-;2028:4;2051:6;2058:4;2051:12;;;;;;:::i;:::-;;;;;;;;;;;;;:19;;:26;;;;2044:33;;1968:116;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1162:20:6:-;;;;:::o;1435:140::-;1517:4;1492:5;:17;1498:10;1492:17;;;;;;;;;;;;;;;:22;;:29;;;;;;:::i;:::-;;1558:10;1531:5;:17;1537:10;1531:17;;;;;;;;;;;;;;;:24;;;:37;;;;;;;;;;;;;;;;;;1435:140;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5989:1107:2:-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:2:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:180;324:77;321:1;314:88;421:4;418:1;411:15;445:4;442:1;435:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;653:410::-;693:7;716:20;734:1;716:20;:::i;:::-;711:25;;750:20;768:1;750:20;:::i;:::-;745:25;;805:1;802;798:9;827:30;845:11;827:30;:::i;:::-;816:41;;1006:1;997:7;993:15;990:1;987:22;967:1;960:9;940:83;917:139;;1036:18;;:::i;:::-;917:139;701:362;653:410;;;;:::o;1069:147::-;1170:11;1207:3;1192:18;;1069:147;;;;:::o;1222:114::-;;:::o;1342:398::-;1501:3;1522:83;1603:1;1598:3;1522:83;:::i;:::-;1515:90;;1614:93;1703:3;1614:93;:::i;:::-;1732:1;1727:3;1723:11;1716:18;;1342:398;;;:::o;1746:379::-;1930:3;1952:147;2095:3;1952:147;:::i;:::-;1945:154;;2116:3;2109:10;;1746:379;;;:::o;2131:194::-;2171:4;2191:20;2209:1;2191:20;:::i;:::-;2186:25;;2225:20;2243:1;2225:20;:::i;:::-;2220:25;;2269:1;2266;2262:9;2254:17;;2293:1;2287:4;2284:11;2281:37;;;2298:18;;:::i;:::-;2281:37;2131:194;;;;:::o;2331:99::-;2383:6;2417:5;2411:12;2401:22;;2331:99;;;:::o;2436:169::-;2520:11;2554:6;2549:3;2542:19;2594:4;2589:3;2585:14;2570:29;;2436:169;;;;:::o;2611:139::-;2700:6;2695:3;2690;2684:23;2741:1;2732:6;2727:3;2723:16;2716:27;2611:139;;;:::o;2756:102::-;2797:6;2848:2;2844:7;2839:2;2832:5;2828:14;2824:28;2814:38;;2756:102;;;:::o;2864:377::-;2952:3;2980:39;3013:5;2980:39;:::i;:::-;3035:71;3099:6;3094:3;3035:71;:::i;:::-;3028:78;;3115:65;3173:6;3168:3;3161:4;3154:5;3150:16;3115:65;:::i;:::-;3205:29;3227:6;3205:29;:::i;:::-;3200:3;3196:39;3189:46;;2956:285;2864:377;;;;:::o;3247:313::-;3360:4;3398:2;3387:9;3383:18;3375:26;;3447:9;3441:4;3437:20;3433:1;3422:9;3418:17;3411:47;3475:78;3548:4;3539:6;3475:78;:::i;:::-;3467:86;;3247:313;;;;:::o;3566:75::-;3599:6;3632:2;3626:9;3616:19;;3566:75;:::o;3647:117::-;3756:1;3753;3746:12;3770:117;3879:1;3876;3869:12;3893:126;3930:7;3970:42;3963:5;3959:54;3948:65;;3893:126;;;:::o;4025:96::-;4062:7;4091:24;4109:5;4091:24;:::i;:::-;4080:35;;4025:96;;;:::o;4127:122::-;4200:24;4218:5;4200:24;:::i;:::-;4193:5;4190:35;4180:63;;4239:1;4236;4229:12;4180:63;4127:122;:::o;4255:139::-;4301:5;4339:6;4326:20;4317:29;;4355:33;4382:5;4355:33;:::i;:::-;4255:139;;;;:::o;4400:122::-;4473:24;4491:5;4473:24;:::i;:::-;4466:5;4463:35;4453:63;;4512:1;4509;4502:12;4453:63;4400:122;:::o;4528:139::-;4574:5;4612:6;4599:20;4590:29;;4628:33;4655:5;4628:33;:::i;:::-;4528:139;;;;:::o;4673:474::-;4741:6;4749;4798:2;4786:9;4777:7;4773:23;4769:32;4766:119;;;4804:79;;:::i;:::-;4766:119;4924:1;4949:53;4994:7;4985:6;4974:9;4970:22;4949:53;:::i;:::-;4939:63;;4895:117;5051:2;5077:53;5122:7;5113:6;5102:9;5098:22;5077:53;:::i;:::-;5067:63;;5022:118;4673:474;;;;;:::o;5153:90::-;5187:7;5230:5;5223:13;5216:21;5205:32;;5153:90;;;:::o;5249:109::-;5330:21;5345:5;5330:21;:::i;:::-;5325:3;5318:34;5249:109;;:::o;5364:210::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5502:65;5564:1;5553:9;5549:17;5540:6;5502:65;:::i;:::-;5364:210;;;;:::o;5580:118::-;5667:24;5685:5;5667:24;:::i;:::-;5662:3;5655:37;5580:118;;:::o;5704:222::-;5797:4;5835:2;5824:9;5820:18;5812:26;;5848:71;5916:1;5905:9;5901:17;5892:6;5848:71;:::i;:::-;5704:222;;;;:::o;5932:619::-;6009:6;6017;6025;6074:2;6062:9;6053:7;6049:23;6045:32;6042:119;;;6080:79;;:::i;:::-;6042:119;6200:1;6225:53;6270:7;6261:6;6250:9;6246:22;6225:53;:::i;:::-;6215:63;;6171:117;6327:2;6353:53;6398:7;6389:6;6378:9;6374:22;6353:53;:::i;:::-;6343:63;;6298:118;6455:2;6481:53;6526:7;6517:6;6506:9;6502:22;6481:53;:::i;:::-;6471:63;;6426:118;5932:619;;;;;:::o;6557:86::-;6592:7;6632:4;6625:5;6621:16;6610:27;;6557:86;;;:::o;6649:112::-;6732:22;6748:5;6732:22;:::i;:::-;6727:3;6720:35;6649:112;;:::o;6767:214::-;6856:4;6894:2;6883:9;6879:18;6871:26;;6907:67;6971:1;6960:9;6956:17;6947:6;6907:67;:::i;:::-;6767:214;;;;:::o;6987:117::-;7096:1;7093;7086:12;7110:117;7219:1;7216;7209:12;7233:180;7281:77;7278:1;7271:88;7378:4;7375:1;7368:15;7402:4;7399:1;7392:15;7419:281;7502:27;7524:4;7502:27;:::i;:::-;7494:6;7490:40;7632:6;7620:10;7617:22;7596:18;7584:10;7581:34;7578:62;7575:88;;;7643:18;;:::i;:::-;7575:88;7683:10;7679:2;7672:22;7462:238;7419:281;;:::o;7706:129::-;7740:6;7767:20;;:::i;:::-;7757:30;;7796:33;7824:4;7816:6;7796:33;:::i;:::-;7706:129;;;:::o;7841:308::-;7903:4;7993:18;7985:6;7982:30;7979:56;;;8015:18;;:::i;:::-;7979:56;8053:29;8075:6;8053:29;:::i;:::-;8045:37;;8137:4;8131;8127:15;8119:23;;7841:308;;;:::o;8155:148::-;8253:6;8248:3;8243;8230:30;8294:1;8285:6;8280:3;8276:16;8269:27;8155:148;;;:::o;8309:425::-;8387:5;8412:66;8428:49;8470:6;8428:49;:::i;:::-;8412:66;:::i;:::-;8403:75;;8501:6;8494:5;8487:21;8539:4;8532:5;8528:16;8577:3;8568:6;8563:3;8559:16;8556:25;8553:112;;;8584:79;;:::i;:::-;8553:112;8674:54;8721:6;8716:3;8711;8674:54;:::i;:::-;8393:341;8309:425;;;;;:::o;8754:340::-;8810:5;8859:3;8852:4;8844:6;8840:17;8836:27;8826:122;;8867:79;;:::i;:::-;8826:122;8984:6;8971:20;9009:79;9084:3;9076:6;9069:4;9061:6;9057:17;9009:79;:::i;:::-;9000:88;;8816:278;8754:340;;;;:::o;9100:834::-;9188:6;9196;9245:2;9233:9;9224:7;9220:23;9216:32;9213:119;;;9251:79;;:::i;:::-;9213:119;9399:1;9388:9;9384:17;9371:31;9429:18;9421:6;9418:30;9415:117;;;9451:79;;:::i;:::-;9415:117;9556:63;9611:7;9602:6;9591:9;9587:22;9556:63;:::i;:::-;9546:73;;9342:287;9696:2;9685:9;9681:18;9668:32;9727:18;9719:6;9716:30;9713:117;;;9749:79;;:::i;:::-;9713:117;9854:63;9909:7;9900:6;9889:9;9885:22;9854:63;:::i;:::-;9844:73;;9639:288;9100:834;;;;;:::o;9940:329::-;9999:6;10048:2;10036:9;10027:7;10023:23;10019:32;10016:119;;;10054:79;;:::i;:::-;10016:119;10174:1;10199:53;10244:7;10235:6;10224:9;10220:22;10199:53;:::i;:::-;10189:63;;10145:117;9940:329;;;;:::o;10275:509::-;10344:6;10393:2;10381:9;10372:7;10368:23;10364:32;10361:119;;;10399:79;;:::i;:::-;10361:119;10547:1;10536:9;10532:17;10519:31;10577:18;10569:6;10566:30;10563:117;;;10599:79;;:::i;:::-;10563:117;10704:63;10759:7;10750:6;10739:9;10735:22;10704:63;:::i;:::-;10694:73;;10490:287;10275:509;;;;:::o;10790:533::-;10959:4;10997:2;10986:9;10982:18;10974:26;;11046:9;11040:4;11036:20;11032:1;11021:9;11017:17;11010:47;11074:78;11147:4;11138:6;11074:78;:::i;:::-;11066:86;;11162:72;11230:2;11219:9;11215:18;11206:6;11162:72;:::i;:::-;11244;11312:2;11301:9;11297:18;11288:6;11244:72;:::i;:::-;10790:533;;;;;;:::o;11329:118::-;11416:24;11434:5;11416:24;:::i;:::-;11411:3;11404:37;11329:118;;:::o;11453:222::-;11546:4;11584:2;11573:9;11569:18;11561:26;;11597:71;11665:1;11654:9;11650:17;11641:6;11597:71;:::i;:::-;11453:222;;;;:::o;11681:474::-;11749:6;11757;11806:2;11794:9;11785:7;11781:23;11777:32;11774:119;;;11812:79;;:::i;:::-;11774:119;11932:1;11957:53;12002:7;11993:6;11982:9;11978:22;11957:53;:::i;:::-;11947:63;;11903:117;12059:2;12085:53;12130:7;12121:6;12110:9;12106:22;12085:53;:::i;:::-;12075:63;;12030:118;11681:474;;;;;:::o;12161:180::-;12209:77;12206:1;12199:88;12306:4;12303:1;12296:15;12330:4;12327:1;12320:15;12347:320;12391:6;12428:1;12422:4;12418:12;12408:22;;12475:1;12469:4;12465:12;12496:18;12486:81;;12552:4;12544:6;12540:17;12530:27;;12486:81;12614:2;12606:6;12603:14;12583:18;12580:38;12577:84;;12633:18;;:::i;:::-;12577:84;12398:269;12347:320;;;:::o;12673:148::-;12775:11;12812:3;12797:18;;12673:148;;;;:::o;12827:390::-;12933:3;12961:39;12994:5;12961:39;:::i;:::-;13016:89;13098:6;13093:3;13016:89;:::i;:::-;13009:96;;13114:65;13172:6;13167:3;13160:4;13153:5;13149:16;13114:65;:::i;:::-;13204:6;13199:3;13195:16;13188:23;;12937:280;12827:390;;;;:::o;13223:275::-;13355:3;13377:95;13468:3;13459:6;13377:95;:::i;:::-;13370:102;;13489:3;13482:10;;13223:275;;;;:::o;13504:167::-;13644:19;13640:1;13632:6;13628:14;13621:43;13504:167;:::o;13677:366::-;13819:3;13840:67;13904:2;13899:3;13840:67;:::i;:::-;13833:74;;13916:93;14005:3;13916:93;:::i;:::-;14034:2;14029:3;14025:12;14018:19;;13677:366;;;:::o;14049:419::-;14215:4;14253:2;14242:9;14238:18;14230:26;;14302:9;14296:4;14292:20;14288:1;14277:9;14273:17;14266:47;14330:131;14456:4;14330:131;:::i;:::-;14322:139;;14049:419;;;:::o;14474:181::-;14614:33;14610:1;14602:6;14598:14;14591:57;14474:181;:::o;14661:366::-;14803:3;14824:67;14888:2;14883:3;14824:67;:::i;:::-;14817:74;;14900:93;14989:3;14900:93;:::i;:::-;15018:2;15013:3;15009:12;15002:19;;14661:366;;;:::o;15033:419::-;15199:4;15237:2;15226:9;15222:18;15214:26;;15286:9;15280:4;15276:20;15272:1;15261:9;15257:17;15250:47;15314:131;15440:4;15314:131;:::i;:::-;15306:139;;15033:419;;;:::o;15458:180::-;15506:77;15503:1;15496:88;15603:4;15600:1;15593:15;15627:4;15624:1;15617:15;15644:180;15692:77;15689:1;15682:88;15789:4;15786:1;15779:15;15813:4;15810:1;15803:15;15830:149;15879:6;15913:5;15907:12;15897:22;;15939:33;15965:6;15939:33;:::i;:::-;15929:43;;15830:149;;;:::o;15985:141::-;16034:4;16057:3;16049:11;;16080:3;16077:1;16070:14;16114:4;16111:1;16101:18;16093:26;;15985:141;;;:::o;16132:93::-;16169:6;16216:2;16211;16204:5;16200:14;16196:23;16186:33;;16132:93;;;:::o;16231:107::-;16275:8;16325:5;16319:4;16315:16;16294:37;;16231:107;;;;:::o;16344:393::-;16413:6;16463:1;16451:10;16447:18;16486:97;16516:66;16505:9;16486:97;:::i;:::-;16604:39;16634:8;16623:9;16604:39;:::i;:::-;16592:51;;16676:4;16672:9;16665:5;16661:21;16652:30;;16725:4;16715:8;16711:19;16704:5;16701:30;16691:40;;16420:317;;16344:393;;;;;:::o;16743:60::-;16771:3;16792:5;16785:12;;16743:60;;;:::o;16809:142::-;16859:9;16892:53;16910:34;16919:24;16937:5;16919:24;:::i;:::-;16910:34;:::i;:::-;16892:53;:::i;:::-;16879:66;;16809:142;;;:::o;16957:75::-;17000:3;17021:5;17014:12;;16957:75;;;:::o;17038:269::-;17148:39;17179:7;17148:39;:::i;:::-;17209:91;17258:41;17282:16;17258:41;:::i;:::-;17250:6;17243:4;17237:11;17209:91;:::i;:::-;17203:4;17196:105;17114:193;17038:269;;;:::o;17313:73::-;17358:3;17313:73;:::o;17392:189::-;17469:32;;:::i;:::-;17510:65;17568:6;17560;17554:4;17510:65;:::i;:::-;17445:136;17392:189;;:::o;17587:186::-;17647:120;17664:3;17657:5;17654:14;17647:120;;;17718:39;17755:1;17748:5;17718:39;:::i;:::-;17691:1;17684:5;17680:13;17671:22;;17647:120;;;17587:186;;:::o;17779:543::-;17880:2;17875:3;17872:11;17869:446;;;17914:38;17946:5;17914:38;:::i;:::-;17998:29;18016:10;17998:29;:::i;:::-;17988:8;17984:44;18181:2;18169:10;18166:18;18163:49;;;18202:8;18187:23;;18163:49;18225:80;18281:22;18299:3;18281:22;:::i;:::-;18271:8;18267:37;18254:11;18225:80;:::i;:::-;17884:431;;17869:446;17779:543;;;:::o;18328:117::-;18382:8;18432:5;18426:4;18422:16;18401:37;;18328:117;;;;:::o;18451:169::-;18495:6;18528:51;18576:1;18572:6;18564:5;18561:1;18557:13;18528:51;:::i;:::-;18524:56;18609:4;18603;18599:15;18589:25;;18502:118;18451:169;;;;:::o;18625:295::-;18701:4;18847:29;18872:3;18866:4;18847:29;:::i;:::-;18839:37;;18909:3;18906:1;18902:11;18896:4;18893:21;18885:29;;18625:295;;;;:::o;18925:1451::-;19036:3;19030:4;19027:13;19024:26;;19043:5;;;;19024:26;19074:34;19104:3;19074:34;:::i;:::-;19173:18;19165:6;19162:30;19159:56;;;19195:18;;:::i;:::-;19159:56;19239:38;19271:4;19265:11;19239:38;:::i;:::-;19324:67;19384:6;19376;19370:4;19324:67;:::i;:::-;19418:1;19447:2;19439:6;19436:14;19464:1;19459:672;;;;20175:1;20192:6;20189:77;;;20241:9;20236:3;20232:19;20226:26;20217:35;;20189:77;20292:67;20352:6;20345:5;20292:67;:::i;:::-;20286:4;20279:81;20148:222;19429:941;;19459:672;19511:4;19507:9;19499:6;19495:22;19537:36;19569:3;19537:36;:::i;:::-;19530:43;;19600:37;19632:4;19600:37;:::i;:::-;19659:1;19673:207;19687:7;19684:1;19681:14;19673:207;;;19766:9;19761:3;19757:19;19751:26;19743:6;19736:42;19817:1;19809:6;19805:14;19795:24;;19864:1;19853:9;19849:17;19836:30;;19710:4;19707:1;19703:12;19698:17;;19673:207;;;19908:6;19899:7;19896:19;19893:179;;;19966:9;19961:3;19957:19;19951:26;20009:48;20051:4;20043:6;20039:17;20028:9;20009:48;:::i;:::-;20001:6;19994:64;19916:156;19893:179;20118:1;20114;20106:6;20102:14;20098:22;20092:4;20085:36;19466:665;;;19429:941;;19014:1362;;;18925:1451;;;:::o;20382:1395::-;20499:37;20532:3;20499:37;:::i;:::-;20601:18;20593:6;20590:30;20587:56;;;20623:18;;:::i;:::-;20587:56;20667:38;20699:4;20693:11;20667:38;:::i;:::-;20752:67;20812:6;20804;20798:4;20752:67;:::i;:::-;20846:1;20870:4;20857:17;;20902:2;20894:6;20891:14;20919:1;20914:618;;;;21576:1;21593:6;21590:77;;;21642:9;21637:3;21633:19;21627:26;21618:35;;21590:77;21693:67;21753:6;21746:5;21693:67;:::i;:::-;21687:4;21680:81;21549:222;20884:887;;20914:618;20966:4;20962:9;20954:6;20950:22;21000:37;21032:4;21000:37;:::i;:::-;21059:1;21073:208;21087:7;21084:1;21081:14;21073:208;;;21166:9;21161:3;21157:19;21151:26;21143:6;21136:42;21217:1;21209:6;21205:14;21195:24;;21264:2;21253:9;21249:18;21236:31;;21110:4;21107:1;21103:12;21098:17;;21073:208;;;21309:6;21300:7;21297:19;21294:179;;;21367:9;21362:3;21358:19;21352:26;21410:48;21452:4;21444:6;21440:17;21429:9;21410:48;:::i;:::-;21402:6;21395:64;21317:156;21294:179;21519:1;21515;21507:6;21503:14;21499:22;21493:4;21486:36;20921:611;;;20884:887;;20474:1303;;;20382:1395;;:::o;21783:191::-;21823:3;21842:20;21860:1;21842:20;:::i;:::-;21837:25;;21876:20;21894:1;21876:20;:::i;:::-;21871:25;;21919:1;21916;21912:9;21905:16;;21940:3;21937:1;21934:10;21931:36;;;21947:18;;:::i;:::-;21931:36;21783:191;;;;:::o;21980:442::-;22129:4;22167:2;22156:9;22152:18;22144:26;;22180:71;22248:1;22237:9;22233:17;22224:6;22180:71;:::i;:::-;22261:72;22329:2;22318:9;22314:18;22305:6;22261:72;:::i;:::-;22343;22411:2;22400:9;22396:18;22387:6;22343:72;:::i;:::-;21980:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1820400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"City()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"capture(string,string)": "infinite",
								"decimals()": "450",
								"fee()": "2513",
								"formHorde(string)": "infinite",
								"getPower(string)": "infinite",
								"hordes(string)": "infinite",
								"infect(address)": "infinite",
								"name()": "infinite",
								"owner()": "2648",
								"price()": "2492",
								"register(string)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"territories(string)": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1145,
									"end": 1156,
									"name": "PUSH",
									"source": 6,
									"value": "5AF3107A4000"
								},
								{
									"begin": 1125,
									"end": 1156,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1125,
									"end": 1156,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1162,
									"end": 1182,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1182,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1216,
									"end": 1429,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1262,
									"end": 1272,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "5A6F6D6269650000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "42524E5300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1330,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1290,
									"end": 1300,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1319,
									"end": 1327,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1319,
									"end": 1327,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1319,
									"end": 1327,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1319,
									"end": 1329,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1329,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1329,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1319,
									"end": 1329,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1313,
									"end": 1329,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1313,
									"end": 1329,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1310,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "989680"
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1302,
									"end": 1329,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1302,
									"end": 1329,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1284,
									"end": 1289,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1289,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1330,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1330,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1330,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1284,
									"end": 1330,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1284,
									"end": 1330,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4D616E68617474616E0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1344,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1340,
									"end": 1349,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1349,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1340,
									"end": 1363,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1340,
									"end": 1363,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1394,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 1373,
									"end": 1377,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1373,
									"end": 1388,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1373,
									"end": 1388,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1394,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1394,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1373,
									"end": 1394,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1422,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "3E8"
								},
								{
									"begin": 1404,
									"end": 1408,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1404,
									"end": 1415,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1404,
									"end": 1415,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1404,
									"end": 1422,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1404,
									"end": 1422,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1404,
									"end": 1422,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1404,
									"end": 1422,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6056,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6095,
									"end": 6100,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6092,
									"end": 6093,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6088,
									"end": 6101,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6067,
									"end": 6101,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6006,
									"end": 6108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6180,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6182,
									"end": 6186,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6206,
									"end": 6212,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6212,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6221,
									"end": 6235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6265,
									"end": 6266,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6255,
									"end": 6263,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6252,
									"end": 6267,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6355,
									"end": 6358,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6365,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 6345,
									"end": 6349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6342,
									"end": 6366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6369,
									"end": 6387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6369,
									"end": 6387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6339,
									"end": 6389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6419,
									"end": 6420,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6409,
									"end": 6417,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6405,
									"end": 6421,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6834,
									"end": 6838,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6827,
									"end": 6832,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6823,
									"end": 6839,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6814,
									"end": 6839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6402,
									"end": 6853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6888,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6878,
									"end": 6882,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6874,
									"end": 6889,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6866,
									"end": 6889,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6937,
									"end": 6945,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6914,
									"end": 6946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6914,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6902,
									"end": 6946,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 6244,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6114,
									"end": 6962,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7213,
									"end": 7221,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7236,
									"end": 7241,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 7203,
									"end": 7243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7266,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7279,
									"end": 7280,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7270,
									"end": 7280,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7281,
									"end": 7286,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 7252,
									"end": 7288,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7348,
									"end": 7352,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7396,
									"end": 7397,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7432,
									"end": 7433,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 7391,
									"end": 7418,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7409,
									"end": 7410,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7411,
									"end": 7416,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7427,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 7462,
									"end": 7470,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7459,
									"end": 7476,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7479,
									"end": 7497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7479,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 7456,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7536,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7525,
									"end": 7526,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7521,
									"end": 7537,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7563,
									"end": 7566,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7556,
									"end": 7561,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7553,
									"end": 7567,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7570,
									"end": 7588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7570,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7550,
									"end": 7590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7603,
									"end": 7608,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7727,
									"end": 7729,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7717,
									"end": 7725,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7714,
									"end": 7730,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7708,
									"end": 7711,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 7702,
									"end": 7706,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7699,
									"end": 7712,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7695,
									"end": 7731,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7677,
									"end": 7679,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 7667,
									"end": 7675,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7664,
									"end": 7680,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7659,
									"end": 7661,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7650,
									"end": 7662,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7646,
									"end": 7681,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7630,
									"end": 7741,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7783,
									"end": 7791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7777,
									"end": 7781,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7773,
									"end": 7792,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7764,
									"end": 7792,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7818,
									"end": 7821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7811,
									"end": 7816,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7808,
									"end": 7822,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7825,
									"end": 7843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7825,
									"end": 7843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 7805,
									"end": 7845,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 7858,
									"end": 7863,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7627,
									"end": 7873,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7936,
									"end": 7939,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7926,
									"end": 7934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7920,
									"end": 7924,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7917,
									"end": 7918,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7898,
									"end": 7940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 7898,
									"end": 7940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7883,
									"end": 7940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7972,
									"end": 7976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7967,
									"end": 7970,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7963,
									"end": 7977,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7956,
									"end": 7961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7953,
									"end": 7978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 7981,
									"end": 7999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7981,
									"end": 7999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7950,
									"end": 8001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8030,
									"end": 8034,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8023,
									"end": 8028,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8035,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8010,
									"end": 8035,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6968,
									"end": 8041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8082,
									"end": 8089,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8122,
									"end": 8126,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8115,
									"end": 8120,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8111,
									"end": 8127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8100,
									"end": 8127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8239,
									"end": 8243,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8221,
									"end": 8244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8221,
									"end": 8244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8213,
									"end": 8244,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8213,
									"end": 8244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8281,
									"end": 8289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8265,
									"end": 8290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8265,
									"end": 8290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8253,
									"end": 8290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8346,
									"end": 8412,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8336,
									"end": 8344,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8330,
									"end": 8334,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8309,
									"end": 8413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8309,
									"end": 8413,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8413,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8300,
									"end": 8413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8466,
									"end": 8473,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8507,
									"end": 8508,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8489,
									"end": 8509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8489,
									"end": 8509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8509,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8484,
									"end": 8509,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8541,
									"end": 8542,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8523,
									"end": 8543,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8523,
									"end": 8543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8518,
									"end": 8543,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8518,
									"end": 8543,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8578,
									"end": 8579,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8575,
									"end": 8576,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8571,
									"end": 8580,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8618,
									"end": 8629,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8600,
									"end": 8630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8600,
									"end": 8630,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8630,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8630,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8779,
									"end": 8780,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8770,
									"end": 8777,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8766,
									"end": 8781,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8763,
									"end": 8764,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8760,
									"end": 8782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8740,
									"end": 8741,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8733,
									"end": 8742,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8796,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 8809,
									"end": 8827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8809,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8690,
									"end": 8829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8474,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8882,
									"end": 8885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8919,
									"end": 8920,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8901,
									"end": 8921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8901,
									"end": 8921,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8896,
									"end": 8921,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 8935,
									"end": 8955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8935,
									"end": 8955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8978,
									"end": 8979,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8976,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8971,
									"end": 8980,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8964,
									"end": 8980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8999,
									"end": 9002,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8996,
									"end": 8997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8993,
									"end": 9003,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 9006,
									"end": 9024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9006,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8990,
									"end": 9026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8842,
									"end": 9033,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9144,
									"end": 9149,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 9126,
									"end": 9150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9126,
									"end": 9150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9121,
									"end": 9124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9114,
									"end": 9151,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9039,
									"end": 9157,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9312,
									"end": 9316,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9350,
									"end": 9352,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9339,
									"end": 9348,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9335,
									"end": 9353,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9327,
									"end": 9353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9431,
									"end": 9432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9420,
									"end": 9429,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9416,
									"end": 9433,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9407,
									"end": 9413,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 9363,
									"end": 9434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9363,
									"end": 9434,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9512,
									"end": 9514,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9501,
									"end": 9510,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9497,
									"end": 9515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9488,
									"end": 9494,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 9444,
									"end": 9516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9444,
									"end": 9516,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9594,
									"end": 9596,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9583,
									"end": 9592,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9579,
									"end": 9597,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9570,
									"end": 9576,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 9526,
									"end": 9598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9526,
									"end": 9598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9163,
									"end": 9605,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9704,
									"end": 9708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9742,
									"end": 9744,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9731,
									"end": 9740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9727,
									"end": 9745,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 9745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9823,
									"end": 9824,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9812,
									"end": 9821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9808,
									"end": 9825,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9799,
									"end": 9805,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 9755,
									"end": 9826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9755,
									"end": 9826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9611,
									"end": 9833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 634,
									"end": 2893,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c1f0ad3d570470af07a16992dbb386b0df97685a6104fc32e390373d6006e864736f6c634300081a0033",
									".code": [
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "BC3D6DC3"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "BC3D6DC3"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "C1280AE7"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "DDCA3F43"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "F2C298BE"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "96EB64A9"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "A035B1FE"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "A0D81BA6"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "651DC0DF"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "651DC0DF"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "738F5B5B"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "86E6E222"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2675,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2660,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2660,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2660,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2660,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2710,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2722,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 2710,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2795,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2786,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2786,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2825,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2857,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2876,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2847,
											"end": 2884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2847,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2891,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 2893,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2090,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2090,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1028,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1028,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1028,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1585,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1585,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1125,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1125,
											"end": 1156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1854,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1854,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1968,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1968,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1968,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1162,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1435,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1435,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2199,
											"end": 2203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2192,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2204,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2178,
											"end": 2182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2171,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2171,
											"end": 2189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2248,
											"end": 2252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2236,
											"end": 2253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2253,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2236,
											"end": 2260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2260,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2228,
											"end": 2287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2228,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2343,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2344,
											"end": 2348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2332,
											"end": 2349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2349,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2305,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2360,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2305,
											"end": 2360,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2297,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2297,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2434,
											"end": 2443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2427,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2444,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2427,
											"end": 2450,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2450,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2450,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2480,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2496,
											"end": 2505,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2489,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2506,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2489,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2489,
											"end": 2523,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2536,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2525,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2549,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2549,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2470,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2550,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2470,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2597,
											"end": 2598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2582,
											"end": 2586,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2570,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2587,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2570,
											"end": 2594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1028,
											"end": 1066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1072,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1652,
											"end": 1693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1657,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1668,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1669,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1652,
											"end": 1676,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1652,
											"end": 1693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1693,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1644,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1749,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1712,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1712,
											"end": 1732,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1712,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1704,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1773,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1760,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1816,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1825,
											"end": 1835,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1840,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1806,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1806,
											"end": 1841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1841,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1806,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1585,
											"end": 1848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1912,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1942,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1954,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1912,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1912,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2057,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2058,
											"end": 2062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2051,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2063,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2077,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1521,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1508,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 1492,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1492,
											"end": 1521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1568,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1547,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1548,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 276,
											"end": 456,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 276,
											"end": 456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 324,
											"end": 401,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 450,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 462,
											"end": 647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 519,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 519,
											"end": 539,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 514,
											"end": 539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 553,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 573,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 548,
											"end": 573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 582,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 597,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 597,
											"end": 615,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 617,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 632,
											"end": 641,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 627,
											"end": 641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 627,
											"end": 641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 462,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 716,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 716,
											"end": 736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 716,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 716,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 736,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 750,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 768,
											"end": 769,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 750,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 750,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 750,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 750,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 745,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 798,
											"end": 807,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 845,
											"end": 856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 827,
											"end": 857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 827,
											"end": 857,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 816,
											"end": 857,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 816,
											"end": 857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1007,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 993,
											"end": 1008,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 990,
											"end": 991,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 960,
											"end": 969,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1023,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 917,
											"end": 1056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 1036,
											"end": 1054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 1036,
											"end": 1054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1056,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 917,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 701,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 653,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1170,
											"end": 1181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1336,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1222,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1336,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1222,
											"end": 1336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1740,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1342,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 1522,
											"end": 1605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1703,
											"end": 1706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 1614,
											"end": 1707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1614,
											"end": 1707,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1614,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 2125,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1746,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1930,
											"end": 1933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2095,
											"end": 2098,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1952,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1952,
											"end": 2099,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1952,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2099,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 2125,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 2125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 2125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2191,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2186,
											"end": 2211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2243,
											"end": 2244,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2225,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 2225,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2245,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2271,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2295,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2281,
											"end": 2318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2298,
											"end": 2316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 2298,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2281,
											"end": 2318,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2281,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2430,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2331,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2520,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2560,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2561,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2599,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2750,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 2611,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2707,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2730,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 2739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2716,
											"end": 2743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2858,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 2756,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2844,
											"end": 2851,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2841,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2852,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2852,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2858,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 3013,
											"end": 3018,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 2980,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 2980,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3099,
											"end": 3105,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3035,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3035,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3106,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3028,
											"end": 3106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3168,
											"end": 3171,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3161,
											"end": 3165,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3166,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3115,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3115,
											"end": 3180,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3115,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 3227,
											"end": 3233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 3205,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3205,
											"end": 3234,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 3205,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3457,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3435,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3458,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3475,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 3475,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3641,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3566,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3764,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 3647,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3754,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3887,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 3770,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3869,
											"end": 3881,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 4019,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3893,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 4012,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4013,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 4019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 4019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 4019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3893,
											"end": 4019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4109,
											"end": 4114,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4091,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4115,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4091,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4249,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4127,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4218,
											"end": 4223,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4200,
											"end": 4224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4200,
											"end": 4224,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4200,
											"end": 4224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4198,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4225,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 4180,
											"end": 4243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4239,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4229,
											"end": 4241,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4180,
											"end": 4243,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 4180,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4301,
											"end": 4306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4346,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4346,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4317,
											"end": 4346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 4382,
											"end": 4387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4355,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 4355,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4400,
											"end": 4522,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4400,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 4473,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4473,
											"end": 4497,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 4473,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4498,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 4453,
											"end": 4516,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4510,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4516,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 4453,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4400,
											"end": 4522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4400,
											"end": 4522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4619,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 4655,
											"end": 4660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 4628,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4661,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 4628,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 4784,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4773,
											"end": 4796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4801,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4804,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4804,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4766,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4985,
											"end": 4991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 4992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 4949,
											"end": 5002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 5002,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 4949,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4939,
											"end": 5002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 5012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5113,
											"end": 5119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5111,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5077,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5140,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 5147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5243,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5153,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5235,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5237,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5358,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5249,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 5345,
											"end": 5350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5330,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5351,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 5330,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5325,
											"end": 5328,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5352,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5491,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5502,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5502,
											"end": 5567,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 5502,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5580,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5685,
											"end": 5690,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5667,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5691,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5667,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 5838,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5812,
											"end": 5838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5901,
											"end": 5918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5892,
											"end": 5898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5848,
											"end": 5919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5919,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 5848,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5704,
											"end": 5926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6023,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6076,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6060,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6049,
											"end": 6072,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6045,
											"end": 6077,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6161,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 6042,
											"end": 6161,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6080,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6080,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6159,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 6080,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6042,
											"end": 6161,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 6042,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 6270,
											"end": 6277,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6246,
											"end": 6268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6225,
											"end": 6278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6278,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 6225,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6215,
											"end": 6278,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6215,
											"end": 6278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6329,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6353,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6389,
											"end": 6395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6374,
											"end": 6396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 6353,
											"end": 6406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6353,
											"end": 6406,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 6353,
											"end": 6406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6406,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6343,
											"end": 6406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6298,
											"end": 6416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6481,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6526,
											"end": 6533,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6517,
											"end": 6523,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6515,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6481,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6534,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6481,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6426,
											"end": 6544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5932,
											"end": 6551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6557,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6592,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6621,
											"end": 6637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6557,
											"end": 6643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6761,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6649,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6748,
											"end": 6753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6732,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 6732,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6727,
											"end": 6730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6856,
											"end": 6860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6871,
											"end": 6897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6971,
											"end": 6972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6969,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6956,
											"end": 6973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6947,
											"end": 6953,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6907,
											"end": 6974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6907,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6767,
											"end": 6981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6987,
											"end": 7104,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6987,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7086,
											"end": 7098,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7227,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7110,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7209,
											"end": 7221,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7233,
											"end": 7413,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7233,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7406,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7399,
											"end": 7400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7700,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7419,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7502,
											"end": 7529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7529,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7502,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7494,
											"end": 7500,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7490,
											"end": 7530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7620,
											"end": 7630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7639,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7614,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7584,
											"end": 7594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7581,
											"end": 7615,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7640,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7663,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7575,
											"end": 7663,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7643,
											"end": 7661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7643,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7575,
											"end": 7663,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7575,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7693,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7679,
											"end": 7681,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7672,
											"end": 7694,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7462,
											"end": 7700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7700,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7419,
											"end": 7700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7835,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 7706,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7767,
											"end": 7787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7767,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7824,
											"end": 7828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7796,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7796,
											"end": 7829,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7796,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8149,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7841,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 8011,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7982,
											"end": 8012,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8035,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 7979,
											"end": 8035,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 8015,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8035,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 7979,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 8053,
											"end": 8082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 8053,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8137,
											"end": 8141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8131,
											"end": 8135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7841,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8303,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8155,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8253,
											"end": 8259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8243,
											"end": 8246,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8260,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8283,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8387,
											"end": 8392,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8428,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8470,
											"end": 8476,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 8428,
											"end": 8477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8477,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 8428,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8412,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8412,
											"end": 8478,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 8412,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8403,
											"end": 8478,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8403,
											"end": 8478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8487,
											"end": 8508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8543,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8532,
											"end": 8537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8528,
											"end": 8544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8580,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8574,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8563,
											"end": 8566,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8556,
											"end": 8581,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8665,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8553,
											"end": 8665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8584,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8553,
											"end": 8665,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 8553,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8711,
											"end": 8714,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8674,
											"end": 8728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8674,
											"end": 8728,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 8674,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8393,
											"end": 8734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8309,
											"end": 8734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8859,
											"end": 8862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8856,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8844,
											"end": 8850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8840,
											"end": 8857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8863,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 8826,
											"end": 8948,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8867,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 8867,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8948,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 8826,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8984,
											"end": 8990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8971,
											"end": 8991,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9084,
											"end": 9087,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9069,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9057,
											"end": 9074,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 9009,
											"end": 9088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9088,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 9009,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8816,
											"end": 9094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8754,
											"end": 9094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9247,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9233,
											"end": 9242,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9231,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9220,
											"end": 9243,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9248,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9213,
											"end": 9332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9251,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 9251,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9330,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 9251,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9332,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 9213,
											"end": 9332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9388,
											"end": 9397,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9384,
											"end": 9401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9371,
											"end": 9402,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9429,
											"end": 9447,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9418,
											"end": 9448,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9532,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9415,
											"end": 9532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9451,
											"end": 9530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 9451,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9532,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 9415,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9611,
											"end": 9618,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9600,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9587,
											"end": 9609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9556,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9619,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9556,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9619,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9546,
											"end": 9619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9685,
											"end": 9694,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 9700,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9719,
											"end": 9725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9746,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 9749,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 9749,
											"end": 9828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9828,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 9749,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9713,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9909,
											"end": 9916,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9854,
											"end": 9917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9917,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9854,
											"end": 9917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9844,
											"end": 9917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9639,
											"end": 9927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9100,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10005,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10048,
											"end": 10050,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10027,
											"end": 10034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10019,
											"end": 10051,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10135,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 10016,
											"end": 10135,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 10054,
											"end": 10133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 10054,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10135,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 10016,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10244,
											"end": 10251,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10235,
											"end": 10241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10224,
											"end": 10233,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10220,
											"end": 10242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 10199,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10199,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10189,
											"end": 10252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10145,
											"end": 10262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10344,
											"end": 10350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10381,
											"end": 10390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10372,
											"end": 10379,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10391,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10364,
											"end": 10396,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10480,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 10361,
											"end": 10480,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 10399,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10361,
											"end": 10480,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 10361,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10536,
											"end": 10545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10519,
											"end": 10550,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10577,
											"end": 10595,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10569,
											"end": 10575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10566,
											"end": 10596,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10680,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 10563,
											"end": 10680,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 10599,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 10599,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10599,
											"end": 10678,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 10599,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10563,
											"end": 10680,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 10563,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 10759,
											"end": 10766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10750,
											"end": 10756,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10739,
											"end": 10748,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10735,
											"end": 10757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10704,
											"end": 10767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10704,
											"end": 10767,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 10704,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10694,
											"end": 10767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10694,
											"end": 10767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10275,
											"end": 10784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10959,
											"end": 10963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10986,
											"end": 10995,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10982,
											"end": 11000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10974,
											"end": 11000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11046,
											"end": 11055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11040,
											"end": 11044,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11036,
											"end": 11056,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11030,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11017,
											"end": 11034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11010,
											"end": 11057,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 11147,
											"end": 11151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11138,
											"end": 11144,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 11074,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11074,
											"end": 11152,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 11074,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11228,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11215,
											"end": 11233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11212,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 11162,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11162,
											"end": 11234,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 11162,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11310,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11288,
											"end": 11294,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 11244,
											"end": 11316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 11244,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 11323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11447,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11329,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 11434,
											"end": 11439,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 11416,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11416,
											"end": 11440,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 11416,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11329,
											"end": 11447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11573,
											"end": 11582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11569,
											"end": 11587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11654,
											"end": 11663,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11650,
											"end": 11667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11597,
											"end": 11668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 11597,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11806,
											"end": 11808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11794,
											"end": 11803,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11785,
											"end": 11792,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11781,
											"end": 11804,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11777,
											"end": 11809,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11774,
											"end": 11893,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11774,
											"end": 11893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 11774,
											"end": 11893,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11812,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 11812,
											"end": 11891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 11812,
											"end": 11891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11812,
											"end": 11891,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 11812,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11774,
											"end": 11893,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 11774,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 12002,
											"end": 12009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11993,
											"end": 11999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11982,
											"end": 11991,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12000,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 12010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 11957,
											"end": 12010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 12010,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11957,
											"end": 12010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 12010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 12010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11903,
											"end": 12020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12059,
											"end": 12061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 12130,
											"end": 12137,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 12121,
											"end": 12127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12110,
											"end": 12119,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12106,
											"end": 12128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12085,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 12085,
											"end": 12138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12085,
											"end": 12138,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 12085,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12075,
											"end": 12138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12030,
											"end": 12148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11681,
											"end": 12155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12161,
											"end": 12341,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 12161,
											"end": 12341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12209,
											"end": 12286,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12206,
											"end": 12207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12199,
											"end": 12287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12306,
											"end": 12310,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12296,
											"end": 12311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12330,
											"end": 12334,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12327,
											"end": 12328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12335,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12667,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 12347,
											"end": 12667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12429,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 12422,
											"end": 12426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12418,
											"end": 12430,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12408,
											"end": 12430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12408,
											"end": 12430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12475,
											"end": 12476,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12469,
											"end": 12473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12465,
											"end": 12477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12486,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 12486,
											"end": 12567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12552,
											"end": 12556,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 12544,
											"end": 12550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12540,
											"end": 12557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12486,
											"end": 12567,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 12486,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12614,
											"end": 12616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12606,
											"end": 12612,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12603,
											"end": 12617,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12580,
											"end": 12618,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12577,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 12577,
											"end": 12661,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 12633,
											"end": 12651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 12633,
											"end": 12651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12577,
											"end": 12661,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 12577,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12398,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12667,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12347,
											"end": 12667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12775,
											"end": 12786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12812,
											"end": 12815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12673,
											"end": 12821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 12936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12961,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12994,
											"end": 12999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12961,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 12961,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12961,
											"end": 13000,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 12961,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13016,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 13098,
											"end": 13104,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13093,
											"end": 13096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13016,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 13016,
											"end": 13105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13016,
											"end": 13105,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 13016,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13009,
											"end": 13105,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13009,
											"end": 13105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13114,
											"end": 13179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 13172,
											"end": 13178,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13167,
											"end": 13170,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13153,
											"end": 13158,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13149,
											"end": 13165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13114,
											"end": 13179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 13114,
											"end": 13179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13114,
											"end": 13179,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 13114,
											"end": 13179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13204,
											"end": 13210,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13199,
											"end": 13202,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13195,
											"end": 13211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13188,
											"end": 13211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13188,
											"end": 13211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 13217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12827,
											"end": 13217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13355,
											"end": 13358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13377,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13468,
											"end": 13471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13459,
											"end": 13465,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 13377,
											"end": 13472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13472,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 13377,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13370,
											"end": 13472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13370,
											"end": 13472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13489,
											"end": 13492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13482,
											"end": 13492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13482,
											"end": 13492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13223,
											"end": 13498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13671,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 13504,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13644,
											"end": 13663,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F2073756368207465727269746F7279000000000000000000000000000000"
										},
										{
											"begin": 13640,
											"end": 13641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13628,
											"end": 13642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13621,
											"end": 13664,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13504,
											"end": 13671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 14043,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 13677,
											"end": 14043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13819,
											"end": 13822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13840,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 13904,
											"end": 13906,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13840,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 13840,
											"end": 13907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13840,
											"end": 13907,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 13840,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13833,
											"end": 13907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13833,
											"end": 13907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13916,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 14005,
											"end": 14008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13916,
											"end": 14009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 13916,
											"end": 14009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13916,
											"end": 14009,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 13916,
											"end": 14009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14034,
											"end": 14036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14029,
											"end": 14032,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14025,
											"end": 14037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14018,
											"end": 14037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14018,
											"end": 14037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 14043,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 14043,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 14043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13677,
											"end": 14043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14049,
											"end": 14468,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 14049,
											"end": 14468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14215,
											"end": 14219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14253,
											"end": 14255,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14242,
											"end": 14251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14238,
											"end": 14256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14230,
											"end": 14256,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14230,
											"end": 14256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14302,
											"end": 14311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14296,
											"end": 14300,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14292,
											"end": 14312,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14288,
											"end": 14289,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14277,
											"end": 14286,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14273,
											"end": 14290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14330,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14456,
											"end": 14460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14330,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 14330,
											"end": 14461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14330,
											"end": 14461,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 14330,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14322,
											"end": 14461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14322,
											"end": 14461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14049,
											"end": 14468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14049,
											"end": 14468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14049,
											"end": 14468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14049,
											"end": 14468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14655,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 14474,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14647,
											"name": "PUSH",
											"source": 7,
											"value": "486F72646520646F65736E2774206861766520656E6F75676820706F77657200"
										},
										{
											"begin": 14610,
											"end": 14611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14602,
											"end": 14608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14598,
											"end": 14612,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14591,
											"end": 14648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14474,
											"end": 14655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 14888,
											"end": 14890,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14883,
											"end": 14886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 14824,
											"end": 14891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 14824,
											"end": 14891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 14989,
											"end": 14992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 14900,
											"end": 14993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 14900,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15018,
											"end": 15020,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15013,
											"end": 15016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15009,
											"end": 15021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15002,
											"end": 15021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 15027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14661,
											"end": 15027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15199,
											"end": 15203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15237,
											"end": 15239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15226,
											"end": 15235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15222,
											"end": 15240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15214,
											"end": 15240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15280,
											"end": 15284,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15276,
											"end": 15296,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15272,
											"end": 15273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15257,
											"end": 15274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15250,
											"end": 15297,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 15440,
											"end": 15444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 15314,
											"end": 15445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 15314,
											"end": 15445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15033,
											"end": 15452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15033,
											"end": 15452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15458,
											"end": 15638,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 15458,
											"end": 15638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15506,
											"end": 15583,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15503,
											"end": 15504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15496,
											"end": 15584,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15603,
											"end": 15607,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 15600,
											"end": 15601,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15593,
											"end": 15608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15627,
											"end": 15631,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15624,
											"end": 15625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15824,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 15644,
											"end": 15824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15692,
											"end": 15769,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15689,
											"end": 15690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15682,
											"end": 15770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15789,
											"end": 15793,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 15786,
											"end": 15787,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 15779,
											"end": 15794,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15813,
											"end": 15817,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15810,
											"end": 15811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15818,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15979,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 15830,
											"end": 15979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15879,
											"end": 15885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15913,
											"end": 15918,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15907,
											"end": 15919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 15897,
											"end": 15919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15897,
											"end": 15919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 15965,
											"end": 15971,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 15972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 15939,
											"end": 15972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 15972,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 15939,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 15972,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15929,
											"end": 15972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15979,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15830,
											"end": 15979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16126,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 15985,
											"end": 16126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16034,
											"end": 16038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16057,
											"end": 16060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16080,
											"end": 16083,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16077,
											"end": 16078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16070,
											"end": 16084,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16114,
											"end": 16118,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16111,
											"end": 16112,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16101,
											"end": 16119,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 16093,
											"end": 16119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16093,
											"end": 16119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16225,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 16132,
											"end": 16225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16169,
											"end": 16175,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16216,
											"end": 16218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16211,
											"end": 16213,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 16204,
											"end": 16209,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16200,
											"end": 16214,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16196,
											"end": 16219,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16219,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16186,
											"end": 16219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16132,
											"end": 16225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16275,
											"end": 16283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16325,
											"end": 16330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16319,
											"end": 16323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16315,
											"end": 16331,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 16294,
											"end": 16331,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16294,
											"end": 16331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16231,
											"end": 16338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16413,
											"end": 16419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16463,
											"end": 16464,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 16451,
											"end": 16461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 16516,
											"end": 16582,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16505,
											"end": 16514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 16486,
											"end": 16583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16486,
											"end": 16583,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 16486,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16604,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 16634,
											"end": 16642,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16623,
											"end": 16632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16604,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 16604,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16604,
											"end": 16643,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 16604,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16592,
											"end": 16643,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 16592,
											"end": 16643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16676,
											"end": 16680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16672,
											"end": 16681,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 16665,
											"end": 16670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16661,
											"end": 16682,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16652,
											"end": 16682,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16652,
											"end": 16682,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16725,
											"end": 16729,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 16715,
											"end": 16723,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 16711,
											"end": 16730,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 16704,
											"end": 16709,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16701,
											"end": 16731,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 16691,
											"end": 16731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16691,
											"end": 16731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16420,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16420,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16344,
											"end": 16737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16803,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 16743,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16771,
											"end": 16774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16792,
											"end": 16797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16785,
											"end": 16797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16743,
											"end": 16803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16951,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 16809,
											"end": 16951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16859,
											"end": 16868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16892,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 16910,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16919,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 16937,
											"end": 16942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16919,
											"end": 16943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 16919,
											"end": 16943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16919,
											"end": 16943,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 16919,
											"end": 16943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16910,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 16910,
											"end": 16944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16910,
											"end": 16944,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 16910,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16892,
											"end": 16945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 16892,
											"end": 16945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16892,
											"end": 16945,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 16892,
											"end": 16945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16879,
											"end": 16945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16809,
											"end": 16951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16957,
											"end": 17032,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 16957,
											"end": 17032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17000,
											"end": 17003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17021,
											"end": 17026,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17026,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17014,
											"end": 17026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16957,
											"end": 17032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16957,
											"end": 17032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16957,
											"end": 17032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16957,
											"end": 17032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17307,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 17038,
											"end": 17307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 17179,
											"end": 17186,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 17148,
											"end": 17187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17148,
											"end": 17187,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 17148,
											"end": 17187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17209,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 17258,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 17282,
											"end": 17298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17258,
											"end": 17299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 17258,
											"end": 17299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17258,
											"end": 17299,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 17258,
											"end": 17299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17250,
											"end": 17256,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17243,
											"end": 17247,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17237,
											"end": 17248,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 17209,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 17209,
											"end": 17300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17209,
											"end": 17300,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 17209,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17203,
											"end": 17207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17196,
											"end": 17301,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 17114,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17038,
											"end": 17307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17386,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 17313,
											"end": 17386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17358,
											"end": 17361,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17313,
											"end": 17386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17313,
											"end": 17386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17392,
											"end": 17581,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 17392,
											"end": 17581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17469,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 17469,
											"end": 17501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 17469,
											"end": 17501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17469,
											"end": 17501,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 17469,
											"end": 17501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17510,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17568,
											"end": 17574,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17560,
											"end": 17566,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17554,
											"end": 17558,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17510,
											"end": 17575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 17510,
											"end": 17575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17510,
											"end": 17575,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 17510,
											"end": 17575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17392,
											"end": 17581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17392,
											"end": 17581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17392,
											"end": 17581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17587,
											"end": 17773,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 17587,
											"end": 17773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17664,
											"end": 17667,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17657,
											"end": 17662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17654,
											"end": 17668,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17755,
											"end": 17756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17748,
											"end": 17753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 17718,
											"end": 17757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17718,
											"end": 17757,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 17718,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17691,
											"end": 17692,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 17684,
											"end": 17689,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17680,
											"end": 17693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17671,
											"end": 17693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17671,
											"end": 17693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 17647,
											"end": 17767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17587,
											"end": 17773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17587,
											"end": 17773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17587,
											"end": 17773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18322,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 17779,
											"end": 18322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17880,
											"end": 17882,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17875,
											"end": 17878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17872,
											"end": 17883,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 18315,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 17869,
											"end": 18315,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17914,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 17946,
											"end": 17951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17914,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 17914,
											"end": 17952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17914,
											"end": 17952,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 17914,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17998,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 18016,
											"end": 18026,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 17998,
											"end": 18027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 17998,
											"end": 18027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17998,
											"end": 18027,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 17998,
											"end": 18027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17988,
											"end": 17996,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17984,
											"end": 18028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18181,
											"end": 18183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18169,
											"end": 18179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18166,
											"end": 18184,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18163,
											"end": 18212,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18163,
											"end": 18212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18163,
											"end": 18212,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 18202,
											"end": 18210,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18187,
											"end": 18210,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18187,
											"end": 18210,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18163,
											"end": 18212,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 18163,
											"end": 18212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 18281,
											"end": 18303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 18299,
											"end": 18302,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 18281,
											"end": 18303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 18281,
											"end": 18303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18281,
											"end": 18303,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 18281,
											"end": 18303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18271,
											"end": 18279,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18267,
											"end": 18304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18254,
											"end": 18265,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18305,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 18225,
											"end": 18305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18305,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 18225,
											"end": 18305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17884,
											"end": 18315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17884,
											"end": 18315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17869,
											"end": 18315,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 17869,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18382,
											"end": 18390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18432,
											"end": 18437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18426,
											"end": 18430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18422,
											"end": 18438,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 18401,
											"end": 18438,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18401,
											"end": 18438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18495,
											"end": 18501,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18528,
											"end": 18579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 18576,
											"end": 18577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18572,
											"end": 18578,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18569,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18561,
											"end": 18562,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 18557,
											"end": 18570,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18528,
											"end": 18579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18528,
											"end": 18579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18528,
											"end": 18579,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 18528,
											"end": 18579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18524,
											"end": 18580,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 18609,
											"end": 18613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18603,
											"end": 18607,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18599,
											"end": 18614,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18589,
											"end": 18614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18589,
											"end": 18614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18502,
											"end": 18620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18451,
											"end": 18620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18701,
											"end": 18705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18847,
											"end": 18876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 18872,
											"end": 18875,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18847,
											"end": 18876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 18847,
											"end": 18876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18847,
											"end": 18876,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 18847,
											"end": 18876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18839,
											"end": 18876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18839,
											"end": 18876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18909,
											"end": 18912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18906,
											"end": 18907,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 18902,
											"end": 18913,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 18896,
											"end": 18900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 18914,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 18885,
											"end": 18914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18885,
											"end": 18914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18625,
											"end": 18920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19036,
											"end": 19039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19030,
											"end": 19034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19027,
											"end": 19040,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19050,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19024,
											"end": 19050,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19043,
											"end": 19048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19043,
											"end": 19048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19043,
											"end": 19048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 19043,
											"end": 19048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19050,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 19024,
											"end": 19050,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19074,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 19104,
											"end": 19107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19074,
											"end": 19108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 19074,
											"end": 19108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19074,
											"end": 19108,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 19074,
											"end": 19108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19173,
											"end": 19191,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19165,
											"end": 19171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19162,
											"end": 19192,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19159,
											"end": 19215,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19159,
											"end": 19215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 19159,
											"end": 19215,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 19195,
											"end": 19213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19159,
											"end": 19215,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 19159,
											"end": 19215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19239,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 19271,
											"end": 19275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19265,
											"end": 19276,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19239,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 19239,
											"end": 19277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19239,
											"end": 19277,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 19239,
											"end": 19277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 19384,
											"end": 19390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19376,
											"end": 19382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19374,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 19324,
											"end": 19391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19324,
											"end": 19391,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 19324,
											"end": 19391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19418,
											"end": 19419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19447,
											"end": 19449,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 19439,
											"end": 19445,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19436,
											"end": 19450,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19464,
											"end": 19465,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20175,
											"end": 20176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20192,
											"end": 20198,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20189,
											"end": 20266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20241,
											"end": 20250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20236,
											"end": 20239,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 20232,
											"end": 20251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20226,
											"end": 20252,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20217,
											"end": 20252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20217,
											"end": 20252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20266,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 20189,
											"end": 20266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20292,
											"end": 20359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20352,
											"end": 20358,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20345,
											"end": 20350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20292,
											"end": 20359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 20292,
											"end": 20359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20292,
											"end": 20359,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 20292,
											"end": 20359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20286,
											"end": 20290,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20279,
											"end": 20360,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20148,
											"end": 20370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19429,
											"end": 20370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 19429,
											"end": 20370,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 19459,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19511,
											"end": 19515,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 19507,
											"end": 19516,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19499,
											"end": 19505,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19495,
											"end": 19517,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19537,
											"end": 19573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 19569,
											"end": 19572,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 19537,
											"end": 19573,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 19537,
											"end": 19573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19537,
											"end": 19573,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 19537,
											"end": 19573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19530,
											"end": 19573,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 19530,
											"end": 19573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 19632,
											"end": 19636,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 19600,
											"end": 19637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19600,
											"end": 19637,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 19600,
											"end": 19637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19659,
											"end": 19660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19687,
											"end": 19694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19684,
											"end": 19685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19681,
											"end": 19695,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19766,
											"end": 19775,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19761,
											"end": 19764,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19751,
											"end": 19777,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 19743,
											"end": 19749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19736,
											"end": 19778,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 19818,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19809,
											"end": 19815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19805,
											"end": 19819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19795,
											"end": 19819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19795,
											"end": 19819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19864,
											"end": 19865,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 19853,
											"end": 19862,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19849,
											"end": 19866,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19836,
											"end": 19866,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19836,
											"end": 19866,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19710,
											"end": 19714,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19707,
											"end": 19708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19703,
											"end": 19715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19698,
											"end": 19715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19698,
											"end": 19715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 19673,
											"end": 19880,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19908,
											"end": 19914,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19899,
											"end": 19906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19896,
											"end": 19915,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19893,
											"end": 20072,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19893,
											"end": 20072,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 19893,
											"end": 20072,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19966,
											"end": 19975,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19961,
											"end": 19964,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 19957,
											"end": 19976,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19951,
											"end": 19977,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20009,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 20051,
											"end": 20055,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20043,
											"end": 20049,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 20039,
											"end": 20056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20028,
											"end": 20037,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20009,
											"end": 20057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 20009,
											"end": 20057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20009,
											"end": 20057,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 20009,
											"end": 20057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20001,
											"end": 20007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19994,
											"end": 20058,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19916,
											"end": 20072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19893,
											"end": 20072,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 19893,
											"end": 20072,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20118,
											"end": 20119,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20114,
											"end": 20115,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 20106,
											"end": 20112,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 20102,
											"end": 20116,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 20098,
											"end": 20120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20092,
											"end": 20096,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 20085,
											"end": 20121,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 19466,
											"end": 20131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19466,
											"end": 20131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19466,
											"end": 20131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19429,
											"end": 20370,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 19429,
											"end": 20370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19429,
											"end": 20370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19014,
											"end": 20376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19014,
											"end": 20376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19014,
											"end": 20376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "tag",
											"source": 7,
											"value": "561"
										},
										{
											"begin": 18925,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18925,
											"end": 20376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20382,
											"end": 21777,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 20382,
											"end": 21777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20499,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 20532,
											"end": 20535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20499,
											"end": 20536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 20499,
											"end": 20536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20499,
											"end": 20536,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 20499,
											"end": 20536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20601,
											"end": 20619,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20593,
											"end": 20599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20590,
											"end": 20620,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20587,
											"end": 20643,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20587,
											"end": 20643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 20587,
											"end": 20643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20623,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 20623,
											"end": 20641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 20623,
											"end": 20641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20623,
											"end": 20641,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 20623,
											"end": 20641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20587,
											"end": 20643,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 20587,
											"end": 20643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20667,
											"end": 20705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 20699,
											"end": 20703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20693,
											"end": 20704,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20667,
											"end": 20705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 20667,
											"end": 20705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20667,
											"end": 20705,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 20667,
											"end": 20705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20752,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 20812,
											"end": 20818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20804,
											"end": 20810,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20798,
											"end": 20802,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20752,
											"end": 20819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 20752,
											"end": 20819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20752,
											"end": 20819,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 20752,
											"end": 20819,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20846,
											"end": 20847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20870,
											"end": 20874,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20857,
											"end": 20874,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20857,
											"end": 20874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20902,
											"end": 20904,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20894,
											"end": 20900,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20891,
											"end": 20905,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20919,
											"end": 20920,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21576,
											"end": 21577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21593,
											"end": 21599,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21590,
											"end": 21667,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21590,
											"end": 21667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 21590,
											"end": 21667,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21642,
											"end": 21651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21637,
											"end": 21640,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 21633,
											"end": 21652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21627,
											"end": 21653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21618,
											"end": 21653,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21618,
											"end": 21653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21590,
											"end": 21667,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 21590,
											"end": 21667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21693,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 21753,
											"end": 21759,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21746,
											"end": 21751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21693,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 21693,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21693,
											"end": 21760,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 21693,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21687,
											"end": 21691,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21680,
											"end": 21761,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21549,
											"end": 21771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20884,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 20884,
											"end": 21771,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 20914,
											"end": 21532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20966,
											"end": 20970,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20962,
											"end": 20971,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 20954,
											"end": 20960,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20950,
											"end": 20972,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21000,
											"end": 21037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 21032,
											"end": 21036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21000,
											"end": 21037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 21000,
											"end": 21037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21000,
											"end": 21037,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 21000,
											"end": 21037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21087,
											"end": 21094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21084,
											"end": 21085,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21081,
											"end": 21095,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21166,
											"end": 21175,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21161,
											"end": 21164,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21157,
											"end": 21176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21151,
											"end": 21177,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21143,
											"end": 21149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21136,
											"end": 21178,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21217,
											"end": 21218,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21209,
											"end": 21215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21205,
											"end": 21219,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21219,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21195,
											"end": 21219,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21264,
											"end": 21266,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21253,
											"end": 21262,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21249,
											"end": 21267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21236,
											"end": 21267,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 21236,
											"end": 21267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21110,
											"end": 21114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21107,
											"end": 21108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21103,
											"end": 21115,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21098,
											"end": 21115,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21098,
											"end": 21115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 21073,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21309,
											"end": 21315,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21307,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21297,
											"end": 21316,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21294,
											"end": 21473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21294,
											"end": 21473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 21294,
											"end": 21473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21367,
											"end": 21376,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21362,
											"end": 21365,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21358,
											"end": 21377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21352,
											"end": 21378,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 21452,
											"end": 21456,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 21444,
											"end": 21450,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21440,
											"end": 21457,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21429,
											"end": 21438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 21410,
											"end": 21458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 21410,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21402,
											"end": 21408,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21395,
											"end": 21459,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21317,
											"end": 21473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21294,
											"end": 21473,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 21294,
											"end": 21473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21519,
											"end": 21520,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21515,
											"end": 21516,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 21507,
											"end": 21513,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 21503,
											"end": 21517,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 21499,
											"end": 21521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21493,
											"end": 21497,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 21486,
											"end": 21522,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20921,
											"end": 21532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20921,
											"end": 21532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20921,
											"end": 21532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20884,
											"end": 21771,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 20884,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20884,
											"end": 21771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20474,
											"end": 21777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20474,
											"end": 21777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20474,
											"end": 21777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20382,
											"end": 21777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20382,
											"end": 21777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20382,
											"end": 21777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21823,
											"end": 21826,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21842,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 21860,
											"end": 21861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21842,
											"end": 21862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 21842,
											"end": 21862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21842,
											"end": 21862,
											"name": "tag",
											"source": 7,
											"value": "596"
										},
										{
											"begin": 21842,
											"end": 21862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 21862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 21862,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21876,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 21894,
											"end": 21895,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21876,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 21876,
											"end": 21896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21876,
											"end": 21896,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 21876,
											"end": 21896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21871,
											"end": 21896,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21871,
											"end": 21896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21919,
											"end": 21920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21916,
											"end": 21917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21912,
											"end": 21921,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21905,
											"end": 21921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21940,
											"end": 21943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 21937,
											"end": 21938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21934,
											"end": 21944,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 21931,
											"end": 21967,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21931,
											"end": 21967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 21931,
											"end": 21967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21947,
											"end": 21965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 21947,
											"end": 21965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 21947,
											"end": 21965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21947,
											"end": 21965,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 21947,
											"end": 21965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21931,
											"end": 21967,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 21931,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21783,
											"end": 21974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22129,
											"end": 22133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22167,
											"end": 22169,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 22156,
											"end": 22165,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22152,
											"end": 22170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22144,
											"end": 22170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22144,
											"end": 22170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 22248,
											"end": 22249,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22237,
											"end": 22246,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22233,
											"end": 22250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22224,
											"end": 22230,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 22180,
											"end": 22251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22180,
											"end": 22251,
											"name": "tag",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 22180,
											"end": 22251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22261,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 22329,
											"end": 22331,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22318,
											"end": 22327,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22314,
											"end": 22332,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22305,
											"end": 22311,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22261,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 22261,
											"end": 22333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22261,
											"end": 22333,
											"name": "tag",
											"source": 7,
											"value": "602"
										},
										{
											"begin": 22261,
											"end": 22333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 22411,
											"end": 22413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22400,
											"end": 22409,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22396,
											"end": 22414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22387,
											"end": 22393,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 22343,
											"end": 22415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22343,
											"end": 22415,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 22343,
											"end": 22415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21980,
											"end": 22422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"work/home/zombiecoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"City()": "a0d81ba6",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"capture(string,string)": "651dc0df",
							"decimals()": "313ce567",
							"fee()": "ddca3f43",
							"formHorde(string)": "bc3d6dc3",
							"getPower(string)": "c1280ae7",
							"hordes(string)": "738f5b5b",
							"infect(address)": "96eb64a9",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"price()": "a035b1fe",
							"register(string)": "f2c298be",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"territories(string)": "86e6e222",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"City\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"hordePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"hordeName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"capture\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"formHorde\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"hordes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"infect\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"territories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"hordePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"work/home/zombiecoin.sol\":\"Zombie\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"work/home/zombiecoin.sol\":{\"keccak256\":\"0x21925f73c075dacabd01f557bc9338d7c0cb683d865a2d6b7e2b1c2d300458a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd5a348e513e837a90f9b26a6df4fea4cb8c167504fa776dddc492eda3922294\",\"dweb:/ipfs/QmVd83c1WdNo1JKBuNQyJRVuGryCfVBYqLjD7AfoJe8Wsr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 971,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "users",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(User)952_storage)"
							},
							{
								"astId": 976,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "hordes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Horde)959_storage)"
							},
							{
								"astId": 981,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "territories",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Territory)966_storage)"
							},
							{
								"astId": 984,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "price",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 987,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "fee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 990,
								"contract": "work/home/zombiecoin.sol:Zombie",
								"label": "City",
								"offset": 0,
								"slot": "11",
								"type": "t_struct(Territory)966_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(User)952_storage)dyn_storage": {
								"base": "t_struct(User)952_storage",
								"encoding": "dynamic_array",
								"label": "struct Zombie.User[]",
								"numberOfBytes": "32"
							},
							"t_enum(Status)944": {
								"encoding": "inplace",
								"label": "enum Zombie.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(User)952_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Zombie.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)952_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Horde)959_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct Zombie.Horde)",
								"numberOfBytes": "32",
								"value": "t_struct(Horde)959_storage"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Territory)966_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct Zombie.Territory)",
								"numberOfBytes": "32",
								"value": "t_struct(Territory)966_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Horde)959_storage": {
								"encoding": "inplace",
								"label": "struct Zombie.Horde",
								"members": [
									{
										"astId": 956,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(User)952_storage)dyn_storage"
									},
									{
										"astId": 958,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Territory)966_storage": {
								"encoding": "inplace",
								"label": "struct Zombie.Territory",
								"members": [
									{
										"astId": 961,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 963,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "hordePower",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 965,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "reward",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(User)952_storage": {
								"encoding": "inplace",
								"label": "struct Zombie.User",
								"members": [
									{
										"astId": 946,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 948,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "wallet",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 951,
										"contract": "work/home/zombiecoin.sol:Zombie",
										"label": "status",
										"offset": 20,
										"slot": "1",
										"type": "t_enum(Status)944"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"work/home/zombiecoin.sol": {
				"ast": {
					"absolutePath": "work/home/zombiecoin.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Zombie": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "499:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1257,
							"sourceUnit": 800,
							"src": "524:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1257,
							"sourceUnit": 148,
							"src": "580:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"653:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "653:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "653:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"660:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "660:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "660:7:6"
								}
							],
							"canonicalName": "Zombie",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1256,
							"linearizedBaseContracts": [
								1256,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Zombie",
							"nameLocation": "643:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Zombie.Status",
									"id": 944,
									"members": [
										{
											"id": 942,
											"name": "Alive",
											"nameLocation": "695:5:6",
											"nodeType": "EnumValue",
											"src": "695:5:6"
										},
										{
											"id": 943,
											"name": "Zombie",
											"nameLocation": "710:6:6",
											"nodeType": "EnumValue",
											"src": "710:6:6"
										}
									],
									"name": "Status",
									"nameLocation": "678:6:6",
									"nodeType": "EnumDefinition",
									"src": "673:49:6"
								},
								{
									"canonicalName": "Zombie.User",
									"id": 952,
									"members": [
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "756:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "749:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 945,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "749:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "wallet",
											"nameLocation": "778:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "770:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 947,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "770:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 951,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "801:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 952,
											"src": "794:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Status_$944",
												"typeString": "enum Zombie.Status"
											},
											"typeName": {
												"id": 950,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 949,
													"name": "Status",
													"nameLocations": [
														"794:6:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 944,
													"src": "794:6:6"
												},
												"referencedDeclaration": 944,
												"src": "794:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$944",
													"typeString": "enum Zombie.Status"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "735:4:6",
									"nodeType": "StructDefinition",
									"scope": 1256,
									"src": "728:86:6",
									"visibility": "public"
								},
								{
									"canonicalName": "Zombie.Horde",
									"id": 959,
									"members": [
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "849:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "842:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage_ptr",
												"typeString": "struct Zombie.User[]"
											},
											"typeName": {
												"baseType": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "User",
														"nameLocations": [
															"842:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 952,
														"src": "842:4:6"
													},
													"referencedDeclaration": 952,
													"src": "842:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$952_storage_ptr",
														"typeString": "struct Zombie.User"
													}
												},
												"id": 955,
												"nodeType": "ArrayTypeName",
												"src": "842:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage_ptr",
													"typeString": "struct Zombie.User[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "870:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 959,
											"src": "865:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 957,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "865:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Horde",
									"nameLocation": "827:5:6",
									"nodeType": "StructDefinition",
									"scope": 1256,
									"src": "820:62:6",
									"visibility": "public"
								},
								{
									"canonicalName": "Zombie.Territory",
									"id": 966,
									"members": [
										{
											"constant": false,
											"id": 961,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "921:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 966,
											"src": "914:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 960,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "914:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 963,
											"mutability": "mutable",
											"name": "hordePower",
											"nameLocation": "940:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 966,
											"src": "935:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 962,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "935:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 965,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "965:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 966,
											"src": "960:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 964,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "960:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Territory",
									"nameLocation": "895:9:6",
									"nodeType": "StructDefinition",
									"scope": 1256,
									"src": "888:90:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 971,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "1017:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "984:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
										"typeString": "mapping(address => struct Zombie.User)"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 967,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "992:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "984:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
											"typeString": "mapping(address => struct Zombie.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 969,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 968,
												"name": "User",
												"nameLocations": [
													"1003:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 952,
												"src": "1003:4:6"
											},
											"referencedDeclaration": 952,
											"src": "1003:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$952_storage_ptr",
												"typeString": "struct Zombie.User"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "738f5b5b",
									"id": 976,
									"mutability": "mutable",
									"name": "hordes",
									"nameLocation": "1060:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1028:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
										"typeString": "mapping(string => struct Zombie.Horde)"
									},
									"typeName": {
										"id": 975,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 972,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1036:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1028:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
											"typeString": "mapping(string => struct Zombie.Horde)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 974,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 973,
												"name": "Horde",
												"nameLocations": [
													"1046:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 959,
												"src": "1046:5:6"
											},
											"referencedDeclaration": 959,
											"src": "1046:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Horde_$959_storage_ptr",
												"typeString": "struct Zombie.Horde"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "86e6e222",
									"id": 981,
									"mutability": "mutable",
									"name": "territories",
									"nameLocation": "1108:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1072:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
										"typeString": "mapping(string => struct Zombie.Territory)"
									},
									"typeName": {
										"id": 980,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 977,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1080:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1072:28:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
											"typeString": "mapping(string => struct Zombie.Territory)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 979,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 978,
												"name": "Territory",
												"nameLocations": [
													"1090:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 966,
												"src": "1090:9:6"
											},
											"referencedDeclaration": 966,
											"src": "1090:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Territory_$966_storage_ptr",
												"typeString": "struct Zombie.Territory"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a035b1fe",
									"id": 984,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "1137:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1125:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 982,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1125:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 983,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1145:11:6",
										"subdenomination": "gwei",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000_by_1",
											"typeString": "int_const 100000000000000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ddca3f43",
									"id": 987,
									"mutability": "mutable",
									"name": "fee",
									"nameLocation": "1174:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1162:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 985,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1162:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 986,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1180:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0d81ba6",
									"id": 990,
									"mutability": "mutable",
									"name": "City",
									"nameLocation": "1205:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1188:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Territory_$966_storage",
										"typeString": "struct Zombie.Territory"
									},
									"typeName": {
										"id": 989,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 988,
											"name": "Territory",
											"nameLocations": [
												"1188:9:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 966,
											"src": "1188:9:6"
										},
										"referencedDeclaration": 966,
										"src": "1188:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Territory_$966_storage_ptr",
											"typeString": "struct Zombie.Territory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "1274:155:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1002,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1290:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1294:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1290:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030303030",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1302:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000_by_1",
																	"typeString": "int_const 10000000"
																},
																"value": "10000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1313:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1006,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1319:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1319:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1313:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1302:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1001,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1284:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1284:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "1284:46:6"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1012,
															"name": "City",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1340:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Territory_$966_storage",
																"typeString": "struct Zombie.Territory storage ref"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1345:4:6",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 961,
														"src": "1340:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d616e68617474616e",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1352:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_fc23cfeb2d074ac93f122d2f5a097e4370fd41d2552c7db62ec1ae9d1cfb6da8",
															"typeString": "literal_string \"Manhattan\""
														},
														"value": "Manhattan"
													},
													"src": "1340:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1340:23:6"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1018,
															"name": "City",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1373:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Territory_$966_storage",
																"typeString": "struct Zombie.Territory storage ref"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1378:10:6",
														"memberName": "hordePower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 963,
														"src": "1373:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1391:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1373:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1373:21:6"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1024,
															"name": "City",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "1404:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Territory_$966_storage",
																"typeString": "struct Zombie.Territory storage ref"
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1409:6:6",
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 965,
														"src": "1404:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1418:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1404:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1404:18:6"
											}
										]
									},
									"id": 1031,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5a6f6d626965",
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1236:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
														"typeString": "literal_string \"Zombie\""
													},
													"value": "Zombie"
												},
												{
													"hexValue": "42524e53",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1246:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b33b4f2bcc7da8c416fcc622d5f9f432b60b138c7b1fac421af6897d50f94148",
														"typeString": "literal_string \"BRNS\""
													},
													"value": "BRNS"
												}
											],
											"id": 995,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 992,
												"name": "ERC20",
												"nameLocations": [
													"1230:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1230:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1230:23:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 997,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1262:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1266:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1262:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 999,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 996,
												"name": "Ownable",
												"nameLocations": [
													"1254:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1254:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1254:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1274:0:6"
									},
									"scope": 1256,
									"src": "1216:213:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "1482:93:6",
										"statements": [
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1036,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1492:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																	"typeString": "mapping(address => struct Zombie.User storage ref)"
																}
															},
															"id": 1039,
															"indexExpression": {
																"expression": {
																	"id": 1037,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1498:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1502:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1498:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1492:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$952_storage",
																"typeString": "struct Zombie.User storage ref"
															}
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1510:4:6",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "1492:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "1517:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1492:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1492:29:6"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1044,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1531:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																	"typeString": "mapping(address => struct Zombie.User storage ref)"
																}
															},
															"id": 1047,
															"indexExpression": {
																"expression": {
																	"id": 1045,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1537:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1541:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1537:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1531:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$952_storage",
																"typeString": "struct Zombie.User storage ref"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1549:6:6",
														"memberName": "wallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 948,
														"src": "1531:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1049,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1558:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1562:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1558:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1531:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1531:37:6"
											}
										]
									},
									"functionSelector": "f2c298be",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nameLocation": "1444:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1467:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1453:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1453:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:20:6"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:0:6"
									},
									"scope": 1256,
									"src": "1435:140:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1634:214:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$944",
																"typeString": "enum Zombie.Status"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1060,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1652:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																			"typeString": "mapping(address => struct Zombie.User storage ref)"
																		}
																	},
																	"id": 1063,
																	"indexExpression": {
																		"expression": {
																			"id": 1061,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1658:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1662:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1658:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1652:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$952_storage",
																		"typeString": "struct Zombie.User storage ref"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1670:6:6",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 951,
																"src": "1652:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$944",
																	"typeString": "enum Zombie.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1065,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1680:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$944_$",
																		"typeString": "type(enum Zombie.Status)"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1687:6:6",
																"memberName": "Zombie",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "1680:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$944",
																	"typeString": "enum Zombie.Status"
																}
															},
															"src": "1652:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1644:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1644:50:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$944",
																"typeString": "enum Zombie.Status"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1071,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "1712:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																			"typeString": "mapping(address => struct Zombie.User storage ref)"
																		}
																	},
																	"id": 1073,
																	"indexExpression": {
																		"id": 1072,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "1718:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1712:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$952_storage",
																		"typeString": "struct Zombie.User storage ref"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1726:6:6",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 951,
																"src": "1712:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$944",
																	"typeString": "enum Zombie.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1075,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "1736:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$944_$",
																		"typeString": "type(enum Zombie.Status)"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1743:6:6",
																"memberName": "Zombie",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 943,
																"src": "1736:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$944",
																	"typeString": "enum Zombie.Status"
																}
															},
															"src": "1712:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1704:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1704:46:6"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1080,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1760:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																	"typeString": "mapping(address => struct Zombie.User storage ref)"
																}
															},
															"id": 1082,
															"indexExpression": {
																"id": 1081,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "1766:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1760:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$952_storage",
																"typeString": "struct Zombie.User storage ref"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1774:6:6",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 951,
														"src": "1760:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$944",
															"typeString": "enum Zombie.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1084,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "1783:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$944_$",
																"typeString": "type(enum Zombie.Status)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1790:6:6",
														"memberName": "Zombie",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 943,
														"src": "1783:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$944",
															"typeString": "enum Zombie.Status"
														}
													},
													"src": "1760:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$944",
														"typeString": "enum Zombie.Status"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1760:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1089,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1816:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1816:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1091,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1825:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1829:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1825:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "313030",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1837:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"id": 1088,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1806:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1806:35:6"
											}
										]
									},
									"functionSelector": "96eb64a9",
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "infect",
									"nameLocation": "1594:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1609:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1601:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1600:16:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:0:6"
									},
									"scope": 1256,
									"src": "1585:263:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "1902:60:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1107,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "1937:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$952_storage_$",
																	"typeString": "mapping(address => struct Zombie.User storage ref)"
																}
															},
															"id": 1110,
															"indexExpression": {
																"expression": {
																	"id": 1108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1943:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1947:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1943:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1937:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$952_storage",
																"typeString": "struct Zombie.User storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_User_$952_storage",
																"typeString": "struct Zombie.User storage ref"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1102,
																	"name": "hordes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "1912:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																		"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																	}
																},
																"id": 1104,
																"indexExpression": {
																	"id": 1103,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "1919:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1912:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Horde_$959_storage",
																	"typeString": "struct Zombie.Horde storage ref"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1925:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 956,
															"src": "1912:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage",
																"typeString": "struct Zombie.User storage ref[] storage ref"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1932:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1912:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_User_$952_storage_$dyn_storage_ptr_$_t_struct$_User_$952_storage_$returns$__$attached_to$_t_array$_t_struct$_User_$952_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Zombie.User storage ref[] storage pointer,struct Zombie.User storage ref)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1912:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "1912:43:6"
											}
										]
									},
									"functionSelector": "bc3d6dc3",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "formHorde",
									"nameLocation": "1863:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1887:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "1873:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1098,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1873:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:20:6"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:6"
									},
									"scope": 1256,
									"src": "1854:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "2034:50:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 1121,
																"name": "hordes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "2051:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																	"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																}
															},
															"id": 1123,
															"indexExpression": {
																"id": 1122,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "2058:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2051:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Horde_$959_storage",
																"typeString": "struct Zombie.Horde storage ref"
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2064:6:6",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "2051:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage",
															"typeString": "struct Zombie.User storage ref[] storage ref"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2071:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2051:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1120,
												"id": 1126,
												"nodeType": "Return",
												"src": "2044:33:6"
											}
										]
									},
									"functionSelector": "c1280ae7",
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPower",
									"nameLocation": "1977:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2000:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "1986:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1986:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:20:6"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "2028:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:6:6"
									},
									"scope": 1256,
									"src": "1968:116:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "2161:444:6",
										"statements": [
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1135,
																"name": "hordes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "2171:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																	"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																}
															},
															"id": 1137,
															"indexExpression": {
																"id": 1136,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2178:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2171:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Horde_$959_storage",
																"typeString": "struct Zombie.Horde storage ref"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2184:5:6",
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "2171:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1139,
																	"name": "hordes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "2192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																		"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																	}
																},
																"id": 1141,
																"indexExpression": {
																	"id": 1140,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "2199:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2192:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Horde_$959_storage",
																	"typeString": "struct Zombie.Horde storage ref"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2205:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 956,
															"src": "2192:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage",
																"typeString": "struct Zombie.User storage ref[] storage ref"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2212:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2192:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2171:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1147,
																		"name": "territories",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2236:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
																			"typeString": "mapping(string memory => struct Zombie.Territory storage ref)"
																		}
																	},
																	"id": 1149,
																	"indexExpression": {
																		"id": 1148,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "2248:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2236:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Territory_$966_storage",
																		"typeString": "struct Zombie.Territory storage ref"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2254:6:6",
																"memberName": "reward",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 965,
																"src": "2236:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2264:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073756368207465727269746f7279",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2267:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b",
																"typeString": "literal_string \"No such territory\""
															},
															"value": "No such territory"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f96073365e5fbd25ee40219d6b6c938783977bff2b9ed45fcea69f4076c7268b",
																"typeString": "literal_string \"No such territory\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2228:59:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1157,
																		"name": "hordes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2305:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																			"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																		}
																	},
																	"id": 1159,
																	"indexExpression": {
																		"id": 1158,
																		"name": "hordeName",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "2312:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2305:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Horde_$959_storage",
																		"typeString": "struct Zombie.Horde storage ref"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2323:5:6",
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 958,
																"src": "2305:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1161,
																		"name": "territories",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2332:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
																			"typeString": "mapping(string memory => struct Zombie.Territory storage ref)"
																		}
																	},
																	"id": 1163,
																	"indexExpression": {
																		"id": 1162,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "2344:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2332:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Territory_$966_storage",
																		"typeString": "struct Zombie.Territory storage ref"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2350:10:6",
																"memberName": "hordePower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 963,
																"src": "2332:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2305:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "486f72646520646f65736e2774206861766520656e6f75676820706f776572",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2362:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74",
																"typeString": "literal_string \"Horde doesn't have enough power\""
															},
															"value": "Horde doesn't have enough power"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_542d540f40e2642a1e906baccd6385f3699efcd8f0f2081f2b79edd5cbc20f74",
																"typeString": "literal_string \"Horde doesn't have enough power\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2297:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2297:99:6"
											},
											{
												"body": {
													"id": 1198,
													"nodeType": "Block",
													"src": "2456:105:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1183,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "2480:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2480:7:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1185,
																						"name": "hordes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 976,
																						"src": "2489:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																							"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																						}
																					},
																					"id": 1187,
																					"indexExpression": {
																						"id": 1186,
																						"name": "hordeName",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1130,
																						"src": "2496:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2489:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Horde_$959_storage",
																						"typeString": "struct Zombie.Horde storage ref"
																					}
																				},
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2507:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 956,
																				"src": "2489:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_User_$952_storage_$dyn_storage",
																					"typeString": "struct Zombie.User storage ref[] storage ref"
																				}
																			},
																			"id": 1190,
																			"indexExpression": {
																				"id": 1189,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "2514:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2489:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$952_storage",
																				"typeString": "struct Zombie.User storage ref"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2517:6:6",
																		"memberName": "wallet",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 948,
																		"src": "2489:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1192,
																				"name": "territories",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "2525:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
																					"typeString": "mapping(string memory => struct Zombie.Territory storage ref)"
																				}
																			},
																			"id": 1194,
																			"indexExpression": {
																				"id": 1193,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "2537:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2525:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Territory_$966_storage",
																				"typeString": "struct Zombie.Territory storage ref"
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2543:6:6",
																		"memberName": "reward",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 965,
																		"src": "2525:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1182,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "2470:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2470:80:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "2470:80:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "2423:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1174,
																"name": "hordes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "2427:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Horde_$959_storage_$",
																	"typeString": "mapping(string memory => struct Zombie.Horde storage ref)"
																}
															},
															"id": 1176,
															"indexExpression": {
																"id": 1175,
																"name": "hordeName",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "2434:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2427:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Horde_$959_storage",
																"typeString": "struct Zombie.Horde storage ref"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2445:5:6",
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 958,
														"src": "2427:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2423:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"initializationExpression": {
													"assignments": [
														1170
													],
													"declarations": [
														{
															"constant": false,
															"id": 1170,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2416:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1199,
															"src": "2411:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1169,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2411:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1172,
													"initialValue": {
														"hexValue": "30",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2420:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2411:10:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2452:3:6",
														"subExpression": {
															"id": 1179,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2452:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ExpressionStatement",
													"src": "2452:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2406:155:6"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1200,
																"name": "territories",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "2570:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Territory_$966_storage_$",
																	"typeString": "mapping(string memory => struct Zombie.Territory storage ref)"
																}
															},
															"id": 1202,
															"indexExpression": {
																"id": 1201,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "2582:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2570:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Territory_$966_storage",
																"typeString": "struct Zombie.Territory storage ref"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2588:6:6",
														"memberName": "reward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 965,
														"src": "2570:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2597:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2570:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "2570:28:6"
											}
										]
									},
									"functionSelector": "651dc0df",
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "capture",
									"nameLocation": "2099:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "hordeName",
												"nameLocation": "2121:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2107:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2107:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2146:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "2132:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2132:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:45:6"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:0:6"
									},
									"scope": 1256,
									"src": "2090:515:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2638:253:6",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "2653:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2648:9:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2648:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2660:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2664:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2660:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2672:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "2660:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1217,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2678:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2660:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2648:33:6"
											},
											{
												"assignments": [
													1221,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2697:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2692:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2692:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1229,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2736:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1222,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "2710:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2710:7:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2718:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2710:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1225,
																"name": "_fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2730:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2710:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2691:48:6"
											},
											{
												"condition": {
													"id": 1230,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1221,
													"src": "2753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1232,
												"nodeType": "IfStatement",
												"src": "2749:14:6",
												"trueBody": {
													"id": 1231,
													"nodeType": "Block",
													"src": "2761:2:6",
													"statements": []
												}
											},
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "_count",
														"nameLocation": "2777:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2772:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2772:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1235,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2786:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2790:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2786:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1237,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2798:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2786:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2772:30:6"
											},
											{
												"assignments": [
													1241
												],
												"declarations": [
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2817:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1254,
														"src": "2812:10:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1240,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2812:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1242,
														"name": "_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "2825:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1243,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2832:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:25:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1247,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2857:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2857:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2866:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2870:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2866:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1251,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "2878:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1246,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2847:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2847:37:6"
											}
										]
									},
									"id": 1255,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2618:2:6"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2638:0:6"
									},
									"scope": 1256,
									"src": "2611:280:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "634:2259:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "499:2394:6"
				},
				"id": 6
			}
		}
	}
}